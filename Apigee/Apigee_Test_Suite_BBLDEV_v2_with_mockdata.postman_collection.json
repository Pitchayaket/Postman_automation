{
	"info": {
		"_postman_id": "c3c1d412-29fb-49a0-9ff8-b769ad2863ae",
		"name": "Apigee_Test_Suite_BBLDEV_v2_with_mockdata",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29873059"
	},
	"item": [
		{
			"name": "1.Generate ThaiQR_v2",
			"item": [
				{
					"name": "OAuth - Access Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response",
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    response = pm.response.json();",
									"    pm.collectionVariables.set('accessToken', response.accessToken);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{app-secret}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{app-key}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "CREATE READ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{api-host}}/oauth/accesstoken",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"oauth",
								"accesstoken"
							],
							"query": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.unset(\"request-ref\");",
									"pm.collectionVariables.unset(\"reference1\");",
									"",
									"const moment = require('moment');",
									"",
									"pm.collectionVariables.set(\"request-ref\", moment().format(\"yyyyMMDDHHmmss\"));",
									"pm.collectionVariables.set(\"reference1\", moment().format(\"yyyyMMDDHHmmss01\"));",
									"pm.collectionVariables.set(\"requestDate\", moment().format(\"yyyy-MM-DD\"));",
									"pm.collectionVariables.set(\"requestTime\", moment().format(\"HH:mm:ss\"));",
									"pm.collectionVariables.set(\"transmit-date-time\", moment().format(\"yyyy-MM-DDTHH:mm:ss.855+07:00\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"    let response = pm.response.json();",
									"    pm.collectionVariables.set(\"partner_signature\", response.signature);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"ABC SHOP\",\n    \"amount\": \"1.20\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"01\"\n      },\n      {\n        \"cardNetworkPerm\": \"02\"\n      }\n    ],\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"1234567890\",\n        \"reference3\": \"1234567891\"\n    },\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200101 Generate ThaiQR successfully input only Promptpay",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"000\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Success\");",
									"    });",
									"    let response = pm.response.json();",
									"    pm.collectionVariables.set(\"qrCodeId\", response.data.qrCodeId);",
									"});",
									"setTimeout(function(){}, 1000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							},
							{
								"key": "delay",
								"value": "500",
								"type": "text",
								"disabled": true
							},
							{
								"key": "mockup",
								"value": "true",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"ABC SHOP\",\n    \"amount\": \"1.20\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"01\"\n      },\n      {\n        \"cardNetworkPerm\": \"02\"\n      }\n    ],\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"1234567890\",\n        \"reference3\": \"1234567891\"\n    },\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/qr-generate",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"qr-generate"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.unset(\"request-ref\");",
									"pm.collectionVariables.unset(\"reference1\");",
									"",
									"const moment = require('moment');",
									"",
									"pm.collectionVariables.set(\"request-ref\", moment().format(\"yyyyMMDDHHmmss\"));",
									"pm.collectionVariables.set(\"reference1\", moment().format(\"yyyyMMDDHHmmss01\"));",
									"pm.collectionVariables.set(\"requestDate\", moment().format(\"yyyy-MM-DD\"));",
									"pm.collectionVariables.set(\"requestTime\", moment().format(\"HH:mm:ss\"));",
									"pm.collectionVariables.set(\"transmit-date-time\", moment().format(\"yyyy-MM-DDTHH:mm:ss.855+07:00\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"    let response = pm.response.json();",
									"    pm.collectionVariables.set(\"partner_signature\", response.signature);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"DEF SHOP\",\n    \"amount\": \"10.00\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"02\"\n      }\n    ],\n  \"qrCardInfo\": \n  {\n    \"merchantId\": \"002123456789001\",\n    \"terminalId\": \"70012345\"\n  },\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200102 Generate ThaiQR successfully input only Card",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Body contains string\",() => {",
									"    let jsonData = pm.response.json()",
									"    pm.expect(jsonData.responseCode).to.include(\"000\");",
									"    pm.expect(jsonData.responseMesg).to.include(\"Success\");",
									"});",
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"qrCodeId\", response.data.qrCodeId);",
									"setTimeout(function(){}, 2000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"DEF SHOP\",\n    \"amount\": \"10.00\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"02\"\n      }\n    ],\n  \"qrCardInfo\": \n  {\n    \"merchantId\": \"002123456789001\",\n    \"terminalId\": \"70012345\"\n  },\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/qr-generate",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"qr-generate"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.unset(\"request-ref\");",
									"pm.collectionVariables.unset(\"reference1\");",
									"",
									"const moment = require('moment');",
									"",
									"pm.collectionVariables.set(\"request-ref\", moment().format(\"yyyyMMDDHHmmss\"));",
									"pm.collectionVariables.set(\"reference1\", moment().format(\"yyyyMMDDHHmmss01\"));",
									"pm.collectionVariables.set(\"requestDate\", moment().format(\"yyyy-MM-DD\"));",
									"pm.collectionVariables.set(\"requestTime\", moment().format(\"HH:mm:ss\"));",
									"pm.collectionVariables.set(\"transmit-date-time\", moment().format(\"yyyy-MM-DDTHH:mm:ss.855+07:00\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"    let response = pm.response.json();",
									"    pm.collectionVariables.set(\"partner_signature\", response.signature);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"DEF SHOP\",\n    \"amount\": \"2.02\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"03\"\n      }\n    ],\n \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\"\n    },\n  \"qrCardInfo\": \n  {\n    \"merchantId\": \"002123456789002\",\n    \"terminalId\": \"70022345\"\n  },\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200103 Generate ThaiQR successfully input both promptpay and card",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Body contains string\",() => {",
									"    let jsonData = pm.response.json()",
									"    pm.expect(jsonData.responseCode).to.include(\"000\");",
									"    pm.expect(jsonData.responseMesg).to.include(\"Success\");",
									"});",
									"    ",
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"qrCodeId\", response.data.qrCodeId);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"DEF SHOP\",\n    \"amount\": \"2.02\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"03\"\n      }\n    ],\n \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\"\n    },\n  \"qrCardInfo\": \n  {\n    \"merchantId\": \"002123456789002\",\n    \"terminalId\": \"70022345\"\n  },\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/qr-generate",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"qr-generate"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"ABC SHOP\",\n    \"amount\": \"500.00\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"01\"\n      }\n    ],\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"1234567890\",\n        \"reference3\": \"1234567891\"\n    },\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200104 Generate ThaiQR failed - empty partner token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid format Signature\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"ABC SHOP\",\n    \"amount\": \"500.00\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"01\"\n      }\n    ],\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"1234567890\",\n        \"reference3\": \"1234567891\"\n    },\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/qr-generate",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"qr-generate"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200105 Generate ThaiQR failed - Invalid partner token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"  pm.response.to.have.status(401);",
									"});",
									"    "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}67890",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"ABC SHOP\",\n    \"amount\": \"500.00\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"01\"\n      }\n    ],\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"1234567890\",\n        \"reference3\": \"1234567891\"\n    },\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/qr-generate",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"qr-generate"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200106 Generate ThaiQR failed - data is different from generating partner token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"        pm.response.to.have.status(401);",
									"});",
									"         ",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"AEC SHOP\",\n    \"amount\": \"70.00\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"01\"\n      }\n    ],\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"1234567890\",\n        \"reference3\": \"1234567891\"\n    },\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/qr-generate",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"qr-generate"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.unset(\"request-ref\");",
									"pm.collectionVariables.unset(\"reference1\");",
									"",
									"const moment = require('moment');",
									"",
									"pm.collectionVariables.set(\"request-ref\", moment().format(\"yyyyMMDDHHmmss\"));",
									"pm.collectionVariables.set(\"reference1\", moment().format(\"yyyyMMDDHHmmss01\"));",
									"pm.collectionVariables.set(\"requestDate\", moment().format(\"yyyy-MM-DD\"));",
									"pm.collectionVariables.set(\"requestTime\", moment().format(\"HH:mm:ss\"));",
									"pm.collectionVariables.set(\"transmit-date-time\", moment().format(\"yyyy-MM-DDTHH:mm:ss.855+07:00\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"Schema is valid\",() => {",
									"        const schema = {",
									"            type: 'object',",
									"            properties: {",
									"                signature: {",
									"                    type: 'string'",
									"                }",
									"            }",
									"        };",
									"        pm.response.to.have.jsonSchema(schema);",
									"    });",
									"    let response = pm.response.json();",
									"    pm.collectionVariables.set(\"partner_signature\", response.signature);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"25/09/2023\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"ABC SHOP\",\n    \"amount\": \"500.00\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"01\"\n      }\n    ],\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"1234567890\",\n        \"reference3\": \"1234567891\"\n    },\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200107 Generate ThaiQR failed - invalid requestDate format",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"25/09/2023\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"ABC SHOP\",\n    \"amount\": \"500.00\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"01\"\n      }\n    ],\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"1234567890\",\n        \"reference3\": \"1234567891\"\n    },\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/qr-generate",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"qr-generate"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.unset(\"request-ref\");",
									"pm.collectionVariables.unset(\"reference1\");",
									"",
									"const moment = require('moment');",
									"",
									"pm.collectionVariables.set(\"request-ref\", moment().format(\"yyyyMMDDHHmmss\"));",
									"pm.collectionVariables.set(\"reference1\", moment().format(\"yyyyMMDDHHmmss01\"));",
									"pm.collectionVariables.set(\"requestDate\", moment().format(\"yyyy-MM-DD\"));",
									"pm.collectionVariables.set(\"requestTime\", moment().format(\"HH:mm:ss\"));",
									"pm.collectionVariables.set(\"transmit-date-time\", moment().format(\"yyyy-MM-DDTHH:mm:ss.855+07:00\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"Schema is valid\",() => {",
									"        const schema = {",
									"            type: 'object',",
									"            properties: {",
									"                signature: {",
									"                    type: 'string'",
									"                }",
									"            }",
									"        };",
									"        pm.response.to.have.jsonSchema(schema);",
									"    });",
									"    let response = pm.response.json();",
									"    pm.collectionVariables.set(\"partner_signature\", response.signature);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"23.59\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"ABC SHOP\",\n    \"amount\": \"500.00\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"01\"\n      }\n    ],\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"1234567890\",\n        \"reference3\": \"1234567891\"\n    },\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200108 Generate ThaiQR failed - invalid requestTime format",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"23.59\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"ABC SHOP\",\n    \"amount\": \"500.00\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"01\"\n      }\n    ],\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"1234567890\",\n        \"reference3\": \"1234567891\"\n    },\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/qr-generate",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"qr-generate"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.unset(\"request-ref\");",
									"pm.collectionVariables.unset(\"reference1\");",
									"",
									"const moment = require('moment');",
									"",
									"pm.collectionVariables.set(\"request-ref\",\"A012345678910121314151617181920212223242526272829303132181920212223242526272829303132\");",
									"pm.collectionVariables.set(\"reference1\", moment().format(\"yyyyMMDDHHmmss01\"));",
									"pm.collectionVariables.set(\"requestDate\", moment().format(\"yyyy-MM-DD\"));",
									"pm.collectionVariables.set(\"requestTime\", moment().format(\"HH:mm:ss\"));",
									"pm.collectionVariables.set(\"transmit-date-time\", moment().format(\"yyyy-MM-DDTHH:mm:ss.855+07:00\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"ABC SHOP\",\n    \"amount\": \"500.00\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"01\"\n      }\n    ],\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"1234567890\",\n        \"reference3\": \"1234567891\"\n    },\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200109 Generate ThaiQR failed - requestRef is empty",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"ABC SHOP\",\n    \"amount\": \"500.00\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"01\"\n      }\n    ],\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"1234567890\",\n        \"reference3\": \"1234567891\"\n    },\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/qr-generate",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"qr-generate"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.unset(\"request-ref\");",
									"pm.collectionVariables.unset(\"reference1\");",
									"",
									"const moment = require('moment');",
									"",
									"pm.collectionVariables.set(\"request-ref\",\"A012345678910121314151617181920212223242526272829303132181920212223242526272829303132\");",
									"pm.collectionVariables.set(\"reference1\", moment().format(\"yyyyMMDDHHmmss01\"));",
									"pm.collectionVariables.set(\"requestDate\", moment().format(\"yyyy-MM-DD\"));",
									"pm.collectionVariables.set(\"requestTime\", moment().format(\"HH:mm:ss\"));",
									"pm.collectionVariables.set(\"transmit-date-time\", moment().format(\"yyyy-MM-DDTHH:mm:ss.855+07:00\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"ABC SHOP\",\n    \"amount\": \"500.00\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"01\"\n      }\n    ],\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"1234567890\",\n        \"reference3\": \"1234567891\"\n    },\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200110 Generate ThaiQR failed - requestRef over than maximum 50 characters",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "A012345678910121314151617181920212223242526272829303132181920212223242526272829303132",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"ABC SHOP\",\n    \"amount\": \"500.00\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"01\"\n      }\n    ],\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"1234567890\",\n        \"reference3\": \"1234567891\"\n    },\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/qr-generate",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"qr-generate"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.unset(\"request-ref\");",
									"pm.collectionVariables.unset(\"reference1\");",
									"",
									"const moment = require('moment');",
									"",
									"pm.collectionVariables.set(\"request-ref\", moment().format(\"yyyyMMDDHHmmss\"));",
									"pm.collectionVariables.set(\"reference1\", moment().format(\"yyyyMMDDHHmmss01\"));",
									"pm.collectionVariables.set(\"requestDate\", moment().format(\"yyyy-MM-DD\"));",
									"pm.collectionVariables.set(\"requestTime\", moment().format(\"HH:mm:ss\"));",
									"pm.collectionVariables.set(\"transmit-date-time\", moment().format(\"yyyy-MM-DDTHH:mm:ss.855+07:00\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"THAILAND\",\n    \"merchantName\": \"ABC SHOP\",\n    \"amount\": \"500.00\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"01\"\n      }\n    ],\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"1234567890\",\n        \"reference3\": \"1234567891\"\n    },\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200111 Generate ThaiQR failed - merchantCountry is more than 2 characters",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"THAILAND\",\n    \"merchantName\": \"ABC SHOP\",\n    \"amount\": \"500.00\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"01\"\n      }\n    ],\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"1234567890\",\n        \"reference3\": \"1234567891\"\n    },\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/qr-generate",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"qr-generate"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.unset(\"request-ref\");",
									"pm.collectionVariables.unset(\"reference1\");",
									"",
									"const moment = require('moment');",
									"",
									"pm.collectionVariables.set(\"request-ref\", moment().format(\"yyyyMMDDHHmmss\"));",
									"pm.collectionVariables.set(\"reference1\", moment().format(\"yyyyMMDDHHmmss01\"));",
									"pm.collectionVariables.set(\"requestDate\", moment().format(\"yyyy-MM-DD\"));",
									"pm.collectionVariables.set(\"requestTime\", moment().format(\"HH:mm:ss\"));",
									"pm.collectionVariables.set(\"transmit-date-time\", moment().format(\"yyyy-MM-DDTHH:mm:ss.855+07:00\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"ABC SHOP\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"01\"\n      }\n    ],\n    \"amount\": \"500.00\",\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200112 Generate ThaiQR failed - qrPromptpayInfo[] is missing",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"ABC SHOP\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"01\"\n      }\n    ],\n    \"amount\": \"500.00\",\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/qr-generate",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"qr-generate"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"ABC SHOP\",\n    \"cardNetworkPermList\": [\n      {\n        \"cardNetworkPerm\": \"01\"\n      }\n    ],\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"1234567890\",\n        \"reference3\": \"1234567891\"\n    },\n    \"amount\": \"500.00\",\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200113 Generate ThaiQR failed - billerId is empty",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 403\", function () {",
									"        pm.response.to.have.status(403);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"052\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Unknown Biller ID\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"ABC SHOP\",\n    \"cardNetworkPermList\": [\n      {\n        \"cardNetworkPerm\": \"01\"\n      }\n    ],\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"1234567890\",\n        \"reference3\": \"1234567891\"\n    },\n    \"amount\": \"500.00\",\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/qr-generate",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"qr-generate"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"ABC SHOP\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"01\"\n      }\n    ],\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"20231011133101567666\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"1234567890\",\n        \"reference3\": \"1234567891\"\n    },\n    \"amount\": \"500.00\",\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200114 Generate ThaiQR failed - billerId longer than 15",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 403\", function () {",
									"        pm.response.to.have.status(403);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"052\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Unknown Biller ID\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"ABC SHOP\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"01\"\n      }\n    ],\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"20231011133101567666\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"1234567890\",\n        \"reference3\": \"1234567891\"\n    },\n    \"amount\": \"500.00\",\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/qr-generate",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"qr-generate"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"ABC SHOP\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"01\"\n      }\n    ],\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"\",\n        \"reference2\": \"1234567890\",\n        \"reference3\": \"1234567891\"\n    },\n    \"amount\": \"500.00\",\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200115 Generate ThaiQR failed - reference1 is empty",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"ABC SHOP\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"01\"\n      }\n    ],\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"\",\n        \"reference2\": \"1234567890\",\n        \"reference3\": \"1234567891\"\n    },\n    \"amount\": \"500.00\",\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/qr-generate",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"qr-generate"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"ABC SHOP\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"01\"\n      }\n    ],\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"20231102000100020003000412345678\",\n        \"reference2\": \"1234567890\",\n        \"reference3\": \"1234567891\"\n    },\n    \"amount\": \"500.00\",\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200116 Generate ThaiQR failed - reference1 longer than 30",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"ABC SHOP\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"01\"\n      }\n    ],\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"20231102000100020003000412345678\",\n        \"reference2\": \"1234567890\",\n        \"reference3\": \"1234567891\"\n    },\n    \"amount\": \"500.00\",\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/qr-generate",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"qr-generate"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"ABC SHOP\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"01\"\n      }\n    ],\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"20231102123456789000100200300405\",\n        \"reference3\": \"1234567891\"\n    },\n    \"amount\": \"500.00\",\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200117 Generate ThaiQR failed - reference2 longer than 30",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"ABC SHOP\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"01\"\n      }\n    ],\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"20231102123456789000100200300405\",\n        \"reference3\": \"1234567891\"\n    },\n    \"amount\": \"500.00\",\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/qr-generate",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"qr-generate"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"ABC SHOP\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"01\"\n      }\n    ],\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"\",\n        \"reference3\": \"20231102123456789000100200300405\"\n    },\n    \"amount\": \"500.00\",\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200118 Generate ThaiQR failed - reference3 longer than 30",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"ABC SHOP\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"01\"\n      }\n    ],\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"\",\n        \"reference3\": \"20231102123456789000100200300405\"\n    },\n    \"amount\": \"500.00\",\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/qr-generate",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"qr-generate"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"ABC SHOP\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"01\"\n      }\n    ],\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"\",\n        \"reference3\": \"\"\n    },\n    \"amount\": \"A5500$\",\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200119 Generate ThaiQR failed - invalid amount format",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"ABC SHOP\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"01\"\n      }\n    ],\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"\",\n        \"reference3\": \"\"\n    },\n    \"amount\": \"A5500$\",\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/qr-generate",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"qr-generate"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"ABC SHOP\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"01\"\n      }\n    ],\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"\",\n        \"reference3\": \"\"\n    },\n    \"amount\": \"10000000000016.11\",\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200120 Generate ThaiQR failed - invalid amount > 13",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							},
							{
								"key": "delay",
								"value": "100",
								"type": "text"
							},
							{
								"key": "mockup",
								"value": "true",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"ABC SHOP\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"01\"\n      }\n    ],\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"\",\n        \"reference3\": \"\"\n    },\n    \"amount\": \"10000000000016.11\",\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/qr-generate",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"qr-generate"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"01\"\n      }\n    ],\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"\",\n        \"reference3\": \"\"\n    },\n    \"amount\": \"550\",\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200121 Generate ThaiQR failed - invalid merchantName is empty",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"01\"\n      }\n    ],\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"\",\n        \"reference3\": \"\"\n    },\n    \"amount\": \"550\",\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/qr-generate",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"qr-generate"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"Lorem ipsum dolor sit amet, consectetuer adipiscing eli\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"01\"\n      }\n    ],\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"\",\n        \"reference3\": \"\"\n    },\n    \"amount\": \"550\",\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200122 Generate ThaiQR failed - invalid merchantName longer than 50",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"Lorem ipsum dolor sit amet, consectetuer adipiscing eli\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"01\"\n      }\n    ],\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"\",\n        \"reference3\": \"\"\n    },\n    \"amount\": \"550\",\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/qr-generate",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"qr-generate"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"TEST01\",\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"\",\n        \"reference3\": \"\"\n    },\n    \"amount\": \"10.15\",\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200123 Generate ThaiQR failed - invalid remove cardNetworkPermList",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"TEST01\",\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"\",\n        \"reference3\": \"\"\n    },\n    \"amount\": \"10.15\",\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/qr-generate",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"qr-generate"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"TEST01\",\n    \"cardNetworkPerm\": \"01\",\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"\",\n        \"reference3\": \"\"\n    },\n    \"amount\": \"10.15\",\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200124 Generate ThaiQR failed - invalid cardNetworkPerm without cardNetworkPermList",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"TEST01\",\n    \"cardNetworkPerm\": \"01\",\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"\",\n        \"reference3\": \"\"\n    },\n    \"amount\": \"10.15\",\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/qr-generate",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"qr-generate"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"TEST01\",\n    \"cardNetworkPermList\": [\n        {\n            \"cardNetworkPerm\": \"\"\n        }\n    ],\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"\",\n        \"reference3\": \"\"\n    },\n    \"amount\": \"10.15\",\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200125 Generate ThaiQR failed - invalid empty cardNetworkPerm",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"TEST01\",\n    \"cardNetworkPermList\": [\n        {\n            \"cardNetworkPerm\": \"\"\n        }\n    ],\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"\",\n        \"reference3\": \"\"\n    },\n    \"amount\": \"10.15\",\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/qr-generate",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"qr-generate"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"TEST01\",\n    \"cardNetworkPermList\": [\n        {\n            \"cardNetworkPerm\": \"123\"\n        }\n    ],\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"\",\n        \"reference3\": \"\"\n    },\n    \"amount\": \"10.15\",\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200126 Generate ThaiQR failed - invalid cardNetworkPerm > 2",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"TEST01\",\n    \"cardNetworkPermList\": [\n        {\n            \"cardNetworkPerm\": \"123\"\n        }\n    ],\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"\",\n        \"reference3\": \"\"\n    },\n    \"amount\": \"10.15\",\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/qr-generate",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"qr-generate"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"TEST01\",\n    \"cardNetworkPermList\": \"01\",\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"\",\n        \"reference3\": \"\"\n    },\n    \"amount\": \"10.15\",\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200127 Generate ThaiQR failed - invalid no cardNetworkPerm attribute",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"TEST01\",\n    \"cardNetworkPermList\": \"01\",\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"\",\n        \"reference3\": \"\"\n    },\n    \"amount\": \"10.15\",\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/qr-generate",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"qr-generate"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.unset(\"request-ref\");",
									"pm.collectionVariables.unset(\"reference1\");",
									"",
									"const moment = require('moment');",
									"",
									"pm.collectionVariables.set(\"request-ref\", moment().format(\"yyyyMMDDHHmmss\"));",
									"pm.collectionVariables.set(\"reference1\", moment().format(\"yyyyMMDDHHmmss01\"));",
									"pm.collectionVariables.set(\"requestDate\", moment().format(\"yyyy-MM-DD\"));",
									"pm.collectionVariables.set(\"requestTime\", moment().format(\"HH:mm:ss\"));",
									"pm.collectionVariables.set(\"transmit-date-time\", moment().format(\"yyyy-MM-DDTHH:mm:ss.855+07:00\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"    let response = pm.response.json();",
									"    pm.collectionVariables.set(\"partner_signature\", response.signature);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"DEF SHOP\",\n    \"amount\": \"2.02\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"03\"\n      }\n    ],\n \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\"\n    },\n  \"qrCardInfo\": \n  {\n    \"merchantId\": \"002123456789002\",\n    \"merchantTransRef\": \"4200000924021300002132\",\n    \"terminalId\": \"70022345\"\n  },\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200128 Generate ThaiQR failed - merchantTransRef > 14",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"DEF SHOP\",\n    \"amount\": \"2.02\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"03\"\n      }\n    ],\n \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\"\n    },\n  \"qrCardInfo\": \n  {\n    \"merchantId\": \"002123456789002\",\n    \"merchantTransRef\": \"4200000924021300002132\",\n    \"terminalId\": \"70022345\"\n  },\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/qr-generate",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"qr-generate"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.unset(\"request-ref\");",
									"pm.collectionVariables.unset(\"reference1\");",
									"",
									"const moment = require('moment');",
									"",
									"pm.collectionVariables.set(\"request-ref\", moment().format(\"yyyyMMDDHHmmss\"));",
									"pm.collectionVariables.set(\"reference1\", moment().format(\"yyyyMMDDHHmmss01\"));",
									"pm.collectionVariables.set(\"requestDate\", moment().format(\"yyyy-MM-DD\"));",
									"pm.collectionVariables.set(\"requestTime\", moment().format(\"HH:mm:ss\"));",
									"pm.collectionVariables.set(\"transmit-date-time\", moment().format(\"yyyy-MM-DDTHH:mm:ss.855+07:00\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"    let response = pm.response.json();",
									"    pm.collectionVariables.set(\"partner_signature\", response.signature);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"DEF SHOP\",\n    \"amount\": \"2.02\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"03\"\n      }\n    ],\n \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\"\n    },\n  \"qrCardInfo\": \n  {\n    \"merchantId\": \"00212345678900212233\",\n    \"merchantTransRef\": \"4200000924\",\n    \"terminalId\": \"70022345\"\n  },\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200129 Generate ThaiQR failed - merchantId > 15",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"DEF SHOP\",\n    \"amount\": \"2.02\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"03\"\n      }\n    ],\n \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\"\n    },\n  \"qrCardInfo\": \n  {\n    \"merchantId\": \"00212345678900212233\",\n    \"merchantTransRef\": \"4200000924\",\n    \"terminalId\": \"70022345\"\n  },\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/qr-generate",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"qr-generate"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.unset(\"request-ref\");",
									"pm.collectionVariables.unset(\"reference1\");",
									"",
									"const moment = require('moment');",
									"",
									"pm.collectionVariables.set(\"request-ref\", moment().format(\"yyyyMMDDHHmmss\"));",
									"pm.collectionVariables.set(\"reference1\", moment().format(\"yyyyMMDDHHmmss01\"));",
									"pm.collectionVariables.set(\"requestDate\", moment().format(\"yyyy-MM-DD\"));",
									"pm.collectionVariables.set(\"requestTime\", moment().format(\"HH:mm:ss\"));",
									"pm.collectionVariables.set(\"transmit-date-time\", moment().format(\"yyyy-MM-DDTHH:mm:ss.855+07:00\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"    let response = pm.response.json();",
									"    pm.collectionVariables.set(\"partner_signature\", response.signature);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"DEF SHOP\",\n    \"amount\": \"2.02\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"03\"\n      }\n    ],\n \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\"\n    },\n  \"qrCardInfo\": \n  {\n    \"merchantId\": \"00212345678\",\n    \"merchantTransRef\": \"4200000924\",\n    \"terminalId\": \"7002112345\"\n  },\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200130 Generate ThaiQR failed - terminalId > 8",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"DEF SHOP\",\n    \"amount\": \"2.02\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"03\"\n      }\n    ],\n \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\"\n    },\n  \"qrCardInfo\": \n  {\n    \"merchantId\": \"00212345678\",\n    \"merchantTransRef\": \"4200000924\",\n    \"terminalId\": \"7002112345\"\n  },\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/qr-generate",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"qr-generate"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "2.ThaiQR Payment Inquiry_v2",
			"item": [
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.unset(\"request-ref\");",
									"pm.collectionVariables.unset(\"reference1\");",
									"",
									"const moment = require('moment');",
									"",
									"pm.collectionVariables.set(\"request-ref\", moment().format(\"yyyyMMDDHHmmss\"));",
									"pm.collectionVariables.set(\"reference1\", moment().format(\"yyyyMMDDHHmmss01\"));",
									"pm.collectionVariables.set(\"requestDate\", moment().format(\"yyyy-MM-DD\"));",
									"pm.collectionVariables.set(\"requestTime\", moment().format(\"HH:mm:ss\"));",
									"pm.collectionVariables.set(\"transmit-date-time\", moment().format(\"yyyy-MM-DDTHH:mm:ss.855+07:00\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"TESTA SHOP\",\n    \"amount\": \"1.80\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"03\"\n      }\n    ],\n \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\"\n    },\n  \"qrCardInfo\": \n  {\n    \"merchantId\": \"0010012001\",\n    \"merchantTransRef\": \"123456\",\n    \"terminalId\": \"001001\"\n  },\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pre-Step Generate ThaiQR",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"qrCodeId\", response.data.qrCodeId); ",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"TESTA SHOP\",\n    \"amount\": \"1.80\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"03\"\n      }\n    ],\n \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\"\n    },\n  \"qrCardInfo\": \n  {\n    \"merchantId\": \"0010012001\",\n    \"merchantTransRef\": \"123456\",\n    \"terminalId\": \"001001\"\n  },\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/qr-generate",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"qr-generate"
							]
						}
					},
					"response": []
				},
				{
					"name": "[Mock] Request Payment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"    let response = pm.response.json();",
									"    pm.collectionVariables.set(\"paymentRequestId\", response.paymentRequestId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{basicAuthDevPortalPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{basicAuthDevPortalUser}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"description": "(Required) ",
								"key": "transmit-date-time",
								"value": "{{transmit-date-time}}"
							},
							{
								"description": "(Required) This field should be unique for each sequence of request.",
								"key": "request-ref",
								"value": "{{request-ref}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1}}\",\n    \"amount\": \"1.80\",\n    \"transDate\": \"{{requestDate}}\",\n    \"requestDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\"\n}\n",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mock-host}}/dev-portal/v1/payment-requests",
							"host": [
								"{{mock-host}}"
							],
							"path": [
								"dev-portal",
								"v1",
								"payment-requests"
							]
						}
					},
					"response": []
				},
				{
					"name": "[Mock] Get Notification - mark PAID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"    let response = pm.response.json();",
									"    pm.collectionVariables.set(\"approvalCode\", response.approvalCode)",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{basicAuthDevPortalPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{basicAuthDevPortalUser}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{mock-host}}/dev-portal/v1/notification/{{paymentRequestId}}",
							"host": [
								"{{mock-host}}"
							],
							"path": [
								"dev-portal",
								"v1",
								"notification",
								"{{paymentRequestId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inquiryDate\": \"{{requestDate}}\",\n    \"inquiryTime\": \"{{requestTime}}\",\n    \"amount\": \"1.80\",\n    \"qrCodeId\": \"{{qrCodeId}}\",\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200201 Payment Inquiry promptpay - card get data successfully (request only qrPromptpayInfo)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Body contains string\",() => {",
									"    let jsonData = pm.response.json()",
									"    pm.expect(jsonData.data.statusMesg).to.include(\"PAID\");",
									"    pm.expect(jsonData.data.cardNetworkCode).to.include(\"01\");",
									"    pm.expect(jsonData.data.qrPromptpayInfo.termType).to.include(\"10\");",
									"    pm.expect(jsonData.data.qrPromptpayInfo.fromBank).to.include(\"BBL\");",
									"    pm.expect(jsonData.data.qrCardInfo).not.exist",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							},
							{
								"key": "delay",
								"value": "200",
								"type": "text",
								"disabled": true
							},
							{
								"key": "mockup",
								"value": "true",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inquiryDate\": \"{{requestDate}}\",\n    \"inquiryTime\": \"{{requestTime}}\",\n    \"amount\": \"1.80\",\n    \"qrCodeId\": \"{{qrCodeId}}\",\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/payment-inquiry",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"payment-inquiry"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inquiryDate\": \"{{requestDate}}\",\n    \"inquiryTime\": \"{{requestTime}}\",\n    \"amount\": \"1.80\",\n    \"qrCodeId\": \"{{qrCodeId}}\",\n    \"qrCardInfo\": {\n        \"merchantId\": \"0010012001\",\n        \"merchantTransRef\": \"\",\n        \"terminalId\": \"001001\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200202 Payment Inquiry promptpay - card get data successfully (request only qrCardInfo)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Body contains string\",() => {",
									"    let jsonData = pm.response.json()",
									"    pm.expect(jsonData.data.statusMesg).to.include(\"PAID\");",
									"    pm.expect(jsonData.data.cardNetworkCode).to.include(\"01\");",
									"    pm.expect(jsonData.data.qrPromptpayInfo).not.exist",
									"    pm.expect(jsonData.data.qrCardInfo.traceNum).to.include(\"123456\");",
									"    pm.expect(jsonData.data.qrCardInfo.custPAN).to.include(\"1111111111\");",
									"});",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inquiryDate\": \"{{requestDate}}\",\n    \"inquiryTime\": \"{{requestTime}}\",\n    \"amount\": \"1.80\",\n    \"qrCodeId\": \"{{qrCodeId}}\",\n    \"qrCardInfo\": {\n        \"merchantId\": \"0010012001\",\n        \"merchantTransRef\": \"\",\n        \"terminalId\": \"001001\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/payment-inquiry",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"payment-inquiry"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inquiryDate\": \"{{requestDate}}\",\n    \"inquiryTime\": \"{{requestTime}}\",\n    \"amount\": \"1.80\",\n    \"qrCodeId\": \"{{qrCodeId}}\",\n    \"qrCardInfo\": {\n        \"merchantId\": \"0010012001\",\n        \"merchantTransRef\": \"123456\",\n        \"terminalId\": \"001001\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200202_1 Payment Inquiry promptpay - card get data successfully (request only qrCardInfo) merchantTransRef has value",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Body contains string\",() => {",
									"    let jsonData = pm.response.json()",
									"    pm.expect(jsonData.data.statusMesg).to.include(\"PAID\");",
									"    pm.expect(jsonData.data.cardNetworkCode).to.include(\"01\");",
									"    pm.expect(jsonData.data.qrPromptpayInfo).not.exist",
									"    pm.expect(jsonData.data.qrCardInfo.traceNum).to.include(\"123456\");",
									"    pm.expect(jsonData.data.qrCardInfo.custPAN).to.include(\"1111111111\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inquiryDate\": \"{{requestDate}}\",\n    \"inquiryTime\": \"{{requestTime}}\",\n    \"amount\": \"1.80\",\n    \"qrCodeId\": \"{{qrCodeId}}\",\n    \"qrCardInfo\": {\n        \"merchantId\": \"0010012001\",\n        \"merchantTransRef\": \"123456\",\n        \"terminalId\": \"001001\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/payment-inquiry",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"payment-inquiry"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inquiryDate\": \"{{requestDate}}\",\n    \"inquiryTime\": \"{{requestTime}}\",\n    \"amount\": \"1.80\",\n    \"qrCodeId\": \"{{qrCodeId}}\",\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"\"\n    },\n    \"qrCardInfo\": {\n\t\t\"merchantId\": \"0010012001\",\n        \"merchantTransRef\": \"\",\n        \"terminalId\": \"001001\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200203 Payment Inquiry promptpay - card get data successfully  (input both qrPromptpayInfo and qrCardInfo)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.data.statusMesg).to.include(\"PAID\");",
									"        pm.expect(jsonData.data.cardNetworkCode).to.include(\"01\");",
									"        pm.expect(jsonData.data.qrPromptpayInfo.termType).to.include(\"10\");",
									"        pm.expect(jsonData.data.qrPromptpayInfo.fromBank).to.include(\"BBL\");",
									"        pm.expect(jsonData.data.qrCardInfo.traceNum).to.include(\"123456\");",
									"        pm.expect(jsonData.data.qrCardInfo.custPAN).to.include(\"1111111111\");",
									"        ",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inquiryDate\": \"{{requestDate}}\",\n    \"inquiryTime\": \"{{requestTime}}\",\n    \"amount\": \"1.80\",\n    \"qrCodeId\": \"{{qrCodeId}}\",\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"\"\n    },\n    \"qrCardInfo\": {\n\t\t\"merchantId\": \"0010012001\",\n        \"merchantTransRef\": \"\",\n        \"terminalId\": \"001001\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/payment-inquiry",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"payment-inquiry"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200204 Payment Inquiry promptpay - card get data failed - invalid partner signature",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"        pm.response.to.have.status(401);",
									"});",
									"    "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}@!@#",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inquiryDate\": \"{{requestDate}}\",\n    \"inquiryTime\": \"{{requestTime}}\",\n    \"amount\": \"1.80\",\n    \"qrCodeId\": \"{{qrCodeId}}\",\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/payment-inquiry",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"payment-inquiry"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200204_1 Payment Inquiry promptpay - card get data failed - empty partner signature",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        pm.expect(pm.response.text()).to.include(\"Invalid format Signature\");",
									"    });",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inquiryDate\": \"{{requestDate}}\",\n    \"inquiryTime\": \"{{requestTime}}\",\n    \"amount\": \"1.80\",\n    \"qrCodeId\": \"{{qrCodeId}}\",\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/payment-inquiry",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"payment-inquiry"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inquiryDate\": \"{{requestDate}}\",\n    \"inquiryTime\": \"{{requestTime}}\",\n    \"amount\": \"1.99\",\n    \"qrCodeId\": \"{{qrCodeId}}\",\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"1111111\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200205 Payment Inquiry promptpay - card get data failed - data is different from generating partner token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"        pm.response.to.have.status(401);",
									"});",
									"         ",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inquiryDate\": \"{{requestDate}}\",\n    \"inquiryTime\": \"{{requestTime}}\",\n    \"amount\": \"1.85\",\n    \"qrCodeId\": \"{{qrCodeId}}\",\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/payment-inquiry",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"payment-inquiry"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inquiryDate\": \"{{requestDate}}\",\n    \"inquiryTime\": \"{{requestTime}}\",\n    \"amount\": \"599.00\",\n    \"qrCodeId\": \"{{qrCodeId}}\",\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"\"\n    },\n    \"qrCardInfo\": {\n\t\t\"merchantId\": \"20230927134601\",\n\t\t\"merchantTransRef\": \"20230927134601001\",\n\t\t\"terminalId\": \"20230927\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200206 Payment Inquiry promptpay - card get data failed -billerId is empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 403\", function () {",
									"        pm.response.to.have.status(403);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"052\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Unknown Biller ID\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inquiryDate\": \"{{requestDate}}\",\n    \"inquiryTime\": \"{{requestTime}}\",\n    \"amount\": \"599.00\",\n    \"qrCodeId\": \"{{qrCodeId}}\",\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"\"\n    },\n    \"qrCardInfo\": {\n\t\t\"merchantId\": \"20230927134601\",\n\t\t\"merchantTransRef\": \"20230927134601001\",\n\t\t\"terminalId\": \"20230927\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/payment-inquiry",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"payment-inquiry"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inquiryDate\": \"{{requestDate}}\",\n    \"inquiryTime\": \"{{requestTime}}\",\n    \"amount\": \"599.00\",\n    \"qrCodeId\": \"{{qrCodeId}}\",\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"100001110109TEST\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"\"\n    },\n    \"qrCardInfo\": {\n\t\t\"merchantId\": \"20230927134601\",\n\t\t\"merchantTransRef\": \"20230927134601001\",\n\t\t\"terminalId\": \"20230927\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200207 Payment Inquiry promptpay - card get data failed - billerId > 15",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 403\", function () {",
									"        pm.response.to.have.status(403);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"052\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Unknown Biller ID\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inquiryDate\": \"{{requestDate}}\",\n    \"inquiryTime\": \"{{requestTime}}\",\n    \"amount\": \"599.00\",\n    \"qrCodeId\": \"{{qrCodeId}}\",\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"100001110109TEST\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"\"\n    },\n    \"qrCardInfo\": {\n\t\t\"merchantId\": \"20230927134601\",\n\t\t\"merchantTransRef\": \"20230927134601001\",\n\t\t\"terminalId\": \"20230927\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/payment-inquiry",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"payment-inquiry"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inquiryDate\": \"{{requestDate}}\",\n    \"inquiryTime\": \"{{requestTime}}\",\n    \"amount\": \"599.00\",\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"\"\n    },\n    \"qrCardInfo\": {\n\t\t\"merchantId\": \"20230927134601\",\n\t\t\"merchantTransRef\": \"20230927134601001\",\n\t\t\"terminalId\": \"20230927\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200208 Payment Inquiry promptpay - card get data failed - missing qrCodeId attribute",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inquiryDate\": \"{{requestDate}}\",\n    \"inquiryTime\": \"{{requestTime}}\",\n    \"amount\": \"599.00\",\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"\"\n    },\n    \"qrCardInfo\": {\n\t\t\"merchantId\": \"20230927134601\",\n\t\t\"merchantTransRef\": \"20230927134601001\",\n\t\t\"terminalId\": \"20230927\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/payment-inquiry",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"payment-inquiry"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inquiryDate\": \"{{requestDate}}\",\n    \"inquiryTime\": \"{{requestTime}}\",\n    \"amount\": \"25.20\",\n    \"qrCodeId\": \"da244ef7a82348eab111199\",\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"\"\n    },\n    \"qrCardInfo\": {\n\t\t\"merchantId\": \"20230927134601\",\n\t\t\"merchantTransRef\": \"20230927134601001\",\n\t\t\"terminalId\": \"20230927\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200209 Payment Inquiry promptpay - card get data failed - invalid qrCodeId longer than 50",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inquiryDate\": \"{{requestDate}}\",\n    \"inquiryTime\": \"{{requestTime}}\",\n    \"amount\": \"25.20\",\n    \"qrCodeId\": \"da244ef7a82348eab111199\",\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"\"\n    },\n    \"qrCardInfo\": {\n\t\t\"merchantId\": \"20230927134601\",\n\t\t\"merchantTransRef\": \"20230927134601001\",\n\t\t\"terminalId\": \"20230927\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/payment-inquiry",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"payment-inquiry"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inquiryDate\": \"{{requestDate}}\",\n    \"inquiryTime\": \"{{requestTime}}\",\n    \"amount\": \"25.20\",\n    \"qrCodeId\": \"{{qrCodeId}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200210 Payment Inquiry promptpay - card get data failed - remove qrPromtpayInfo qrCardInfo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inquiryDate\": \"{{requestDate}}\",\n    \"inquiryTime\": \"{{requestTime}}\",\n    \"amount\": \"25.20\",\n    \"qrCodeId\": \"{{qrCodeId}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/payment-inquiry",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"payment-inquiry"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inquiryDate\": \"{{requestDate}}\",\n    \"inquiryTime\": \"{{requestTime}}\",\n    \"amount\": \"1.80\",\n    \"qrCodeId\": \"{{qrCodeId}}\",\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200211 Payment Inquiry promptpay - card get data failed - empty reference1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inquiryDate\": \"{{requestDate}}\",\n    \"inquiryTime\": \"{{requestTime}}\",\n    \"amount\": \"1.80\",\n    \"qrCodeId\": \"{{qrCodeId}}\",\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/payment-inquiry",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"payment-inquiry"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inquiryDate\": \"{{requestDate}}\",\n    \"inquiryTime\": \"{{requestTime}}\",\n    \"amount\": \"1.80\",\n    \"qrCodeId\": \"{{qrCodeId}}\",\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"1000202402091234590199000123398\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200212 Payment Inquiry promptpay - card get data failed - reference1 >30",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inquiryDate\": \"{{requestDate}}\",\n    \"inquiryTime\": \"{{requestTime}}\",\n    \"amount\": \"1.80\",\n    \"qrCodeId\": \"{{qrCodeId}}\",\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"1000202402091234590199000123398\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/payment-inquiry",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"payment-inquiry"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inquiryDate\": \"{{requestDate}}\",\n    \"inquiryTime\": \"{{requestTime}}\",\n    \"amount\": \"1.80\",\n    \"qrCodeId\": \"{{qrCodeId}}\",\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"1000202402091234590199000123398\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200213 Payment Inquiry promptpay - card get data failed - reference2 >30",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inquiryDate\": \"{{requestDate}}\",\n    \"inquiryTime\": \"{{requestTime}}\",\n    \"amount\": \"1.80\",\n    \"qrCodeId\": \"{{qrCodeId}}\",\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"1000202402091234590199000123398\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/payment-inquiry",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"payment-inquiry"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inquiryDate\": \"{{requestDate}}\",\n    \"inquiryTime\": \"{{requestTime}}\",\n    \"amount\": \"1.80\",\n    \"qrCodeId\": \"{{qrCodeId}}\",\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"111222111\",\n        \"reference3\": \"1000202402091234590199000123398\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200214 Payment Inquiry promptpay - card get data failed - reference3 >30",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inquiryDate\": \"{{requestDate}}\",\n    \"inquiryTime\": \"{{requestTime}}\",\n    \"amount\": \"1.80\",\n    \"qrCodeId\": \"{{qrCodeId}}\",\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"111222111\",\n        \"reference3\": \"1000202402091234590199000123398\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/payment-inquiry",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"payment-inquiry"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inquiryDate\": \"{{requestDate}}\",\n    \"inquiryTime\": \"{{requestTime}}\",\n    \"amount\": \"1.80\",\n    \"qrCodeId\": \"{{qrCodeId}}\",\n    \"qrCardInfo\": {\n        \"merchantId\": \"\",\n        \"merchantTransRef\": \"\",\n        \"terminalId\": \"001001\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200215 Payment Inquiry promptpay - card get data failed -empty merchantId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inquiryDate\": \"{{requestDate}}\",\n    \"inquiryTime\": \"{{requestTime}}\",\n    \"amount\": \"1.80\",\n    \"qrCodeId\": \"{{qrCodeId}}\",\n    \"qrCardInfo\": {\n        \"merchantId\": \"\",\n        \"merchantTransRef\": \"\",\n        \"terminalId\": \"001001\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/payment-inquiry",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"payment-inquiry"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inquiryDate\": \"{{requestDate}}\",\n    \"inquiryTime\": \"{{requestTime}}\",\n    \"amount\": \"1.80\",\n    \"qrCodeId\": \"{{qrCodeId}}\",\n    \"qrCardInfo\": {\n        \"merchantId\": \"1000202402091290\",\n        \"merchantTransRef\": \"111111\",\n        \"terminalId\": \"001001\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200216 Payment Inquiry promptpay - card get data failed - merchantId > 15",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inquiryDate\": \"{{requestDate}}\",\n    \"inquiryTime\": \"{{requestTime}}\",\n    \"amount\": \"1.80\",\n    \"qrCodeId\": \"{{qrCodeId}}\",\n    \"qrCardInfo\": {\n        \"merchantId\": \"1000202402091290\",\n        \"merchantTransRef\": \"111111\",\n        \"terminalId\": \"001001\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/payment-inquiry",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"payment-inquiry"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inquiryDate\": \"{{requestDate}}\",\n    \"inquiryTime\": \"{{requestTime}}\",\n    \"amount\": \"1.80\",\n    \"qrCodeId\": \"{{qrCodeId}}\",\n    \"qrCardInfo\": {\n        \"merchantId\": \"1000202402091\",\n        \"merchantTransRef\": \"111111\",\n        \"terminalId\": \"\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200217 Payment Inquiry promptpay - card get data failed - empty terminalId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inquiryDate\": \"{{requestDate}}\",\n    \"inquiryTime\": \"{{requestTime}}\",\n    \"amount\": \"1.80\",\n    \"qrCodeId\": \"{{qrCodeId}}\",\n    \"qrCardInfo\": {\n        \"merchantId\": \"1000202402091\",\n        \"merchantTransRef\": \"111111\",\n        \"terminalId\": \"\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/payment-inquiry",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"payment-inquiry"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inquiryDate\": \"{{requestDate}}\",\n    \"inquiryTime\": \"{{requestTime}}\",\n    \"amount\": \"1.80\",\n    \"qrCodeId\": \"{{qrCodeId}}\",\n    \"qrCardInfo\": {\n        \"merchantId\": \"1000202402091\",\n        \"merchantTransRef\": \"111111\",\n        \"terminalId\": \"123456789\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200218 Payment Inquiry promptpay - card get data failed - terminalId > 8",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									" })",
									"pm.test(\"Body contains string\",() => {",
									"    let jsonData = pm.response.json()",
									"    pm.expect(jsonData.responseCode).to.include(\"211\");",
									"    pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inquiryDate\": \"{{requestDate}}\",\n    \"inquiryTime\": \"{{requestTime}}\",\n    \"amount\": \"1.80\",\n    \"qrCodeId\": \"{{qrCodeId}}\",\n    \"qrCardInfo\": {\n        \"merchantId\": \"1000202402091\",\n        \"merchantTransRef\": \"111111\",\n        \"terminalId\": \"123456789\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/payment-inquiry",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"payment-inquiry"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inquiryDate\": \"{{requestDate}}\",\n    \"inquiryTime\": \"{{requestTime}}\",\n    \"amount\": \"10000000000016.11\",\n    \"qrCodeId\": \"{{qrCodeId}}\",\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"\"\n    },\n    \"qrCardInfo\": {\n\t\t\"merchantId\": \"20230927134601\",\n\t\t\"merchantTransRef\": \"1112222\",\n\t\t\"terminalId\": \"20230927\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200219 Payment Inquiry promptpay - card get data failed - amount > 16",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inquiryDate\": \"{{requestDate}}\",\n    \"inquiryTime\": \"{{requestTime}}\",\n    \"amount\": \"10000000000016.11\",\n    \"qrCodeId\": \"{{qrCodeId}}\",\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"\"\n    },\n    \"qrCardInfo\": {\n\t\t\"merchantId\": \"20230927134601\",\n\t\t\"merchantTransRef\": \"1112222\",\n\t\t\"terminalId\": \"20230927\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/payment-inquiry",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"payment-inquiry"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inquiryDate\": \"26/09/2023\",\n    \"inquiryTime\": \"{{requestTime}}\",\n    \"amount\": \"599.00\",\n    \"qrCodeId\": \"{{qrCodeId}}\",\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"\"\n    },\n    \"qrCardInfo\": {\n\t\t\"merchantId\": \"20230927134601\",\n\t\t\"merchantTransRef\": \"20230927134601001\",\n\t\t\"terminalId\": \"20230927\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200220 Payment Inquiry promptpay - card get data failed - Invalid inquiryDate format",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inquiryDate\": \"26/09/2023\",\n    \"inquiryTime\": \"{{requestTime}}\",\n    \"amount\": \"599.00\",\n    \"qrCodeId\": \"{{qrCodeId}}\",\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"\"\n    },\n    \"qrCardInfo\": {\n\t\t\"merchantId\": \"20230927134601\",\n\t\t\"merchantTransRef\": \"20230927134601001\",\n\t\t\"terminalId\": \"20230927\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/payment-inquiry",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"payment-inquiry"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inquiryDate\": \"{{requestDate}}\",\n    \"inquiryTime\": \"16.55.45\",\n    \"amount\": \"1.80\",\n    \"qrCodeId\": \"{{qrCodeId}}\",\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"\"\n    },\n    \"qrCardInfo\": {\n\t\t\"merchantId\": \"0010012001\",\n        \"merchantTransRef\": \"\",\n        \"terminalId\": \"001001\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200221 Payment Inquiry promptpay - card get data failed - Invalid inquiryTime format",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inquiryDate\": \"{{requestDate}}\",\n    \"inquiryTime\": \"16.55.45\",\n    \"amount\": \"1.80\",\n    \"qrCodeId\": \"{{qrCodeId}}\",\n    \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1}}\",\n        \"reference2\": \"\"\n    },\n    \"qrCardInfo\": {\n\t\t\"merchantId\": \"0010012001\",\n        \"merchantTransRef\": \"\",\n        \"terminalId\": \"001001\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/payment-inquiry",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"payment-inquiry"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "3.ThaiQR Refund Verification_v2",
			"item": [
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.unset(\"request-ref-verifyrefund\");",
									"pm.collectionVariables.unset(\"reference1-verifyrefund\");",
									"",
									"const moment = require('moment');",
									"",
									"pm.collectionVariables.set(\"request-ref-verifyrefund\", moment().format(\"DDMMyyyyHHmmss\"));",
									"pm.collectionVariables.set(\"reference1-verifyrefund\", moment().format(\"DDMMyyyyHHmmss01\"));",
									"pm.collectionVariables.set(\"requestDate\", moment().format(\"yyyy-MM-DD\"));",
									"pm.collectionVariables.set(\"requestTime\", moment().format(\"HH:mm:ss\"));",
									"pm.collectionVariables.set(\"transmit-date-time\", moment().format(\"yyyy-MM-DDTHH:mm:ss.855+07:00\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"DEF SHOP\",\n    \"amount\": \"1.15\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"03\"\n      }\n    ],\n \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1-verifyrefund}}\"\n    },\n  \"qrCardInfo\": \n  {\n    \"merchantId\": \"002123456789002\",\n    \"terminalId\": \"70022345\"\n  },\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pre-Step Generate ThaiQR",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"qrCodeId\", response.data.qrCodeId);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref-verifyrefund}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"DEF SHOP\",\n    \"amount\": \"1.15\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"03\"\n      }\n    ],\n \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1-verifyrefund}}\"\n    },\n  \"qrCardInfo\": \n  {\n    \"merchantId\": \"002123456789002\",\n    \"terminalId\": \"70022345\"\n  },\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/qr-generate",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"qr-generate"
							]
						}
					},
					"response": []
				},
				{
					"name": "[Mock] Request Payment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"    let response = pm.response.json();",
									"    pm.collectionVariables.set(\"paymentRequestId\", response.paymentRequestId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{basicAuthDevPortalPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{basicAuthDevPortalUser}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"description": "(Required) ",
								"key": "transmit-date-time",
								"value": "{{transmit-date-time}}"
							},
							{
								"description": "(Required) This field should be unique for each sequence of request.",
								"key": "request-ref",
								"value": "{{request-ref-verifyrefund}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-verifyrefund}}\",\n    \"amount\": \"1.15\",\n    \"transDate\": \"{{requestDate}}\",\n    \"requestDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\"\n}\n",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mock-host}}/dev-portal/v1/payment-requests",
							"host": [
								"{{mock-host}}"
							],
							"path": [
								"dev-portal",
								"v1",
								"payment-requests"
							]
						}
					},
					"response": []
				},
				{
					"name": "[Mock] Request Payment Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"    let response = pm.response.json();",
									"    pm.collectionVariables.set(\"paymentRequestId\", response.paymentRequestId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{basicAuthDevPortalPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{basicAuthDevPortalUser}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"description": "(Required) ",
								"key": "transmit-date-time",
								"value": "{{transmit-date-time}}"
							},
							{
								"description": "(Required) This field should be unique for each sequence of request.",
								"key": "request-ref",
								"value": "{{request-ref-verifyrefund}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-verifyrefund}}\",\n    \"amount\": \"1.15\",\n    \"transDate\": \"{{requestDate}}\",\n    \"requestDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\"\n}\n",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mock-host}}/dev-portal/v1/payment-requests",
							"host": [
								"{{mock-host}}"
							],
							"path": [
								"dev-portal",
								"v1",
								"payment-requests"
							]
						}
					},
					"response": []
				},
				{
					"name": "[Mock] Get Notification - mark PAID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"    let response = pm.response.json();",
									"    pm.collectionVariables.set(\"approvalCode-verifyrefund\", response.approvalCode);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{basicAuthDevPortalPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{basicAuthDevPortalUser}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{mock-host}}/dev-portal/v1/notification/{{paymentRequestId}}",
							"host": [
								"{{mock-host}}"
							],
							"path": [
								"dev-portal",
								"v1",
								"notification",
								"{{paymentRequestId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.15\",\n    \"approvalCode\": \"{{approvalCode-verifyrefund}}\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-verifyrefund}}\",\n    \"reference2\":\"\",\n    \"reference3\":\"\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200301 Refund verification successfully - only Promptpay",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"000\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Success\");",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							},
							{
								"key": "delay",
								"value": "200",
								"type": "text",
								"disabled": true
							},
							{
								"key": "mockup",
								"value": "true",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.15\",\n    \"approvalCode\": \"{{approvalCode-verifyrefund}}\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-verifyrefund}}\",\n    \"reference2\":\"\",\n    \"reference3\":\"\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/verification",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"verification"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.15\",\n    \"approvalCode\": \"{{approvalCode-verifyrefund}}\",\n    \"cardNetworkCode\": \"03\",\n    \"qrCardInfo\": {\n        \"merchantId\": \"002123456789002\",\n        \"merchantTransRef\": \"111222111\",\n        \"terminalId\": \"70022345\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200302 Refund verification successfully - only Card (not support yet)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"000\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Success\");",
									"    });",
									"});*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.15\",\n    \"approvalCode\": \"{{approvalCode-verifyrefund}}\",\n    \"cardNetworkCode\": \"03\",\n    \"qrCardInfo\": {\n        \"merchantId\": \"002123456789002\",\n        \"merchantTransRef\": \"111222111\",\n        \"terminalId\": \"70022345\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/verification",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"verification"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.15\",\n    \"approvalCode\": \"{{approvalCode-verifyrefund}}\",\n    \"cardNetworkCode\": \"03\",\n    \"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-verifyrefund}}\",\n    \"reference2\":\"\",\n    \"reference3\":\"\"\n    },\n    \"qrCardInfo\": {\n        \"merchantId\": \"002123456789002\",\n        \"merchantTransRef\": \"111222111\",\n        \"terminalId\": \"70022345\"\n    }\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200303 Refund verification successfully - failed input both Promptpay and Card (not support)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"000\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Success\");",
									"    });",
									"});*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.15\",\n    \"approvalCode\": \"{{approvalCode-verifyrefund}}\",\n    \"cardNetworkCode\": \"03\",\n    \"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-verifyrefund}}\",\n    \"reference2\":\"\",\n    \"reference3\":\"\"\n    },\n    \"qrCardInfo\": {\n        \"merchantId\": \"002123456789002\",\n        \"merchantTransRef\": \"111222111\",\n        \"terminalId\": \"70022345\"\n    }\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/verification",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"verification"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1129.00\",\n    \"approvalCode\": \"{{approvalCode-verifyrefund}}\",\n    \"cardNetworkCode\": \"01\",\n    \"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-verifyrefund}}\",\n    \"reference2\":\"\",\n    \"reference3\":\"\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200304 Refund verification failed - Invalid partner signature",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}_091918",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1129.00\",\n    \"approvalCode\": \"{{approvalCode-verifyrefund}}\",\n    \"cardNetworkCode\": \"01\",\n    \"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-verifyrefund}}\",\n    \"reference2\":\"\",\n    \"reference3\":\"\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/verification",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"verification"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200304_1 Refund verification failed - empty partner signature",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid format Signature\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1129.00\",\n    \"approvalCode\": \"{{approvalCode-verifyrefund}}\",\n    \"cardNetworkCode\": \"01\",\n    \"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-verifyrefund}}\",\n    \"reference2\":\"\",\n    \"reference3\":\"\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/verification",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"verification"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"129.00\",\n    \"approvalCode\": \"{{approvalCode-verifyrefund}}\",\n    \"cardNetworkCode\": \"01\",\n    \"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-verifyrefund}}\",\n    \"reference2\":\"\",\n    \"reference3\":\"\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200305 Refund verification failed - data is different from generating partner token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"        pm.response.to.have.status(401);",
									"});",
									"         ",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"29.00\",\n    \"approvalCode\": \"{{approvalCode-verifyrefund}}\",\n    \"cardNetworkCode\": \"01\",\n    \"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-verifyrefund}}\",\n    \"reference2\":\"123456\",\n    \"reference3\":\"78910\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/verification",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"verification"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1129.00\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-verifyrefund}}\",\n    \"reference2\":\"\",\n    \"reference3\":\"\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200306 Refund verification failed - missing approvalCode attribute",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1129.00\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-verifyrefund}}\",\n    \"reference2\":\"\",\n    \"reference3\":\"\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/verification",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"verification"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.15\",\n    \"approvalCode\": \"u123456\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-verifyrefund}}\",\n    \"reference2\":\"\",\n    \"reference3\":\"\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200307 Refund verification failed - approvalCode > 6",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.15\",\n    \"approvalCode\": \"u123456\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-verifyrefund}}\",\n    \"reference2\":\"\",\n    \"reference3\":\"\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/verification",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"verification"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"10000000001101.15\",\n    \"approvalCode\": \"{{approvalCode-verifyrefund}}\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-verifyrefund}}\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200308 Refund verification failed - amount >16",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"10000000001101.15\",\n    \"approvalCode\": \"{{approvalCode-verifyrefund}}\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-verifyrefund}}\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/verification",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"verification"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.95\",\n    \"approvalCode\": \"{{approvalCode-verifyrefund}}\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-verifyrefund}}\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200309 Refund verification failed - mismatch amount",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"/*pm.test(\"Body contains string\",() => {",
									"    let jsonData = pm.response.json()",
									"    pm.expect(jsonData.responseCode).to.include(\"209\");",
									"    pm.expect(jsonData.responseMesg).to.include(\"Transaction not found\");",
									"});*/   "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.95\",\n    \"approvalCode\": \"{{approvalCode-verifyrefund}}\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-verifyrefund}}\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/verification",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"verification"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.15\",\n    \"approvalCode\": \"{{approvalCode-verifyrefund}}\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200310 Refund verification failed -reference1 is empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.15\",\n    \"approvalCode\": \"{{approvalCode-verifyrefund}}\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/verification",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"verification"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.15\",\n    \"approvalCode\": \"{{approvalCode-verifyrefund}}\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"1000202402111234y990999i1230091\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200311 Refund verification failed - invalid reference1 longer than 30",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.15\",\n    \"approvalCode\": \"{{approvalCode-verifyrefund}}\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"1000202402111234y990999i1230091\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/verification",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"verification"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.15\",\n    \"approvalCode\": \"{{approvalCode-verifyrefund}}\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-verifyrefund}}\",\n    \"reference2\":\"1000202402111234e345u1122123991\",\n    \"reference3\":\"\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200312 Refund verification failed - invalid reference2 longer than 30",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.15\",\n    \"approvalCode\": \"{{approvalCode-verifyrefund}}\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-verifyrefund}}\",\n    \"reference2\":\"1000202402111234e345u1122123991\",\n    \"reference3\":\"\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/verification",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"verification"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.15\",\n    \"approvalCode\": \"{{approvalCode-verifyrefund}}\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-verifyrefund}}\",\n    \"reference2\":\"\",\n    \"reference3\":\"1000202402111234e345u1122123991\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200313 Refund verification failed - invalid reference3 longer than 30",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.15\",\n    \"approvalCode\": \"{{approvalCode-verifyrefund}}\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-verifyrefund}}\",\n    \"reference2\":\"\",\n    \"reference3\":\"1000202402111234e345u1122123991\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/verification",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"verification"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"2024/02/11\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.15\",\n    \"approvalCode\": \"{{approvalCode-verifyrefund}}\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-verifyrefund}}\",\n    \"reference2\":\"\",\n    \"reference3\":\"\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200314 Refund verification failed - invalid transDate format",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"2024/02/11\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.15\",\n    \"approvalCode\": \"{{approvalCode-verifyrefund}}\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-verifyrefund}}\",\n    \"reference2\":\"\",\n    \"reference3\":\"\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/verification",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"verification"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"09.45.00+07\",\n    \"amount\": \"1.15\",\n    \"approvalCode\": \"{{approvalCode-verifyrefund}}\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-verifyrefund}}\"\n    //}\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200315 Refund verification failed - invalid transTime format",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"09.45.00+07\",\n    \"amount\": \"1.15\",\n    \"approvalCode\": \"{{approvalCode-verifyrefund}}\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-verifyrefund}}\"\n    //}\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/verification",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"verification"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.15\",\n    \"approvalCode\": \"{{approvalCode-verifyrefund}}\",\n    \"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-verifyrefund}}\"\n    }\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200316 ThaiQR Refund verification failed - missing cardNetworkCode attribute",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.15\",\n    \"approvalCode\": \"{{approvalCode-verifyrefund}}\",\n    \"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-verifyrefund}}\"\n    }\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/verification",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"verification"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.15\",\n    \"approvalCode\": \"{{approvalCode-verifyrefund}}\",\n    \"cardNetworkCode\": \"03\",\n    \"qrCardInfo\": {\n        \"merchantId\": \"\",\n        \"merchantTransRef\": \"111222111\",\n        \"terminalId\": \"70022345\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200317 ThaiQR Refund verification failed -  empty merchantId for Card",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.15\",\n    \"approvalCode\": \"{{approvalCode-verifyrefund}}\",\n    \"cardNetworkCode\": \"03\",\n    \"qrCardInfo\": {\n        \"merchantId\": \"\",\n        \"merchantTransRef\": \"111222111\",\n        \"terminalId\": \"70022345\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/verification",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"verification"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.15\",\n    \"approvalCode\": \"{{approvalCode-verifyrefund}}\",\n    \"cardNetworkCode\": \"03\",\n    \"qrCardInfo\": {\n        \"merchantId\": \"1001202411\",\n        \"merchantTransRef\": \"111222111\",\n        \"terminalId\": \"\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200318 ThaiQR Refund verification failed -  empty terminalId for Card",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.15\",\n    \"approvalCode\": \"{{approvalCode-verifyrefund}}\",\n    \"cardNetworkCode\": \"03\",\n    \"qrCardInfo\": {\n        \"merchantId\": \"1001202411\",\n        \"merchantTransRef\": \"111222111\",\n        \"terminalId\": \"\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/verification",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"verification"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.15\",\n    \"approvalCode\": \"{{approvalCode-verifyrefund}}\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-verifyrefund}}\",\n    \"reference2\":\"\",\n    \"reference3\":\"\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200320 Refund verification failed - voiding not allow",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"/*pm.test(\"Body contains string\",() => {",
									"    let jsonData = pm.response.json()",
									"    pm.expect(jsonData.responseCode).to.include(\"216\");",
									"    pm.expect(jsonData.responseMesg).to.include(\"Voiding not allowed on this Transaction\");",
									"});*/",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.15\",\n    \"approvalCode\": \"{{approvalCode-verifyrefund}}\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-verifyrefund}}\",\n    \"reference2\":\"\",\n    \"reference3\":\"\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/verification",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"verification"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "4.ThaiQR Refund Reversal_v2",
			"item": [
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.unset(\"request-ref-reversal\");",
									"pm.collectionVariables.unset(\"reference1-reversal\");",
									"pm.collectionVariables.unset(\"billerId-reversal\");",
									"",
									"const moment = require('moment');",
									"",
									"pm.collectionVariables.set(\"request-ref-reversal\", moment().format(\"MMDDyyyyHHmmss\"));",
									"pm.collectionVariables.set(\"reference1-reversal\", moment().format(\"MMDDyyyyHHmmss01\"));",
									"pm.collectionVariables.set(\"billerId-reversal\", moment().format(\"MMDDyyyyHHmmss0\"));",
									"pm.collectionVariables.set(\"requestDate\", moment().format(\"yyyy-MM-DD\"));",
									"pm.collectionVariables.set(\"requestTime\", moment().format(\"HH:mm:ss\"));",
									"pm.collectionVariables.set(\"transmit-date-time\", moment().format(\"yyyy-MM-DDTHH:mm:ss.855+07:00\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"DEF SHOP\",\n    \"amount\": \"1.20\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"03\"\n      }\n    ],\n \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1-reversal}}\",\n        \"reference2\": \"REF1002\",\n        \"reference3\": \"REF1003\"\n        },\n  \"qrCardInfo\": \n  {\n    \"merchantId\": \"002102456789002\",\n    \"terminalId\": \"70122345\"\n  },\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pre-Step Generate ThaiQR",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"qrCodeId\", response.data.qrCodeId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref-reversal}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"DEF SHOP\",\n    \"amount\": \"1.20\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"03\"\n      }\n    ],\n \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1-reversal}}\",\n        \"reference2\": \"REF1002\",\n        \"reference3\": \"REF1003\"\n        },\n  \"qrCardInfo\": \n  {\n    \"merchantId\": \"002102456789002\",\n    \"terminalId\": \"70122345\"\n  },\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/qr-generate",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"qr-generate"
							]
						}
					},
					"response": []
				},
				{
					"name": "[Mock] Request Payment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"    let response = pm.response.json();",
									"    pm.collectionVariables.set(\"paymentRequestId\", response.paymentRequestId);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{basicAuthDevPortalPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{basicAuthDevPortalUser}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"description": "(Required) ",
								"key": "transmit-date-time",
								"value": "{{transmit-date-time}}"
							},
							{
								"description": "(Required) This field should be unique for each sequence of request.",
								"key": "request-ref",
								"value": "{{request-ref-reversal}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-reversal}}\",\n    \"reference2\": \"REF1002\",\n    \"reference3\": \"REF1003\",\n    \"amount\": \"1.20\",\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\"\n}\n",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mock-host}}/dev-portal/v1/payment-requests",
							"host": [
								"{{mock-host}}"
							],
							"path": [
								"dev-portal",
								"v1",
								"payment-requests"
							]
						}
					},
					"response": []
				},
				{
					"name": "[Mock] Get Notification - mark PAID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"    let response = pm.response.json();",
									"    pm.collectionVariables.set(\"approvalCode-reversal\", response.approvalCode);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{basicAuthDevPortalPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{basicAuthDevPortalUser}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{mock-host}}/dev-portal/v1/notification/{{paymentRequestId}}",
							"host": [
								"{{mock-host}}"
							],
							"path": [
								"dev-portal",
								"v1",
								"notification",
								"{{paymentRequestId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.20\",\n    \"approvalCode\": \"{{approvalCode-reversal}}\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-reversal}}\",\n    \"reference2\":\"REF1002\",\n    \"reference3\":\"REF1003\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pre-Step Refund verification",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref-reversal}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.20\",\n    \"approvalCode\": \"{{approvalCode-reversal}}\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-reversal}}\",\n    \"reference2\":\"REF1002\",\n    \"reference3\":\"REF1003\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/verification",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"verification"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.20\",\n    \"approvalCode\": \"{{approvalCode-reversal}}\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-reversal}}\",\n    \"reference2\":\"REF1002\",\n    \"reference3\":\"REF1003\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200401 Refund reversal successfully",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"000\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Success\");",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref-reversal}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							},
							{
								"key": "delay",
								"value": "200",
								"type": "text",
								"disabled": true
							},
							{
								"key": "mockup",
								"value": "true",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.20\",\n    \"approvalCode\": \"{{approvalCode-reversal}}\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-reversal}}\",\n    \"reference2\":\"REF1002\",\n    \"reference3\":\"REF1003\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/reversal",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"reversal"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.20\",\n    \"approvalCode\": \"{{approvalCode-reversal}}\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-reversal}}\",\n    \"reference2\":\"REF1002\",\n    \"reference3\":\"REF1003\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200402 Refund reversal failed - Invalid partner signature",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}#890-09",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref-reversal}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.20\",\n    \"approvalCode\": \"{{approvalCode-reversal}}\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-reversal}}\",\n    \"reference2\":\"REF1002\",\n    \"reference3\":\"REF1003\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/reversal",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"reversal"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200402_1 Refund reversal failed - empty partner signature",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid format Signature\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref-reversal}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.20\",\n    \"approvalCode\": \"{{approvalCode-reversal}}\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-reversal}}\",\n    \"reference2\":\"REF1002\",\n    \"reference3\":\"REF1003\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/reversal",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"reversal"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.20\",\n    \"approvalCode\": \"{{approvalCode-reversal}}\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-reversal}}\",\n    \"reference2\":\"REF1002\",\n    \"reference3\":\"REF1003\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200403 Refund reversal failed - data is different from generating partner token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"        pm.response.to.have.status(401);",
									"});",
									"         ",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref-reversal}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.90\",\n    \"approvalCode\": \"{{approvalCode-reversal}}\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-reversal}}\",\n    \"reference2\":\"REF1002\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/reversal",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"reversal"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.20\",\n    \"approvalCode\": \"\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-reversal}}\",\n    \"reference2\":\"REF1002\",\n    \"reference3\":\"REF1003\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200404 Refund reversal failed - approvalCode is empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref-reversal}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.20\",\n    \"approvalCode\": \"\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-reversal}}\",\n    \"reference2\":\"REF1002\",\n    \"reference3\":\"REF1003\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/reversal",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"reversal"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.20\",\n    \"approvalCode\": \"a012228\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-reversal}}\",\n    \"reference2\":\"REF1002\",\n    \"reference3\":\"REF1003\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200405 Refund reversal failed - approvalCode longer than 6",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref-reversal}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.20\",\n    \"approvalCode\": \"a012228\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-reversal}}\",\n    \"reference2\":\"REF1002\",\n    \"reference3\":\"REF1003\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/reversal",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"reversal"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.20\",\n    \"approvalCode\": \"{{approvalCode-reversal}}\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"\",\n    \"reference1\": \"{{reference1-reversal}}\",\n    \"reference2\":\"REF1002\",\n    \"reference3\":\"REF1003\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200406 Refund reversal failed - invalid billerId is empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 403\", function () {",
									"        pm.response.to.have.status(403);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"052\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Unknown Biller ID\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref-reversal}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.20\",\n    \"approvalCode\": \"{{approvalCode-reversal}}\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"\",\n    \"reference1\": \"{{reference1-reversal}}\",\n    \"reference2\":\"REF1002\",\n    \"reference3\":\"REF1003\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/reversal",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"reversal"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.20\",\n    \"approvalCode\": \"{{approvalCode-reversal}}\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"1001202412191810\",\n    \"reference1\": \"{{reference1-reversal}}\",\n    \"reference2\":\"REF1002\",\n    \"reference3\":\"REF1003\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200407 Refund reversal failed - invalid billerId longer than 15",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 403\", function () {",
									"        pm.response.to.have.status(403);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"052\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Unknown Biller ID\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref-reversal}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.20\",\n    \"approvalCode\": \"{{approvalCode-reversal}}\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"1001202412191810\",\n    \"reference1\": \"{{reference1-reversal}}\",\n    \"reference2\":\"REF1002\",\n    \"reference3\":\"REF1003\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/reversal",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"reversal"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.20\",\n    \"approvalCode\": \"{{approvalCode-reversal}}\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"\",\n    \"reference2\":\"REF1002\",\n    \"reference3\":\"REF1003\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200408 Refund reversal failed - empty reference1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref-reversal}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.20\",\n    \"approvalCode\": \"{{approvalCode-reversal}}\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"\",\n    \"reference2\":\"REF1002\",\n    \"reference3\":\"REF1003\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/reversal",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"reversal"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.20\",\n    \"approvalCode\": \"{{approvalCode-reversal}}\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"100100020240211131787171u171617\",\n    \"reference2\":\"REF1002\",\n    \"reference3\":\"REF1003\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200409 Refund reversal failed - invalid reference1 longer than 30",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref-reversal}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.20\",\n    \"approvalCode\": \"{{approvalCode-reversal}}\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"100100020240211131787171u171617\",\n    \"reference2\":\"REF1002\",\n    \"reference3\":\"REF1003\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/reversal",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"reversal"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-reversal}}\",\n    \"reference2\":\"REF0010011100021089765432134561\",\n    \"reference3\":\"\",\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"690.00\",\n    \"approvalCode\": \"{{approvalCode-reversal}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200410 Refund reversal failed - invalid reference2 longer than 30",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref-reversal}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-reversal}}\",\n    \"reference2\":\"REF0010011100021089765432134561\",\n    \"reference3\":\"\",\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"690.00\",\n    \"approvalCode\": \"{{approvalCode-reversal}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/reversal",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"reversal"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-reversal}}\",\n    \"reference2\":\"\",\n    \"reference3\":\"REF0010011100021089765432134561\",\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"690.00\",\n    \"approvalCode\": \"{{approvalCode-reversal}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200411 Refund reversal failed - invalid reference3 longer than 30",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref-reversal}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-reversal}}\",\n    \"reference2\":\"\",\n    \"reference3\":\"REF0010011100021089765432134561\",\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"690.00\",\n    \"approvalCode\": \"{{approvalCode-reversal}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/reversal",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"reversal"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-reversal}}\",\n    \"reference2\":\"\",\n    \"reference3\":\"\",\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"10000000000016.12\",\n    \"approvalCode\": \"{{approvalCode-reversal}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200412 Refund reversal failed - amount >16",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref-reversal}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-reversal}}\",\n    \"reference2\":\"\",\n    \"reference3\":\"\",\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"10000000000016.12\",\n    \"approvalCode\": \"{{approvalCode-reversal}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/reversal",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"reversal"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-reversal}}\",\n    \"reference2\":\"REF110002\",\n    \"reference3\":\"\",\n    \"transDate\": \"2023/11/04\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"690.00\",\n    \"approvalCode\": \"{{approvalCode-reversal}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200413 Refund reversal failed - invalid transDate format",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref-reversal}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-reversal}}\",\n    \"reference2\":\"REF110002\",\n    \"reference3\":\"\",\n    \"transDate\": \"2023/11/04\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"690.00\",\n    \"approvalCode\": \"{{approvalCode-reversal}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/reversal",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"reversal"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-reversal}}\",\n    \"reference2\":\"REF110002\",\n    \"reference3\":\"\",\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"14.39.50\",\n    \"amount\": \"690.00\",\n    \"approvalCode\": \"{{approvalCode-reversal}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200414 Refund reversal failed - invalid transTime format",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref-reversal}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-reversal}}\",\n    \"reference2\":\"REF110002\",\n    \"reference3\":\"\",\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"14.39.50\",\n    \"amount\": \"690.00\",\n    \"approvalCode\": \"{{approvalCode-reversal}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/reversal",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"reversal"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.20\",\n    \"approvalCode\": \"{{approvalCode-reversal}}\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-reversal}}\",\n    \"reference2\":\"REF1002\",\n    \"reference3\":\"REF1003\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200415 Refund reversal failed - transaction has not been marked as pre-void",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"setTimeout(function(){}, 2000);",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"/*pm.test(\"Body contains string\",() => {",
									"    let jsonData = pm.response.json()",
									"    pm.expect(jsonData.responseCode).to.include(\"216\");",
									"    pm.expect(jsonData.responseMesg).to.include(\"Voiding not allowed on this Transaction\");",
									"});*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref-reversal}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.20\",\n    \"approvalCode\": \"{{approvalCode-reversal}}\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-reversal}}\",\n    \"reference2\":\"REF1002\",\n    \"reference3\":\"REF1003\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/reversal",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"reversal"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "5.TheiQR Refund Advice_v2",
			"item": [
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.unset(\"request-ref-advice\");",
									"pm.collectionVariables.unset(\"reference1-advice\");",
									"",
									"const moment = require('moment');",
									"",
									"pm.collectionVariables.set(\"request-ref-advice\", moment().format(\"yyyyMMDDHHmmss\"));",
									"pm.collectionVariables.set(\"reference1-advice\", moment().format(\"yyyyMMDDHHmmss01\"));",
									"pm.collectionVariables.set(\"requestDate\", moment().format(\"yyyy-MM-DD\"));",
									"pm.collectionVariables.set(\"requestTime\", moment().format(\"HH:mm:ss\"));",
									"pm.collectionVariables.set(\"transmit-date-time\", moment().format(\"yyyy-MM-DDTHH:mm:ss.855+07:00\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"DEF SHOP\",\n    \"amount\": \"1.16\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"03\"\n      }\n    ],\n \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1-advice}}\",\n        \"reference2\": \"REF1002\",\n        \"reference3\": \"REF1003\"\n        },\n  \"qrCardInfo\": \n  {\n    \"merchantId\": \"002102456789002\",\n    \"terminalId\": \"70122345\"\n  },\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pre-Step Generate ThaiQR",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"setTimeout(function(){}, 2000);",
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"qrCodeId\", response.data.qrCodeId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref-advice}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestDate\": \"{{requestDate}}\",\n    \"requestTime\": \"{{requestTime}}\",\n    \"merchantCountry\": \"TH\",\n    \"merchantName\": \"DEF SHOP\",\n    \"amount\": \"1.16\",\n    \"cardNetworkPermList\": \n    [\n      {\n        \"cardNetworkPerm\": \"03\"\n      }\n    ],\n \"qrPromptpayInfo\": {\n        \"billerId\": \"{{billerId}}\",\n        \"reference1\": \"{{reference1-advice}}\",\n        \"reference2\": \"REF1002\",\n        \"reference3\": \"REF1003\"\n        },\n  \"qrCardInfo\": \n  {\n    \"merchantId\": \"002102456789002\",\n    \"terminalId\": \"70122345\"\n  },\n    \"extra1\": \"Remark1\",\n    \"extra2\": \"Remark2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/qr-generate",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"qr-generate"
							]
						}
					},
					"response": []
				},
				{
					"name": "[Mock] Request Payment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"    let response = pm.response.json();",
									"    pm.collectionVariables.set(\"paymentRequestId\", response.paymentRequestId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{basicAuthDevPortalPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{basicAuthDevPortalUser}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"description": "(Required) ",
								"key": "transmit-date-time",
								"value": "{{transmit-date-time}}"
							},
							{
								"description": "(Required) This field should be unique for each sequence of request.",
								"key": "request-ref",
								"value": "{{request-ref-advice}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-advice}}\",\n    \"reference2\": \"REF110003\",\n    \"reference3\": \"\",\n    \"amount\": \"1.16\",\n    \"transDate\": \"{{requestDate}}\",\n    \"requestDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\"\n}\n",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{mock-host}}/dev-portal/v1/payment-requests",
							"host": [
								"{{mock-host}}"
							],
							"path": [
								"dev-portal",
								"v1",
								"payment-requests"
							]
						}
					},
					"response": []
				},
				{
					"name": "[Mock] Get Notification - mark PAID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"    let response = pm.response.json();",
									"    pm.collectionVariables.set(\"approvalCode-advice\", response.approvalCode);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{basicAuthDevPortalPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{basicAuthDevPortalUser}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{mock-host}}/dev-portal/v1/notification/{{paymentRequestId}}",
							"host": [
								"{{mock-host}}"
							],
							"path": [
								"dev-portal",
								"v1",
								"notification",
								"{{paymentRequestId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.16\",\n    \"approvalCode\": \"{{approvalCode-advice}}\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-advice}}\",\n    \"reference2\":\"REF1002\",\n    \"reference3\":\"REF1003\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pre-Step Refund verification",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref-advice}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.16\",\n    \"approvalCode\": \"{{approvalCode-advice}}\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-advice}}\",\n    \"reference2\":\"REF1002\",\n    \"reference3\":\"REF1003\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/verification",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"verification"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.16\",\n    \"approvalCode\": \"{{approvalCode-advice}}\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-advice}}\",\n    \"reference2\":\"REF1002\",\n    \"reference3\":\"REF1003\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200501 Refund advice successfully",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"000\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Success\");",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref-advice}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							},
							{
								"key": "delay",
								"value": "200",
								"type": "text",
								"disabled": true
							},
							{
								"key": "mockup",
								"value": "true",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.16\",\n    \"approvalCode\": \"{{approvalCode-advice}}\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-advice}}\",\n    \"reference2\":\"REF1002\",\n    \"reference3\":\"REF1003\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/advice",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"advice"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-advice}}\",\n    \"reference2\":\"REF110003\",\n    \"reference3\":\"\",\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1890.00\",\n    \"approvalCode\": \"{{approvalCode-advice}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200502 Refund advice failed - Invalid partner signature",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}_98iur3",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref-advice}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-advice}}\",\n    \"reference2\":\"REF110003\",\n    \"reference3\":\"\",\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1890.00\",\n    \"approvalCode\": \"{{approvalCode-advice}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/advice",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"advice"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200502_1 Refund advice failed - empty partner signature",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid format Signature\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref-advice}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-advice}}\",\n    \"reference2\":\"REF110003\",\n    \"reference3\":\"\",\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1890.00\",\n    \"approvalCode\": \"{{approvalCode-advice}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/advice",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"advice"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-advice}}\",\n    \"reference2\":\"REF110003\",\n    \"reference3\":\"\",\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.16\",\n    \"approvalCode\": \"{{approvalCode-advice}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200503 Refund advice failed - data is different from generating partner token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"        pm.response.to.have.status(401);",
									"});",
									"",
									"   "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref-advice}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-advice}}\",\n    \"reference2\":\"\",\n    \"reference3\":\"\",\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.16\",\n    \"approvalCode\": \"{{approvalCode-advice}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/advice",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"advice"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.16\",\n    \"approvalCode\": \"{{approvalCode-advice}}\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-advice}}\",\n    \"reference2\":\"REF1002\",\n    \"reference3\":\"REF1003\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200416 Refund reversal failed - already VOID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"/*pm.test(\"Body contains string\",() => {",
									"    let jsonData = pm.response.json()",
									"    pm.expect(jsonData.responseCode).to.include(\"213\");",
									"    pm.expect(jsonData.responseMesg).to.include(\"Transaction already void\");",
									"});*/",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref-advice}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.16\",\n    \"approvalCode\": \"{{approvalCode-advice}}\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-advice}}\",\n    \"reference2\":\"REF1002\",\n    \"reference3\":\"REF1003\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/reversal",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"reversal"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.16\",\n    \"approvalCode\": \"{{approvalCode-advice}}\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-advice}}\",\n    \"reference2\":\"REF1002\",\n    \"reference3\":\"REF1003\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200504 Refund advice failed - already VOID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Body contains string\",() => {",
									"    let jsonData = pm.response.json()",
									"    pm.expect(jsonData.responseCode).to.include(\"213\");",
									"    pm.expect(jsonData.responseMesg).to.include(\"Transaction already void\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref-advice}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.16\",\n    \"approvalCode\": \"{{approvalCode-advice}}\",\n    //\"cardNetworkCode\": \"01\",\n    //\"qrPromptpayInfo\": {\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-advice}}\",\n    \"reference2\":\"REF1002\",\n    \"reference3\":\"REF1003\"\n    //}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/advice",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"advice"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-advice}}\",\n    \"reference2\":\"REF110003\",\n    \"reference3\":\"\",\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.16\",\n    \"approvalCode\": \"abc123456\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200505 Refund advice failed - invalid approvalCode longer than 6",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref-advice}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-advice}}\",\n    \"reference2\":\"REF110003\",\n    \"reference3\":\"\",\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.16\",\n    \"approvalCode\": \"abc123456\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/advice",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"advice"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-advice}}\",\n    \"reference2\":\"REF110003\",\n    \"reference3\":\"\",\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.16\",\n    \"approvalCode\": \"3f9cQ\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200506 Refund advice failed - non-existing approvalCode",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"/*pm.test(\"Body contains string\",() => {",
									"    let jsonData = pm.response.json()",
									"    pm.expect(jsonData.responseCode).to.include(\"209\");",
									"    pm.expect(jsonData.responseMesg).to.include(\"Transaction not found\");",
									"});*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref-advice}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-advice}}\",\n    \"reference2\":\"REF110003\",\n    \"reference3\":\"\",\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1.16\",\n    \"approvalCode\": \"3f9cQ\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/advice",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"advice"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"202311051421020091\",\n    \"reference1\": \"{{reference1-advice}}\",\n    \"reference2\":\"REF110003\",\n    \"reference3\":\"\",\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1890.00\",\n    \"approvalCode\": \"{{approvalCode-advice}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200507 Refund advice failed - invalid billerId longer than 15",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 403\", function () {",
									"        pm.response.to.have.status(403);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"052\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Unknown Biller ID\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref-advice}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"202311051421020091\",\n    \"reference1\": \"{{reference1-advice}}\",\n    \"reference2\":\"REF110003\",\n    \"reference3\":\"\",\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1890.00\",\n    \"approvalCode\": \"{{approvalCode-advice}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/advice",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"advice"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"\",\n    \"reference1\": \"{{reference1-advice}}\",\n    \"reference2\":\"REF110003\",\n    \"reference3\":\"\",\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1890.00\",\n    \"approvalCode\": \"{{approvalCode-advice}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200507_1 Refund advice failed - invalid billerId is empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 403\", function () {",
									"        pm.response.to.have.status(403);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"052\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Unknown Biller ID\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref-advice}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"\",\n    \"reference1\": \"{{reference1-advice}}\",\n    \"reference2\":\"REF110003\",\n    \"reference3\":\"\",\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1890.00\",\n    \"approvalCode\": \"{{approvalCode-advice}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/advice",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"advice"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"202311050090080090001234567890987\",\n    \"reference2\":\"REF110003\",\n    \"reference3\":\"\",\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1890.00\",\n    \"approvalCode\": \"{{approvalCode-advice}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200508 Refund advice failed - invalid reference1 longer than 30",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref-advice}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"202311050090080090001234567890987\",\n    \"reference2\":\"REF110003\",\n    \"reference3\":\"\",\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1890.00\",\n    \"approvalCode\": \"{{approvalCode-advice}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/advice",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"advice"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"\",\n    \"reference2\":\"REF110003\",\n    \"reference3\":\"\",\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1890.00\",\n    \"approvalCode\": \"{{approvalCode-advice}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200508_1 Refund advice failed - invalid reference1 is empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"setTimeout(function(){}, 2000);",
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref-advice}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"\",\n    \"reference2\":\"REF110003\",\n    \"reference3\":\"\",\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1890.00\",\n    \"approvalCode\": \"{{approvalCode-advice}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/advice",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"advice"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-advice}}\",\n    \"reference2\": \"202311050090080090001234567890987\",\n    \"reference3\":\"\",\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1890.00\",\n    \"approvalCode\": \"{{approvalCode-advice}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200509 Refund advice failed - invalid reference2 longer than 30",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref-advice}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-advice}}\",\n    \"reference2\": \"202311050090080090001234567890987\",\n    \"reference3\":\"\",\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1890.00\",\n    \"approvalCode\": \"{{approvalCode-advice}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/advice",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"advice"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-advice}}\",\n    \"reference2\": \"REF110003\",\n    \"reference3\": \"202311050090080090001234567890987\",\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1890.00\",\n    \"approvalCode\": \"{{approvalCode-advice}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200510 Refund advice failed - invalid reference3 longer than 30",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref-advice}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-advice}}\",\n    \"reference2\": \"REF110003\",\n    \"reference3\": \"202311050090080090001234567890987\",\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1890.00\",\n    \"approvalCode\": \"{{approvalCode-advice}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/advice",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"advice"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-advice}}\",\n    \"reference2\": \"REF110003\",\n    \"reference3\": \"\",\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"10000000000016.11\",\n    \"approvalCode\": \"{{approvalCode-advice}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200511 Refund advice failed - invalid amount > 16",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref-advice}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-advice}}\",\n    \"reference2\": \"REF110003\",\n    \"reference3\": \"\",\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"10000000000016.11\",\n    \"approvalCode\": \"{{approvalCode-advice}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/advice",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"advice"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-advice}}\",\n    \"reference2\": \"REF110003\",\n    \"reference3\": \"\",\n    \"transDate\": \"05/11/2023\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1890.00\",\n    \"approvalCode\": \"{{approvalCode-advice}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200512 Refund advice failed - invalid transDate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref-advice}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-advice}}\",\n    \"reference2\": \"REF110003\",\n    \"reference3\": \"\",\n    \"transDate\": \"05/11/2023\",\n    \"transTime\": \"{{requestTime}}\",\n    \"amount\": \"1890.00\",\n    \"approvalCode\": \"{{approvalCode-advice}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/advice",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"advice"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-advice}}\",\n    \"reference2\": \"REF110003\",\n    \"reference3\": \"\",\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"15.15PM\",\n    \"amount\": \"1890.00\",\n    \"approvalCode\": \"{{approvalCode-advice}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200513 Refund advice failed - invalid transTime",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref-advice}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"{{billerId}}\",\n    \"reference1\": \"{{reference1-advice}}\",\n    \"reference2\": \"REF110003\",\n    \"reference3\": \"\",\n    \"transDate\": \"{{requestDate}}\",\n    \"transTime\": \"15.15PM\",\n    \"amount\": \"1890.00\",\n    \"approvalCode\": \"{{approvalCode-advice}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/refund/advice",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"refund",
								"advice"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "6.Global Notification",
			"item": [
				{
					"name": "type AppToApp",
					"item": [
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.unset(\"billerId-globalnoti-app\");",
											"pm.collectionVariables.unset(\"reference1-globalnoti-app\");",
											"",
											"const moment = require('moment');",
											"",
											"pm.collectionVariables.set(\"billerId-globalnoti-app\", moment().format(\"yyyyMMDDHHmmss\"));",
											"pm.collectionVariables.set(\"reference1-globalnoti-app\", moment().format(\"yyyyMMDDHHmmss01\"));",
											"pm.collectionVariables.set(\"payment-date-time\", moment().format(\"yyyy-MM-DDTHH:mm:ss.855+07:00\"));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJib2R5Ijoie1xuICAgIFwicGF5bWVudFJlcXVlc3RJZFwiOiBcIjIzNEFCQjU4Q0MwMFwiLFxuICAgIFwic2VydmljZUNvZGVcIjogXCJCQkxURVNUXCIsXG4gICAgXCJwcm92aWRlcklkXCI6IFwiQkJMVEVTVFwiLFxuICAgIFwiYmlsbGVySWRcIjogXCIxMjM0NTY3ODkwMTIzNDVcIixcbiAgICBcInJlZmVyZW5jZTFcIjogXCIxMTI0NTc5OTk4IVwiLFxuICAgIFwicmVmZXJlbmNlMlwiOiBcIjIyNTU1MzQ3QUJcIixcbiAgICBcInJlZmVyZW5jZTNcIjogXCIyMDE3MTEwNjE1MTU1MFwiLFxuICAgIFwidG90YWxBbW91bnRcIjogOTk5OTk5OTk5Ljk5LFxuICAgIFwiY3VycmVuY3lDb2RlXCI6IFwiVEhCXCIsXG4gICAgXCJwYXltZW50U3RhdHVzXCI6IFwic3VjY2Vzc1wiLFxuICAgIFwicGF5bWVudEFjY291bnRcIjogXCJ4eHgteC14MDA1NS14XCIsXG4gICAgXCJwYXltZW50RGF0ZVRpbWVcIjogXCIyMDE3LTAyLTE1VDE1OjIzOjExLjAwMSswNzowMFwiLFxuICAgIFwicGF5bWVudFJlZmVyZW5jZUlEXCI6IFwiMTIzNDU2XCIsXG4gICAgXCJzbGlwSW1hZ2VcIjogXCJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQVVBQUFBRkNBWUFBQUNOYnlibEFBQUFIRWxFUVZRSTEyUDRcL1wvOFwvdzM4R0lBWERJQktFMERIeGdsak5CQUFPOVRYTDBZNE9Id0FBQUFCSlJVNUVya0pnZ2c9PVwiLFxuICAgIFwicGF5ZWVJZFwiOiBcIjEyMzQ1Njc4OTAxMjNcIixcbiAgICBcInRyYW5zRGF0ZVwiOiBcIjIwMTctMTEtMTZcIixcbiAgICBcInRyYW5zVGltZVwiOiBcIjE3OjUwOjUwXCIsXG4gICAgXCJ0cmFuc1JlZlwiOiBcIjEwMDk5OTEyMzQ1Njc4OVwiLFxuICAgIFwiY2hhbm5lbFwiOiBcIkNcIixcbiAgICBcInRlcm1UeXBlXCI6IFwiODBcIixcbiAgICBcInRlcm1JZFwiOiBcIjAxMDEyNVwiLFxuICAgIFwiYW1vdW50XCI6IDk5OTk5OTk5OTk5OTk5OS45OSxcbiAgICBcImZyb21CYW5rXCI6IFwiMDAyXCIsXG4gICAgXCJmcm9tQnJhbmNoXCI6IFwiMDE0N1wiLFxuICAgIFwiZnJvbU5hbWVcIjogXCJBQkNEXCIsXG4gICAgXCJiYW5rUmVmXCI6IFwiQkJMXCIsXG4gICAgXCJhcHByb3ZhbENvZGVcIjogXCJFWEFNUExcIixcbiAgICBcInR4blR5cGVcIjogXCJDXCIsXG4gICAgXCJyZXRyeUZsYWdcIjogXCJZXCJcbn0iLCJleHAiOjE2ODU3MDIxMzEsImlhdCI6MTY4NTYxNTczMSwianRpIjoiNTQxMzNkODQtMDYyYi00NTUxLTk3ZTgtMzQ3ZTQ1YzMwOGU3In0.VEWEqYCsp7tetDWu1ZaPVW_13ewIoHJwqX7Q_hJWn_F9pUp-92VNbRnEdsPN0e41auIZJe2oithadqPKZvvZhYPWkjucYWXSyHeE32q-sBMlSo_Uf2sqb_bHFKGpZYKQTGmeaEjNs7aPUjApCm6EYxFVoyEGYOtU4t2l9qjC3eSt-3hYR2_FQJMoxvLUt1Nwu19it_8SES--cQ6PwcvoXWnQbBoE8j5wp5sGZmXP__-oWW7xAn6EqteXU9QvaTkE9Nzu2dJCfmpaLi2fBP82qHt6MqPfWZsZJ1gqw9tP8W7yxXimnRmpItZqB_53CdWmSvVUYpXqsBLGHrsweOMqRD-a03IX8aA1zVuFeQ3QsqtJKkp-pz7a9ZsfGemC2veEwxbLzm1QSe2iD1d4Qbjsan-Hdi78Uf1zhTQW1JOPygZPkNihxZ9TtjQvw9k0w0gHgcdhWSa7NUIbhoKGaGnawtqs9HjYLurJDVDvHF-681TBWVa4ipIrRISkZodCAUVUE8XUNQhxys02ObGpxa4O9Gc8JrCnMcSmCO5L2trmvpUVQkdoPLfbqyMBitHTIzt6oQWbnbE4Xp2pwkl0lmfCWq6OK-iZIoMtuaSpKi8lusYZTxZki2EA6OvUv_ibKbxI39VwEstqwOhA06rL60TEBPIKe_Birs44Iwk3ZQIwjjk",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "2017-03-15T15:23:11.001+07:00",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "d849f8-f6c1-11ec-b939-0242ac120002",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"AppToApp\",\n    \"data\": {\n        \"serviceCode\": \"BBLTEST1\",\n        \"billerId\": \"{{billerId-globalnoti-app}}\",\n        \"reference1\": \"{{reference1-globalnoti-app}}\",\n        \"reference2\": \"APP1001\",\n        \"totalAmount\": \"1999.80\",\n        \"currencyCode\": \"THB\",\n        \"paymentStatus\": \"SUCCESS\",\n        \"paymentAccount\": \"xxx-x-x0055-x\",\n        \"paymentDateTime\": \"{{payment-date-time}}\",\n        \"paymentReferenceID\": \"123456\",\n        \"slipImage\": \"iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00341 Send Global Notification - type AppToApp success",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"000\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Success\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"AppToApp\",\n    \"data\": {\n        \"serviceCode\": \"BBLTEST1\",\n        \"billerId\": \"{{billerId-globalnoti-app}}\",\n        \"reference1\": \"{{reference1-globalnoti-app}}\",\n        \"reference2\": \"APP1001\",\n        \"totalAmount\": \"1999.80\",\n        \"currencyCode\": \"THB\",\n        \"paymentStatus\": \"SUCCESS\",\n        \"paymentAccount\": \"xxx-x-x0055-x\",\n        \"paymentDateTime\": \"{{payment-date-time}}\",\n        \"paymentReferenceID\": \"123456\",\n        \"slipImage\": \"iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.unset(\"billerId-globalnoti-app\");",
											"pm.collectionVariables.unset(\"reference1-globalnoti-app\");",
											"",
											"const moment = require('moment');",
											"",
											"pm.collectionVariables.set(\"billerId-globalnoti-app\", moment().format(\"yyyyMMDDHHmmss\"));",
											"pm.collectionVariables.set(\"reference1-globalnoti-app\", moment().format(\"yyyyMMDDHHmmss01\"));",
											"pm.collectionVariables.set(\"payment-date-time\", moment().format(\"yyyy-MM-DDTHH:mm:ss.855+07:00\"));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJib2R5Ijoie1xuICAgIFwicGF5bWVudFJlcXVlc3RJZFwiOiBcIjIzNEFCQjU4Q0MwMFwiLFxuICAgIFwic2VydmljZUNvZGVcIjogXCJCQkxURVNUXCIsXG4gICAgXCJwcm92aWRlcklkXCI6IFwiQkJMVEVTVFwiLFxuICAgIFwiYmlsbGVySWRcIjogXCIxMjM0NTY3ODkwMTIzNDVcIixcbiAgICBcInJlZmVyZW5jZTFcIjogXCIxMTI0NTc5OTk4IVwiLFxuICAgIFwicmVmZXJlbmNlMlwiOiBcIjIyNTU1MzQ3QUJcIixcbiAgICBcInJlZmVyZW5jZTNcIjogXCIyMDE3MTEwNjE1MTU1MFwiLFxuICAgIFwidG90YWxBbW91bnRcIjogOTk5OTk5OTk5Ljk5LFxuICAgIFwiY3VycmVuY3lDb2RlXCI6IFwiVEhCXCIsXG4gICAgXCJwYXltZW50U3RhdHVzXCI6IFwic3VjY2Vzc1wiLFxuICAgIFwicGF5bWVudEFjY291bnRcIjogXCJ4eHgteC14MDA1NS14XCIsXG4gICAgXCJwYXltZW50RGF0ZVRpbWVcIjogXCIyMDE3LTAyLTE1VDE1OjIzOjExLjAwMSswNzowMFwiLFxuICAgIFwicGF5bWVudFJlZmVyZW5jZUlEXCI6IFwiMTIzNDU2XCIsXG4gICAgXCJzbGlwSW1hZ2VcIjogXCJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQVVBQUFBRkNBWUFBQUNOYnlibEFBQUFIRWxFUVZRSTEyUDRcL1wvOFwvdzM4R0lBWERJQktFMERIeGdsak5CQUFPOVRYTDBZNE9Id0FBQUFCSlJVNUVya0pnZ2c9PVwiLFxuICAgIFwicGF5ZWVJZFwiOiBcIjEyMzQ1Njc4OTAxMjNcIixcbiAgICBcInRyYW5zRGF0ZVwiOiBcIjIwMTctMTEtMTZcIixcbiAgICBcInRyYW5zVGltZVwiOiBcIjE3OjUwOjUwXCIsXG4gICAgXCJ0cmFuc1JlZlwiOiBcIjEwMDk5OTEyMzQ1Njc4OVwiLFxuICAgIFwiY2hhbm5lbFwiOiBcIkNcIixcbiAgICBcInRlcm1UeXBlXCI6IFwiODBcIixcbiAgICBcInRlcm1JZFwiOiBcIjAxMDEyNVwiLFxuICAgIFwiYW1vdW50XCI6IDk5OTk5OTk5OTk5OTk5OS45OSxcbiAgICBcImZyb21CYW5rXCI6IFwiMDAyXCIsXG4gICAgXCJmcm9tQnJhbmNoXCI6IFwiMDE0N1wiLFxuICAgIFwiZnJvbU5hbWVcIjogXCJBQkNEXCIsXG4gICAgXCJiYW5rUmVmXCI6IFwiQkJMXCIsXG4gICAgXCJhcHByb3ZhbENvZGVcIjogXCJFWEFNUExcIixcbiAgICBcInR4blR5cGVcIjogXCJDXCIsXG4gICAgXCJyZXRyeUZsYWdcIjogXCJZXCJcbn0iLCJleHAiOjE2ODU3MDIxMzEsImlhdCI6MTY4NTYxNTczMSwianRpIjoiNTQxMzNkODQtMDYyYi00NTUxLTk3ZTgtMzQ3ZTQ1YzMwOGU3In0.VEWEqYCsp7tetDWu1ZaPVW_13ewIoHJwqX7Q_hJWn_F9pUp-92VNbRnEdsPN0e41auIZJe2oithadqPKZvvZhYPWkjucYWXSyHeE32q-sBMlSo_Uf2sqb_bHFKGpZYKQTGmeaEjNs7aPUjApCm6EYxFVoyEGYOtU4t2l9qjC3eSt-3hYR2_FQJMoxvLUt1Nwu19it_8SES--cQ6PwcvoXWnQbBoE8j5wp5sGZmXP__-oWW7xAn6EqteXU9QvaTkE9Nzu2dJCfmpaLi2fBP82qHt6MqPfWZsZJ1gqw9tP8W7yxXimnRmpItZqB_53CdWmSvVUYpXqsBLGHrsweOMqRD-a03IX8aA1zVuFeQ3QsqtJKkp-pz7a9ZsfGemC2veEwxbLzm1QSe2iD1d4Qbjsan-Hdi78Uf1zhTQW1JOPygZPkNihxZ9TtjQvw9k0w0gHgcdhWSa7NUIbhoKGaGnawtqs9HjYLurJDVDvHF-681TBWVa4ipIrRISkZodCAUVUE8XUNQhxys02ObGpxa4O9Gc8JrCnMcSmCO5L2trmvpUVQkdoPLfbqyMBitHTIzt6oQWbnbE4Xp2pwkl0lmfCWq6OK-iZIoMtuaSpKi8lusYZTxZki2EA6OvUv_ibKbxI39VwEstqwOhA06rL60TEBPIKe_Birs44Iwk3ZQIwjjk",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "2017-03-15T15:23:11.001+07:00",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "d849f8-f6c1-11ec-b939-0242ac120002",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"AppToApp\",\n    \"data\": {\n        \"serviceCode\": \"BBLTEST1\",\n        \"billerId\": \"{{billerId-globalnoti-app}}\",\n        \"reference1\": \"{{reference1-globalnoti-app}}\",\n        \"reference2\": \"APP1001\",\n        \"totalAmount\": \"1999.80\",\n        \"currencyCode\": \"THB\",\n        \"paymentStatus\": \"SUCCESS\",\n        \"paymentAccount\": \"xxx-x-x0055-x\",\n        \"paymentDateTime\": \"{{payment-date-time}}\",\n        \"paymentReferenceID\": \"123456\",\n        \"slipImage\": \"iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00342 Send Global Notification failed - Invalid partner signature",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}_Uiyt6a",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"AppToApp\",\n    \"data\": {\n        \"serviceCode\": \"BBLTEST1\",\n        \"billerId\": \"{{billerId-globalnoti-app}}\",\n        \"reference1\": \"{{reference1-globalnoti-app}}\",\n        \"reference2\": \"APP1001\",\n        \"totalAmount\": \"1999.80\",\n        \"currencyCode\": \"THB\",\n        \"paymentStatus\": \"SUCCESS\",\n        \"paymentAccount\": \"xxx-x-x0055-x\",\n        \"paymentDateTime\": \"{{payment-date-time}}\",\n        \"paymentReferenceID\": \"123456\",\n        \"slipImage\": \"iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00342_1 Send Global Notification failed - empty partner signature",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid format Signature\");",
											"    });",
											"         ",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"AppToApp\",\n    \"data\": {\n        \"serviceCode\": \"BBLTEST1\",\n        \"billerId\": \"{{billerId-globalnoti-app}}\",\n        \"reference1\": \"{{reference1-globalnoti-app}}\",\n        \"reference2\": \"APP1001\",\n        \"totalAmount\": \"1999.80\",\n        \"currencyCode\": \"THB\",\n        \"paymentStatus\": \"SUCCESS\",\n        \"paymentAccount\": \"xxx-x-x0055-x\",\n        \"paymentDateTime\": \"{{payment-date-time}}\",\n        \"paymentReferenceID\": \"123456\",\n        \"slipImage\": \"iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.unset(\"billerId-globalnoti-app\");",
											"pm.collectionVariables.unset(\"reference1-globalnoti-app\");",
											"",
											"const moment = require('moment');",
											"",
											"pm.collectionVariables.set(\"billerId-globalnoti-app\", moment().format(\"yyyyMMDDHHmmss\"));",
											"pm.collectionVariables.set(\"reference1-globalnoti-app\", moment().format(\"yyyyMMDDHHmmss01\"));",
											"pm.collectionVariables.set(\"payment-date-time\", moment().format(\"yyyy-MM-DDTHH:mm:ss.855+07:00\"));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJib2R5Ijoie1xuICAgIFwicGF5bWVudFJlcXVlc3RJZFwiOiBcIjIzNEFCQjU4Q0MwMFwiLFxuICAgIFwic2VydmljZUNvZGVcIjogXCJCQkxURVNUXCIsXG4gICAgXCJwcm92aWRlcklkXCI6IFwiQkJMVEVTVFwiLFxuICAgIFwiYmlsbGVySWRcIjogXCIxMjM0NTY3ODkwMTIzNDVcIixcbiAgICBcInJlZmVyZW5jZTFcIjogXCIxMTI0NTc5OTk4IVwiLFxuICAgIFwicmVmZXJlbmNlMlwiOiBcIjIyNTU1MzQ3QUJcIixcbiAgICBcInJlZmVyZW5jZTNcIjogXCIyMDE3MTEwNjE1MTU1MFwiLFxuICAgIFwidG90YWxBbW91bnRcIjogOTk5OTk5OTk5Ljk5LFxuICAgIFwiY3VycmVuY3lDb2RlXCI6IFwiVEhCXCIsXG4gICAgXCJwYXltZW50U3RhdHVzXCI6IFwic3VjY2Vzc1wiLFxuICAgIFwicGF5bWVudEFjY291bnRcIjogXCJ4eHgteC14MDA1NS14XCIsXG4gICAgXCJwYXltZW50RGF0ZVRpbWVcIjogXCIyMDE3LTAyLTE1VDE1OjIzOjExLjAwMSswNzowMFwiLFxuICAgIFwicGF5bWVudFJlZmVyZW5jZUlEXCI6IFwiMTIzNDU2XCIsXG4gICAgXCJzbGlwSW1hZ2VcIjogXCJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQVVBQUFBRkNBWUFBQUNOYnlibEFBQUFIRWxFUVZRSTEyUDRcL1wvOFwvdzM4R0lBWERJQktFMERIeGdsak5CQUFPOVRYTDBZNE9Id0FBQUFCSlJVNUVya0pnZ2c9PVwiLFxuICAgIFwicGF5ZWVJZFwiOiBcIjEyMzQ1Njc4OTAxMjNcIixcbiAgICBcInRyYW5zRGF0ZVwiOiBcIjIwMTctMTEtMTZcIixcbiAgICBcInRyYW5zVGltZVwiOiBcIjE3OjUwOjUwXCIsXG4gICAgXCJ0cmFuc1JlZlwiOiBcIjEwMDk5OTEyMzQ1Njc4OVwiLFxuICAgIFwiY2hhbm5lbFwiOiBcIkNcIixcbiAgICBcInRlcm1UeXBlXCI6IFwiODBcIixcbiAgICBcInRlcm1JZFwiOiBcIjAxMDEyNVwiLFxuICAgIFwiYW1vdW50XCI6IDk5OTk5OTk5OTk5OTk5OS45OSxcbiAgICBcImZyb21CYW5rXCI6IFwiMDAyXCIsXG4gICAgXCJmcm9tQnJhbmNoXCI6IFwiMDE0N1wiLFxuICAgIFwiZnJvbU5hbWVcIjogXCJBQkNEXCIsXG4gICAgXCJiYW5rUmVmXCI6IFwiQkJMXCIsXG4gICAgXCJhcHByb3ZhbENvZGVcIjogXCJFWEFNUExcIixcbiAgICBcInR4blR5cGVcIjogXCJDXCIsXG4gICAgXCJyZXRyeUZsYWdcIjogXCJZXCJcbn0iLCJleHAiOjE2ODU3MDIxMzEsImlhdCI6MTY4NTYxNTczMSwianRpIjoiNTQxMzNkODQtMDYyYi00NTUxLTk3ZTgtMzQ3ZTQ1YzMwOGU3In0.VEWEqYCsp7tetDWu1ZaPVW_13ewIoHJwqX7Q_hJWn_F9pUp-92VNbRnEdsPN0e41auIZJe2oithadqPKZvvZhYPWkjucYWXSyHeE32q-sBMlSo_Uf2sqb_bHFKGpZYKQTGmeaEjNs7aPUjApCm6EYxFVoyEGYOtU4t2l9qjC3eSt-3hYR2_FQJMoxvLUt1Nwu19it_8SES--cQ6PwcvoXWnQbBoE8j5wp5sGZmXP__-oWW7xAn6EqteXU9QvaTkE9Nzu2dJCfmpaLi2fBP82qHt6MqPfWZsZJ1gqw9tP8W7yxXimnRmpItZqB_53CdWmSvVUYpXqsBLGHrsweOMqRD-a03IX8aA1zVuFeQ3QsqtJKkp-pz7a9ZsfGemC2veEwxbLzm1QSe2iD1d4Qbjsan-Hdi78Uf1zhTQW1JOPygZPkNihxZ9TtjQvw9k0w0gHgcdhWSa7NUIbhoKGaGnawtqs9HjYLurJDVDvHF-681TBWVa4ipIrRISkZodCAUVUE8XUNQhxys02ObGpxa4O9Gc8JrCnMcSmCO5L2trmvpUVQkdoPLfbqyMBitHTIzt6oQWbnbE4Xp2pwkl0lmfCWq6OK-iZIoMtuaSpKi8lusYZTxZki2EA6OvUv_ibKbxI39VwEstqwOhA06rL60TEBPIKe_Birs44Iwk3ZQIwjjk",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "2017-03-15T15:23:11.001+07:00",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "d849f8-f6c1-11ec-b939-0242ac120002",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"AppToApp\",\n    \"data\": {\n        \"serviceCode\": \"BBLTEST1\",\n        \"billerId\": \"{{billerId-globalnoti-app}}\",\n        \"reference1\": \"{{reference1-globalnoti-app}}\",\n        \"reference2\": \"APP1001\",\n        \"totalAmount\": \"1999.80\",\n        \"currencyCode\": \"THB\",\n        \"paymentStatus\": \"SUCCESS\",\n        \"paymentAccount\": \"xxx-x-x0055-x\",\n        \"paymentDateTime\": \"{{payment-date-time}}\",\n        \"paymentReferenceID\": \"123456\",\n        \"slipImage\": \"iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00343 Send Global Notification failed - data is different from generating BBL signature",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"AppToApp\",\n    \"data\": {\n        \"serviceCode\": \"BBLTEST1\",\n        \"billerId\": \"{{billerId-globalnoti-app}}\",\n        \"reference1\": \"{{reference1-globalnoti-app}}\",\n        \"reference2\": \"REF0011001\",\n        \"totalAmount\": \"999.00\",\n        \"currencyCode\": \"THB\",\n        \"paymentStatus\": \"SUCCESS\",\n        \"paymentAccount\": \"xxx-x-x3055-x\",\n        \"paymentDateTime\": \"{{payment-date-time}}\",\n        \"paymentReferenceID\": \"123456\",\n        \"slipImage\": \"iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJib2R5Ijoie1xuICAgIFwicGF5bWVudFJlcXVlc3RJZFwiOiBcIjIzNEFCQjU4Q0MwMFwiLFxuICAgIFwic2VydmljZUNvZGVcIjogXCJCQkxURVNUXCIsXG4gICAgXCJwcm92aWRlcklkXCI6IFwiQkJMVEVTVFwiLFxuICAgIFwiYmlsbGVySWRcIjogXCIxMjM0NTY3ODkwMTIzNDVcIixcbiAgICBcInJlZmVyZW5jZTFcIjogXCIxMTI0NTc5OTk4IVwiLFxuICAgIFwicmVmZXJlbmNlMlwiOiBcIjIyNTU1MzQ3QUJcIixcbiAgICBcInJlZmVyZW5jZTNcIjogXCIyMDE3MTEwNjE1MTU1MFwiLFxuICAgIFwidG90YWxBbW91bnRcIjogOTk5OTk5OTk5Ljk5LFxuICAgIFwiY3VycmVuY3lDb2RlXCI6IFwiVEhCXCIsXG4gICAgXCJwYXltZW50U3RhdHVzXCI6IFwic3VjY2Vzc1wiLFxuICAgIFwicGF5bWVudEFjY291bnRcIjogXCJ4eHgteC14MDA1NS14XCIsXG4gICAgXCJwYXltZW50RGF0ZVRpbWVcIjogXCIyMDE3LTAyLTE1VDE1OjIzOjExLjAwMSswNzowMFwiLFxuICAgIFwicGF5bWVudFJlZmVyZW5jZUlEXCI6IFwiMTIzNDU2XCIsXG4gICAgXCJzbGlwSW1hZ2VcIjogXCJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQVVBQUFBRkNBWUFBQUNOYnlibEFBQUFIRWxFUVZRSTEyUDRcL1wvOFwvdzM4R0lBWERJQktFMERIeGdsak5CQUFPOVRYTDBZNE9Id0FBQUFCSlJVNUVya0pnZ2c9PVwiLFxuICAgIFwicGF5ZWVJZFwiOiBcIjEyMzQ1Njc4OTAxMjNcIixcbiAgICBcInRyYW5zRGF0ZVwiOiBcIjIwMTctMTEtMTZcIixcbiAgICBcInRyYW5zVGltZVwiOiBcIjE3OjUwOjUwXCIsXG4gICAgXCJ0cmFuc1JlZlwiOiBcIjEwMDk5OTEyMzQ1Njc4OVwiLFxuICAgIFwiY2hhbm5lbFwiOiBcIkNcIixcbiAgICBcInRlcm1UeXBlXCI6IFwiODBcIixcbiAgICBcInRlcm1JZFwiOiBcIjAxMDEyNVwiLFxuICAgIFwiYW1vdW50XCI6IDk5OTk5OTk5OTk5OTk5OS45OSxcbiAgICBcImZyb21CYW5rXCI6IFwiMDAyXCIsXG4gICAgXCJmcm9tQnJhbmNoXCI6IFwiMDE0N1wiLFxuICAgIFwiZnJvbU5hbWVcIjogXCJBQkNEXCIsXG4gICAgXCJiYW5rUmVmXCI6IFwiQkJMXCIsXG4gICAgXCJhcHByb3ZhbENvZGVcIjogXCJFWEFNUExcIixcbiAgICBcInR4blR5cGVcIjogXCJDXCIsXG4gICAgXCJyZXRyeUZsYWdcIjogXCJZXCJcbn0iLCJleHAiOjE2ODU3MDIxMzEsImlhdCI6MTY4NTYxNTczMSwianRpIjoiNTQxMzNkODQtMDYyYi00NTUxLTk3ZTgtMzQ3ZTQ1YzMwOGU3In0.VEWEqYCsp7tetDWu1ZaPVW_13ewIoHJwqX7Q_hJWn_F9pUp-92VNbRnEdsPN0e41auIZJe2oithadqPKZvvZhYPWkjucYWXSyHeE32q-sBMlSo_Uf2sqb_bHFKGpZYKQTGmeaEjNs7aPUjApCm6EYxFVoyEGYOtU4t2l9qjC3eSt-3hYR2_FQJMoxvLUt1Nwu19it_8SES--cQ6PwcvoXWnQbBoE8j5wp5sGZmXP__-oWW7xAn6EqteXU9QvaTkE9Nzu2dJCfmpaLi2fBP82qHt6MqPfWZsZJ1gqw9tP8W7yxXimnRmpItZqB_53CdWmSvVUYpXqsBLGHrsweOMqRD-a03IX8aA1zVuFeQ3QsqtJKkp-pz7a9ZsfGemC2veEwxbLzm1QSe2iD1d4Qbjsan-Hdi78Uf1zhTQW1JOPygZPkNihxZ9TtjQvw9k0w0gHgcdhWSa7NUIbhoKGaGnawtqs9HjYLurJDVDvHF-681TBWVa4ipIrRISkZodCAUVUE8XUNQhxys02ObGpxa4O9Gc8JrCnMcSmCO5L2trmvpUVQkdoPLfbqyMBitHTIzt6oQWbnbE4Xp2pwkl0lmfCWq6OK-iZIoMtuaSpKi8lusYZTxZki2EA6OvUv_ibKbxI39VwEstqwOhA06rL60TEBPIKe_Birs44Iwk3ZQIwjjk",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "2017-03-15T15:23:11.001+07:00",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "d849f8-f6c1-11ec-b939-0242ac120002",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"App2App\",\n    \"data\": {\n        \"serviceCode\": \"BBLTEST1\",\n        \"billerId\": \"{{billerId-globalnoti-app}}\",\n        \"reference1\": \"{{reference1-globalnoti-app}}\",\n        \"reference2\": \"APP1001\",\n        \"totalAmount\": \"1999.80\",\n        \"currencyCode\": \"THB\",\n        \"paymentStatus\": \"SUCCESS\",\n        \"paymentAccount\": \"xxx-x-x0055-x\",\n        \"paymentDateTime\": \"{{payment-date-time}}\",\n        \"paymentReferenceID\": \"123456\",\n        \"slipImage\": \"iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00341_1 Send Global Notification failed - invalid type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: type\");",
											"    });",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"App2App\",\n    \"data\": {\n        \"serviceCode\": \"BBLTEST1\",\n        \"billerId\": \"{{billerId-globalnoti-app}}\",\n        \"reference1\": \"{{reference1-globalnoti-app}}\",\n        \"reference2\": \"APP1001\",\n        \"totalAmount\": \"1999.80\",\n        \"currencyCode\": \"THB\",\n        \"paymentStatus\": \"SUCCESS\",\n        \"paymentAccount\": \"xxx-x-x0055-x\",\n        \"paymentDateTime\": \"{{payment-date-time}}\",\n        \"paymentReferenceID\": \"123456\",\n        \"slipImage\": \"iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJib2R5Ijoie1xuICAgIFwicGF5bWVudFJlcXVlc3RJZFwiOiBcIjIzNEFCQjU4Q0MwMFwiLFxuICAgIFwic2VydmljZUNvZGVcIjogXCJCQkxURVNUXCIsXG4gICAgXCJwcm92aWRlcklkXCI6IFwiQkJMVEVTVFwiLFxuICAgIFwiYmlsbGVySWRcIjogXCIxMjM0NTY3ODkwMTIzNDVcIixcbiAgICBcInJlZmVyZW5jZTFcIjogXCIxMTI0NTc5OTk4IVwiLFxuICAgIFwicmVmZXJlbmNlMlwiOiBcIjIyNTU1MzQ3QUJcIixcbiAgICBcInJlZmVyZW5jZTNcIjogXCIyMDE3MTEwNjE1MTU1MFwiLFxuICAgIFwidG90YWxBbW91bnRcIjogOTk5OTk5OTk5Ljk5LFxuICAgIFwiY3VycmVuY3lDb2RlXCI6IFwiVEhCXCIsXG4gICAgXCJwYXltZW50U3RhdHVzXCI6IFwic3VjY2Vzc1wiLFxuICAgIFwicGF5bWVudEFjY291bnRcIjogXCJ4eHgteC14MDA1NS14XCIsXG4gICAgXCJwYXltZW50RGF0ZVRpbWVcIjogXCIyMDE3LTAyLTE1VDE1OjIzOjExLjAwMSswNzowMFwiLFxuICAgIFwicGF5bWVudFJlZmVyZW5jZUlEXCI6IFwiMTIzNDU2XCIsXG4gICAgXCJzbGlwSW1hZ2VcIjogXCJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQVVBQUFBRkNBWUFBQUNOYnlibEFBQUFIRWxFUVZRSTEyUDRcL1wvOFwvdzM4R0lBWERJQktFMERIeGdsak5CQUFPOVRYTDBZNE9Id0FBQUFCSlJVNUVya0pnZ2c9PVwiLFxuICAgIFwicGF5ZWVJZFwiOiBcIjEyMzQ1Njc4OTAxMjNcIixcbiAgICBcInRyYW5zRGF0ZVwiOiBcIjIwMTctMTEtMTZcIixcbiAgICBcInRyYW5zVGltZVwiOiBcIjE3OjUwOjUwXCIsXG4gICAgXCJ0cmFuc1JlZlwiOiBcIjEwMDk5OTEyMzQ1Njc4OVwiLFxuICAgIFwiY2hhbm5lbFwiOiBcIkNcIixcbiAgICBcInRlcm1UeXBlXCI6IFwiODBcIixcbiAgICBcInRlcm1JZFwiOiBcIjAxMDEyNVwiLFxuICAgIFwiYW1vdW50XCI6IDk5OTk5OTk5OTk5OTk5OS45OSxcbiAgICBcImZyb21CYW5rXCI6IFwiMDAyXCIsXG4gICAgXCJmcm9tQnJhbmNoXCI6IFwiMDE0N1wiLFxuICAgIFwiZnJvbU5hbWVcIjogXCJBQkNEXCIsXG4gICAgXCJiYW5rUmVmXCI6IFwiQkJMXCIsXG4gICAgXCJhcHByb3ZhbENvZGVcIjogXCJFWEFNUExcIixcbiAgICBcInR4blR5cGVcIjogXCJDXCIsXG4gICAgXCJyZXRyeUZsYWdcIjogXCJZXCJcbn0iLCJleHAiOjE2ODU3MDIxMzEsImlhdCI6MTY4NTYxNTczMSwianRpIjoiNTQxMzNkODQtMDYyYi00NTUxLTk3ZTgtMzQ3ZTQ1YzMwOGU3In0.VEWEqYCsp7tetDWu1ZaPVW_13ewIoHJwqX7Q_hJWn_F9pUp-92VNbRnEdsPN0e41auIZJe2oithadqPKZvvZhYPWkjucYWXSyHeE32q-sBMlSo_Uf2sqb_bHFKGpZYKQTGmeaEjNs7aPUjApCm6EYxFVoyEGYOtU4t2l9qjC3eSt-3hYR2_FQJMoxvLUt1Nwu19it_8SES--cQ6PwcvoXWnQbBoE8j5wp5sGZmXP__-oWW7xAn6EqteXU9QvaTkE9Nzu2dJCfmpaLi2fBP82qHt6MqPfWZsZJ1gqw9tP8W7yxXimnRmpItZqB_53CdWmSvVUYpXqsBLGHrsweOMqRD-a03IX8aA1zVuFeQ3QsqtJKkp-pz7a9ZsfGemC2veEwxbLzm1QSe2iD1d4Qbjsan-Hdi78Uf1zhTQW1JOPygZPkNihxZ9TtjQvw9k0w0gHgcdhWSa7NUIbhoKGaGnawtqs9HjYLurJDVDvHF-681TBWVa4ipIrRISkZodCAUVUE8XUNQhxys02ObGpxa4O9Gc8JrCnMcSmCO5L2trmvpUVQkdoPLfbqyMBitHTIzt6oQWbnbE4Xp2pwkl0lmfCWq6OK-iZIoMtuaSpKi8lusYZTxZki2EA6OvUv_ibKbxI39VwEstqwOhA06rL60TEBPIKe_Birs44Iwk3ZQIwjjk",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "2017-03-15T15:23:11.001+07:00",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "d849f8-f6c1-11ec-b939-0242ac120002",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"AppToApp\",\n    \"data\": {\n        \"serviceCode\": \"\",\n        \"billerId\": \"{{billerId-globalnoti-app}}\",\n        \"reference1\": \"{{reference1-globalnoti-app}}\",\n        \"reference2\": \"APP1001\",\n        \"totalAmount\": \"1999.80\",\n        \"currencyCode\": \"THB\",\n        \"paymentStatus\": \"SUCCESS\",\n        \"paymentAccount\": \"xxx-x-x0055-x\",\n        \"paymentDateTime\": \"{{payment-date-time}}\",\n        \"paymentReferenceID\": \"123456\",\n        \"slipImage\": \"iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00341_2 Send Global Notification failed - empty serviceCode",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.serviceCode\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"AppToApp\",\n    \"data\": {\n        \"serviceCode\": \"\",\n        \"billerId\": \"{{billerId-globalnoti-app}}\",\n        \"reference1\": \"{{reference1-globalnoti-app}}\",\n        \"reference2\": \"APP1001\",\n        \"totalAmount\": \"1999.80\",\n        \"currencyCode\": \"THB\",\n        \"paymentStatus\": \"SUCCESS\",\n        \"paymentAccount\": \"xxx-x-x0055-x\",\n        \"paymentDateTime\": \"{{payment-date-time}}\",\n        \"paymentReferenceID\": \"123456\",\n        \"slipImage\": \"iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJib2R5Ijoie1xuICAgIFwicGF5bWVudFJlcXVlc3RJZFwiOiBcIjIzNEFCQjU4Q0MwMFwiLFxuICAgIFwic2VydmljZUNvZGVcIjogXCJCQkxURVNUXCIsXG4gICAgXCJwcm92aWRlcklkXCI6IFwiQkJMVEVTVFwiLFxuICAgIFwiYmlsbGVySWRcIjogXCIxMjM0NTY3ODkwMTIzNDVcIixcbiAgICBcInJlZmVyZW5jZTFcIjogXCIxMTI0NTc5OTk4IVwiLFxuICAgIFwicmVmZXJlbmNlMlwiOiBcIjIyNTU1MzQ3QUJcIixcbiAgICBcInJlZmVyZW5jZTNcIjogXCIyMDE3MTEwNjE1MTU1MFwiLFxuICAgIFwidG90YWxBbW91bnRcIjogOTk5OTk5OTk5Ljk5LFxuICAgIFwiY3VycmVuY3lDb2RlXCI6IFwiVEhCXCIsXG4gICAgXCJwYXltZW50U3RhdHVzXCI6IFwic3VjY2Vzc1wiLFxuICAgIFwicGF5bWVudEFjY291bnRcIjogXCJ4eHgteC14MDA1NS14XCIsXG4gICAgXCJwYXltZW50RGF0ZVRpbWVcIjogXCIyMDE3LTAyLTE1VDE1OjIzOjExLjAwMSswNzowMFwiLFxuICAgIFwicGF5bWVudFJlZmVyZW5jZUlEXCI6IFwiMTIzNDU2XCIsXG4gICAgXCJzbGlwSW1hZ2VcIjogXCJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQVVBQUFBRkNBWUFBQUNOYnlibEFBQUFIRWxFUVZRSTEyUDRcL1wvOFwvdzM4R0lBWERJQktFMERIeGdsak5CQUFPOVRYTDBZNE9Id0FBQUFCSlJVNUVya0pnZ2c9PVwiLFxuICAgIFwicGF5ZWVJZFwiOiBcIjEyMzQ1Njc4OTAxMjNcIixcbiAgICBcInRyYW5zRGF0ZVwiOiBcIjIwMTctMTEtMTZcIixcbiAgICBcInRyYW5zVGltZVwiOiBcIjE3OjUwOjUwXCIsXG4gICAgXCJ0cmFuc1JlZlwiOiBcIjEwMDk5OTEyMzQ1Njc4OVwiLFxuICAgIFwiY2hhbm5lbFwiOiBcIkNcIixcbiAgICBcInRlcm1UeXBlXCI6IFwiODBcIixcbiAgICBcInRlcm1JZFwiOiBcIjAxMDEyNVwiLFxuICAgIFwiYW1vdW50XCI6IDk5OTk5OTk5OTk5OTk5OS45OSxcbiAgICBcImZyb21CYW5rXCI6IFwiMDAyXCIsXG4gICAgXCJmcm9tQnJhbmNoXCI6IFwiMDE0N1wiLFxuICAgIFwiZnJvbU5hbWVcIjogXCJBQkNEXCIsXG4gICAgXCJiYW5rUmVmXCI6IFwiQkJMXCIsXG4gICAgXCJhcHByb3ZhbENvZGVcIjogXCJFWEFNUExcIixcbiAgICBcInR4blR5cGVcIjogXCJDXCIsXG4gICAgXCJyZXRyeUZsYWdcIjogXCJZXCJcbn0iLCJleHAiOjE2ODU3MDIxMzEsImlhdCI6MTY4NTYxNTczMSwianRpIjoiNTQxMzNkODQtMDYyYi00NTUxLTk3ZTgtMzQ3ZTQ1YzMwOGU3In0.VEWEqYCsp7tetDWu1ZaPVW_13ewIoHJwqX7Q_hJWn_F9pUp-92VNbRnEdsPN0e41auIZJe2oithadqPKZvvZhYPWkjucYWXSyHeE32q-sBMlSo_Uf2sqb_bHFKGpZYKQTGmeaEjNs7aPUjApCm6EYxFVoyEGYOtU4t2l9qjC3eSt-3hYR2_FQJMoxvLUt1Nwu19it_8SES--cQ6PwcvoXWnQbBoE8j5wp5sGZmXP__-oWW7xAn6EqteXU9QvaTkE9Nzu2dJCfmpaLi2fBP82qHt6MqPfWZsZJ1gqw9tP8W7yxXimnRmpItZqB_53CdWmSvVUYpXqsBLGHrsweOMqRD-a03IX8aA1zVuFeQ3QsqtJKkp-pz7a9ZsfGemC2veEwxbLzm1QSe2iD1d4Qbjsan-Hdi78Uf1zhTQW1JOPygZPkNihxZ9TtjQvw9k0w0gHgcdhWSa7NUIbhoKGaGnawtqs9HjYLurJDVDvHF-681TBWVa4ipIrRISkZodCAUVUE8XUNQhxys02ObGpxa4O9Gc8JrCnMcSmCO5L2trmvpUVQkdoPLfbqyMBitHTIzt6oQWbnbE4Xp2pwkl0lmfCWq6OK-iZIoMtuaSpKi8lusYZTxZki2EA6OvUv_ibKbxI39VwEstqwOhA06rL60TEBPIKe_Birs44Iwk3ZQIwjjk",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "2017-03-15T15:23:11.001+07:00",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "d849f8-f6c1-11ec-b939-0242ac120002",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"AppToApp\",\n    \"data\": {\n        \"serviceCode\": \"BBLTEST1\",\n        \"billerId\": \"\",\n        \"reference1\": \"{{reference1-globalnoti-app}}\",\n        \"reference2\": \"APP1001\",\n        \"totalAmount\": \"1999.80\",\n        \"currencyCode\": \"THB\",\n        \"paymentStatus\": \"SUCCESS\",\n        \"paymentAccount\": \"xxx-x-x0055-x\",\n        \"paymentDateTime\": \"{{payment-date-time}}\",\n        \"paymentReferenceID\": \"123456\",\n        \"slipImage\": \"iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00341_3 Send Global Notification failed - empty billerId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"AppToApp\",\n    \"data\": {\n        \"serviceCode\": \"BBLTEST1\",\n        \"billerId\": \"\",\n        \"reference1\": \"{{reference1-globalnoti-app}}\",\n        \"reference2\": \"APP1001\",\n        \"totalAmount\": \"1999.80\",\n        \"currencyCode\": \"THB\",\n        \"paymentStatus\": \"SUCCESS\",\n        \"paymentAccount\": \"xxx-x-x0055-x\",\n        \"paymentDateTime\": \"{{payment-date-time}}\",\n        \"paymentReferenceID\": \"123456\",\n        \"slipImage\": \"iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJib2R5Ijoie1xuICAgIFwicGF5bWVudFJlcXVlc3RJZFwiOiBcIjIzNEFCQjU4Q0MwMFwiLFxuICAgIFwic2VydmljZUNvZGVcIjogXCJCQkxURVNUXCIsXG4gICAgXCJwcm92aWRlcklkXCI6IFwiQkJMVEVTVFwiLFxuICAgIFwiYmlsbGVySWRcIjogXCIxMjM0NTY3ODkwMTIzNDVcIixcbiAgICBcInJlZmVyZW5jZTFcIjogXCIxMTI0NTc5OTk4IVwiLFxuICAgIFwicmVmZXJlbmNlMlwiOiBcIjIyNTU1MzQ3QUJcIixcbiAgICBcInJlZmVyZW5jZTNcIjogXCIyMDE3MTEwNjE1MTU1MFwiLFxuICAgIFwidG90YWxBbW91bnRcIjogOTk5OTk5OTk5Ljk5LFxuICAgIFwiY3VycmVuY3lDb2RlXCI6IFwiVEhCXCIsXG4gICAgXCJwYXltZW50U3RhdHVzXCI6IFwic3VjY2Vzc1wiLFxuICAgIFwicGF5bWVudEFjY291bnRcIjogXCJ4eHgteC14MDA1NS14XCIsXG4gICAgXCJwYXltZW50RGF0ZVRpbWVcIjogXCIyMDE3LTAyLTE1VDE1OjIzOjExLjAwMSswNzowMFwiLFxuICAgIFwicGF5bWVudFJlZmVyZW5jZUlEXCI6IFwiMTIzNDU2XCIsXG4gICAgXCJzbGlwSW1hZ2VcIjogXCJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQVVBQUFBRkNBWUFBQUNOYnlibEFBQUFIRWxFUVZRSTEyUDRcL1wvOFwvdzM4R0lBWERJQktFMERIeGdsak5CQUFPOVRYTDBZNE9Id0FBQUFCSlJVNUVya0pnZ2c9PVwiLFxuICAgIFwicGF5ZWVJZFwiOiBcIjEyMzQ1Njc4OTAxMjNcIixcbiAgICBcInRyYW5zRGF0ZVwiOiBcIjIwMTctMTEtMTZcIixcbiAgICBcInRyYW5zVGltZVwiOiBcIjE3OjUwOjUwXCIsXG4gICAgXCJ0cmFuc1JlZlwiOiBcIjEwMDk5OTEyMzQ1Njc4OVwiLFxuICAgIFwiY2hhbm5lbFwiOiBcIkNcIixcbiAgICBcInRlcm1UeXBlXCI6IFwiODBcIixcbiAgICBcInRlcm1JZFwiOiBcIjAxMDEyNVwiLFxuICAgIFwiYW1vdW50XCI6IDk5OTk5OTk5OTk5OTk5OS45OSxcbiAgICBcImZyb21CYW5rXCI6IFwiMDAyXCIsXG4gICAgXCJmcm9tQnJhbmNoXCI6IFwiMDE0N1wiLFxuICAgIFwiZnJvbU5hbWVcIjogXCJBQkNEXCIsXG4gICAgXCJiYW5rUmVmXCI6IFwiQkJMXCIsXG4gICAgXCJhcHByb3ZhbENvZGVcIjogXCJFWEFNUExcIixcbiAgICBcInR4blR5cGVcIjogXCJDXCIsXG4gICAgXCJyZXRyeUZsYWdcIjogXCJZXCJcbn0iLCJleHAiOjE2ODU3MDIxMzEsImlhdCI6MTY4NTYxNTczMSwianRpIjoiNTQxMzNkODQtMDYyYi00NTUxLTk3ZTgtMzQ3ZTQ1YzMwOGU3In0.VEWEqYCsp7tetDWu1ZaPVW_13ewIoHJwqX7Q_hJWn_F9pUp-92VNbRnEdsPN0e41auIZJe2oithadqPKZvvZhYPWkjucYWXSyHeE32q-sBMlSo_Uf2sqb_bHFKGpZYKQTGmeaEjNs7aPUjApCm6EYxFVoyEGYOtU4t2l9qjC3eSt-3hYR2_FQJMoxvLUt1Nwu19it_8SES--cQ6PwcvoXWnQbBoE8j5wp5sGZmXP__-oWW7xAn6EqteXU9QvaTkE9Nzu2dJCfmpaLi2fBP82qHt6MqPfWZsZJ1gqw9tP8W7yxXimnRmpItZqB_53CdWmSvVUYpXqsBLGHrsweOMqRD-a03IX8aA1zVuFeQ3QsqtJKkp-pz7a9ZsfGemC2veEwxbLzm1QSe2iD1d4Qbjsan-Hdi78Uf1zhTQW1JOPygZPkNihxZ9TtjQvw9k0w0gHgcdhWSa7NUIbhoKGaGnawtqs9HjYLurJDVDvHF-681TBWVa4ipIrRISkZodCAUVUE8XUNQhxys02ObGpxa4O9Gc8JrCnMcSmCO5L2trmvpUVQkdoPLfbqyMBitHTIzt6oQWbnbE4Xp2pwkl0lmfCWq6OK-iZIoMtuaSpKi8lusYZTxZki2EA6OvUv_ibKbxI39VwEstqwOhA06rL60TEBPIKe_Birs44Iwk3ZQIwjjk",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "2017-03-15T15:23:11.001+07:00",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "d849f8-f6c1-11ec-b939-0242ac120002",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"AppToApp\",\n    \"data\": {\n        \"serviceCode\": \"BBLTEST1\",\n        \"billerId\": \"{{billerId-globalnoti-app}}\",\n        \"reference1\": \"\",\n        \"reference2\": \"APP1001\",\n        \"totalAmount\": \"1999.80\",\n        \"currencyCode\": \"THB\",\n        \"paymentStatus\": \"SUCCESS\",\n        \"paymentAccount\": \"xxx-x-x0055-x\",\n        \"paymentDateTime\": \"{{payment-date-time}}\",\n        \"paymentReferenceID\": \"123456\",\n        \"slipImage\": \"iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00341_4 Send Global Notification failed - empty reference1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.reference1\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"AppToApp\",\n    \"data\": {\n        \"serviceCode\": \"BBLTEST1\",\n        \"billerId\": \"{{billerId-globalnoti-app}}\",\n        \"reference1\": \"\",\n        \"reference2\": \"APP1001\",\n        \"totalAmount\": \"1999.80\",\n        \"currencyCode\": \"THB\",\n        \"paymentStatus\": \"SUCCESS\",\n        \"paymentAccount\": \"xxx-x-x0055-x\",\n        \"paymentDateTime\": \"{{payment-date-time}}\",\n        \"paymentReferenceID\": \"123456\",\n        \"slipImage\": \"iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJib2R5Ijoie1xuICAgIFwicGF5bWVudFJlcXVlc3RJZFwiOiBcIjIzNEFCQjU4Q0MwMFwiLFxuICAgIFwic2VydmljZUNvZGVcIjogXCJCQkxURVNUXCIsXG4gICAgXCJwcm92aWRlcklkXCI6IFwiQkJMVEVTVFwiLFxuICAgIFwiYmlsbGVySWRcIjogXCIxMjM0NTY3ODkwMTIzNDVcIixcbiAgICBcInJlZmVyZW5jZTFcIjogXCIxMTI0NTc5OTk4IVwiLFxuICAgIFwicmVmZXJlbmNlMlwiOiBcIjIyNTU1MzQ3QUJcIixcbiAgICBcInJlZmVyZW5jZTNcIjogXCIyMDE3MTEwNjE1MTU1MFwiLFxuICAgIFwidG90YWxBbW91bnRcIjogOTk5OTk5OTk5Ljk5LFxuICAgIFwiY3VycmVuY3lDb2RlXCI6IFwiVEhCXCIsXG4gICAgXCJwYXltZW50U3RhdHVzXCI6IFwic3VjY2Vzc1wiLFxuICAgIFwicGF5bWVudEFjY291bnRcIjogXCJ4eHgteC14MDA1NS14XCIsXG4gICAgXCJwYXltZW50RGF0ZVRpbWVcIjogXCIyMDE3LTAyLTE1VDE1OjIzOjExLjAwMSswNzowMFwiLFxuICAgIFwicGF5bWVudFJlZmVyZW5jZUlEXCI6IFwiMTIzNDU2XCIsXG4gICAgXCJzbGlwSW1hZ2VcIjogXCJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQVVBQUFBRkNBWUFBQUNOYnlibEFBQUFIRWxFUVZRSTEyUDRcL1wvOFwvdzM4R0lBWERJQktFMERIeGdsak5CQUFPOVRYTDBZNE9Id0FBQUFCSlJVNUVya0pnZ2c9PVwiLFxuICAgIFwicGF5ZWVJZFwiOiBcIjEyMzQ1Njc4OTAxMjNcIixcbiAgICBcInRyYW5zRGF0ZVwiOiBcIjIwMTctMTEtMTZcIixcbiAgICBcInRyYW5zVGltZVwiOiBcIjE3OjUwOjUwXCIsXG4gICAgXCJ0cmFuc1JlZlwiOiBcIjEwMDk5OTEyMzQ1Njc4OVwiLFxuICAgIFwiY2hhbm5lbFwiOiBcIkNcIixcbiAgICBcInRlcm1UeXBlXCI6IFwiODBcIixcbiAgICBcInRlcm1JZFwiOiBcIjAxMDEyNVwiLFxuICAgIFwiYW1vdW50XCI6IDk5OTk5OTk5OTk5OTk5OS45OSxcbiAgICBcImZyb21CYW5rXCI6IFwiMDAyXCIsXG4gICAgXCJmcm9tQnJhbmNoXCI6IFwiMDE0N1wiLFxuICAgIFwiZnJvbU5hbWVcIjogXCJBQkNEXCIsXG4gICAgXCJiYW5rUmVmXCI6IFwiQkJMXCIsXG4gICAgXCJhcHByb3ZhbENvZGVcIjogXCJFWEFNUExcIixcbiAgICBcInR4blR5cGVcIjogXCJDXCIsXG4gICAgXCJyZXRyeUZsYWdcIjogXCJZXCJcbn0iLCJleHAiOjE2ODU3MDIxMzEsImlhdCI6MTY4NTYxNTczMSwianRpIjoiNTQxMzNkODQtMDYyYi00NTUxLTk3ZTgtMzQ3ZTQ1YzMwOGU3In0.VEWEqYCsp7tetDWu1ZaPVW_13ewIoHJwqX7Q_hJWn_F9pUp-92VNbRnEdsPN0e41auIZJe2oithadqPKZvvZhYPWkjucYWXSyHeE32q-sBMlSo_Uf2sqb_bHFKGpZYKQTGmeaEjNs7aPUjApCm6EYxFVoyEGYOtU4t2l9qjC3eSt-3hYR2_FQJMoxvLUt1Nwu19it_8SES--cQ6PwcvoXWnQbBoE8j5wp5sGZmXP__-oWW7xAn6EqteXU9QvaTkE9Nzu2dJCfmpaLi2fBP82qHt6MqPfWZsZJ1gqw9tP8W7yxXimnRmpItZqB_53CdWmSvVUYpXqsBLGHrsweOMqRD-a03IX8aA1zVuFeQ3QsqtJKkp-pz7a9ZsfGemC2veEwxbLzm1QSe2iD1d4Qbjsan-Hdi78Uf1zhTQW1JOPygZPkNihxZ9TtjQvw9k0w0gHgcdhWSa7NUIbhoKGaGnawtqs9HjYLurJDVDvHF-681TBWVa4ipIrRISkZodCAUVUE8XUNQhxys02ObGpxa4O9Gc8JrCnMcSmCO5L2trmvpUVQkdoPLfbqyMBitHTIzt6oQWbnbE4Xp2pwkl0lmfCWq6OK-iZIoMtuaSpKi8lusYZTxZki2EA6OvUv_ibKbxI39VwEstqwOhA06rL60TEBPIKe_Birs44Iwk3ZQIwjjk",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "2017-03-15T15:23:11.001+07:00",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "d849f8-f6c1-11ec-b939-0242ac120002",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"AppToApp\",\n    \"data\": {\n        \"serviceCode\": \"BBLTEST1\",\n        \"billerId\": \"{{billerId-globalnoti-app}}\",\n        \"reference1\": \"{{reference1-globalnoti-app}}\",\n        \"reference2\": \"20231105109980123459909012349019\",\n        \"totalAmount\": \"1999.80\",\n        \"currencyCode\": \"THB\",\n        \"paymentStatus\": \"SUCCESS\",\n        \"paymentAccount\": \"xxx-x-x0055-x\",\n        \"paymentDateTime\": \"{{payment-date-time}}\",\n        \"paymentReferenceID\": \"123456\",\n        \"slipImage\": \"iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00341_5 Send Global Notification failed - invalid reference2 longer than 30",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.reference2\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"AppToApp\",\n    \"data\": {\n        \"serviceCode\": \"BBLTEST1\",\n        \"billerId\": \"{{billerId-globalnoti-app}}\",\n        \"reference1\": \"{{reference1-globalnoti-app}}\",\n        \"reference2\": \"20231105109980123459909012349019\",\n        \"totalAmount\": \"1999.80\",\n        \"currencyCode\": \"THB\",\n        \"paymentStatus\": \"SUCCESS\",\n        \"paymentAccount\": \"xxx-x-x0055-x\",\n        \"paymentDateTime\": \"{{payment-date-time}}\",\n        \"paymentReferenceID\": \"123456\",\n        \"slipImage\": \"iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJib2R5Ijoie1xuICAgIFwicGF5bWVudFJlcXVlc3RJZFwiOiBcIjIzNEFCQjU4Q0MwMFwiLFxuICAgIFwic2VydmljZUNvZGVcIjogXCJCQkxURVNUXCIsXG4gICAgXCJwcm92aWRlcklkXCI6IFwiQkJMVEVTVFwiLFxuICAgIFwiYmlsbGVySWRcIjogXCIxMjM0NTY3ODkwMTIzNDVcIixcbiAgICBcInJlZmVyZW5jZTFcIjogXCIxMTI0NTc5OTk4IVwiLFxuICAgIFwicmVmZXJlbmNlMlwiOiBcIjIyNTU1MzQ3QUJcIixcbiAgICBcInJlZmVyZW5jZTNcIjogXCIyMDE3MTEwNjE1MTU1MFwiLFxuICAgIFwidG90YWxBbW91bnRcIjogOTk5OTk5OTk5Ljk5LFxuICAgIFwiY3VycmVuY3lDb2RlXCI6IFwiVEhCXCIsXG4gICAgXCJwYXltZW50U3RhdHVzXCI6IFwic3VjY2Vzc1wiLFxuICAgIFwicGF5bWVudEFjY291bnRcIjogXCJ4eHgteC14MDA1NS14XCIsXG4gICAgXCJwYXltZW50RGF0ZVRpbWVcIjogXCIyMDE3LTAyLTE1VDE1OjIzOjExLjAwMSswNzowMFwiLFxuICAgIFwicGF5bWVudFJlZmVyZW5jZUlEXCI6IFwiMTIzNDU2XCIsXG4gICAgXCJzbGlwSW1hZ2VcIjogXCJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQVVBQUFBRkNBWUFBQUNOYnlibEFBQUFIRWxFUVZRSTEyUDRcL1wvOFwvdzM4R0lBWERJQktFMERIeGdsak5CQUFPOVRYTDBZNE9Id0FBQUFCSlJVNUVya0pnZ2c9PVwiLFxuICAgIFwicGF5ZWVJZFwiOiBcIjEyMzQ1Njc4OTAxMjNcIixcbiAgICBcInRyYW5zRGF0ZVwiOiBcIjIwMTctMTEtMTZcIixcbiAgICBcInRyYW5zVGltZVwiOiBcIjE3OjUwOjUwXCIsXG4gICAgXCJ0cmFuc1JlZlwiOiBcIjEwMDk5OTEyMzQ1Njc4OVwiLFxuICAgIFwiY2hhbm5lbFwiOiBcIkNcIixcbiAgICBcInRlcm1UeXBlXCI6IFwiODBcIixcbiAgICBcInRlcm1JZFwiOiBcIjAxMDEyNVwiLFxuICAgIFwiYW1vdW50XCI6IDk5OTk5OTk5OTk5OTk5OS45OSxcbiAgICBcImZyb21CYW5rXCI6IFwiMDAyXCIsXG4gICAgXCJmcm9tQnJhbmNoXCI6IFwiMDE0N1wiLFxuICAgIFwiZnJvbU5hbWVcIjogXCJBQkNEXCIsXG4gICAgXCJiYW5rUmVmXCI6IFwiQkJMXCIsXG4gICAgXCJhcHByb3ZhbENvZGVcIjogXCJFWEFNUExcIixcbiAgICBcInR4blR5cGVcIjogXCJDXCIsXG4gICAgXCJyZXRyeUZsYWdcIjogXCJZXCJcbn0iLCJleHAiOjE2ODU3MDIxMzEsImlhdCI6MTY4NTYxNTczMSwianRpIjoiNTQxMzNkODQtMDYyYi00NTUxLTk3ZTgtMzQ3ZTQ1YzMwOGU3In0.VEWEqYCsp7tetDWu1ZaPVW_13ewIoHJwqX7Q_hJWn_F9pUp-92VNbRnEdsPN0e41auIZJe2oithadqPKZvvZhYPWkjucYWXSyHeE32q-sBMlSo_Uf2sqb_bHFKGpZYKQTGmeaEjNs7aPUjApCm6EYxFVoyEGYOtU4t2l9qjC3eSt-3hYR2_FQJMoxvLUt1Nwu19it_8SES--cQ6PwcvoXWnQbBoE8j5wp5sGZmXP__-oWW7xAn6EqteXU9QvaTkE9Nzu2dJCfmpaLi2fBP82qHt6MqPfWZsZJ1gqw9tP8W7yxXimnRmpItZqB_53CdWmSvVUYpXqsBLGHrsweOMqRD-a03IX8aA1zVuFeQ3QsqtJKkp-pz7a9ZsfGemC2veEwxbLzm1QSe2iD1d4Qbjsan-Hdi78Uf1zhTQW1JOPygZPkNihxZ9TtjQvw9k0w0gHgcdhWSa7NUIbhoKGaGnawtqs9HjYLurJDVDvHF-681TBWVa4ipIrRISkZodCAUVUE8XUNQhxys02ObGpxa4O9Gc8JrCnMcSmCO5L2trmvpUVQkdoPLfbqyMBitHTIzt6oQWbnbE4Xp2pwkl0lmfCWq6OK-iZIoMtuaSpKi8lusYZTxZki2EA6OvUv_ibKbxI39VwEstqwOhA06rL60TEBPIKe_Birs44Iwk3ZQIwjjk",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "2017-03-15T15:23:11.001+07:00",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "d849f8-f6c1-11ec-b939-0242ac120002",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"AppToApp\",\n    \"data\": {\n        \"serviceCode\": \"BBLTEST1\",\n        \"billerId\": \"{{billerId-globalnoti-app}}\",\n        \"reference1\": \"{{reference1-globalnoti-app}}\",\n        \"reference2\": \"\",\n        \"totalAmount\": \"1999.80\",\n        \"currencyCode\": \"THB\",\n        \"paymentStatus\": \"SUCCESS\",\n        \"paymentAccount\": \"xxx-x-x0055-x\",\n        \"paymentDateTime\": \"{{payment-date-time}}\",\n        \"paymentReferenceID\": \"123456\",\n        \"slipImage\": \"iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00341_5_1 Send Global Notification failed - invalid reference2 is empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.reference2\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"AppToApp\",\n    \"data\": {\n        \"serviceCode\": \"BBLTEST1\",\n        \"billerId\": \"{{billerId-globalnoti-app}}\",\n        \"reference1\": \"{{reference1-globalnoti-app}}\",\n        \"reference2\": \"\",\n        \"totalAmount\": \"1999.80\",\n        \"currencyCode\": \"THB\",\n        \"paymentStatus\": \"SUCCESS\",\n        \"paymentAccount\": \"xxx-x-x0055-x\",\n        \"paymentDateTime\": \"{{payment-date-time}}\",\n        \"paymentReferenceID\": \"123456\",\n        \"slipImage\": \"iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJib2R5Ijoie1xuICAgIFwicGF5bWVudFJlcXVlc3RJZFwiOiBcIjIzNEFCQjU4Q0MwMFwiLFxuICAgIFwic2VydmljZUNvZGVcIjogXCJCQkxURVNUXCIsXG4gICAgXCJwcm92aWRlcklkXCI6IFwiQkJMVEVTVFwiLFxuICAgIFwiYmlsbGVySWRcIjogXCIxMjM0NTY3ODkwMTIzNDVcIixcbiAgICBcInJlZmVyZW5jZTFcIjogXCIxMTI0NTc5OTk4IVwiLFxuICAgIFwicmVmZXJlbmNlMlwiOiBcIjIyNTU1MzQ3QUJcIixcbiAgICBcInJlZmVyZW5jZTNcIjogXCIyMDE3MTEwNjE1MTU1MFwiLFxuICAgIFwidG90YWxBbW91bnRcIjogOTk5OTk5OTk5Ljk5LFxuICAgIFwiY3VycmVuY3lDb2RlXCI6IFwiVEhCXCIsXG4gICAgXCJwYXltZW50U3RhdHVzXCI6IFwic3VjY2Vzc1wiLFxuICAgIFwicGF5bWVudEFjY291bnRcIjogXCJ4eHgteC14MDA1NS14XCIsXG4gICAgXCJwYXltZW50RGF0ZVRpbWVcIjogXCIyMDE3LTAyLTE1VDE1OjIzOjExLjAwMSswNzowMFwiLFxuICAgIFwicGF5bWVudFJlZmVyZW5jZUlEXCI6IFwiMTIzNDU2XCIsXG4gICAgXCJzbGlwSW1hZ2VcIjogXCJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQVVBQUFBRkNBWUFBQUNOYnlibEFBQUFIRWxFUVZRSTEyUDRcL1wvOFwvdzM4R0lBWERJQktFMERIeGdsak5CQUFPOVRYTDBZNE9Id0FBQUFCSlJVNUVya0pnZ2c9PVwiLFxuICAgIFwicGF5ZWVJZFwiOiBcIjEyMzQ1Njc4OTAxMjNcIixcbiAgICBcInRyYW5zRGF0ZVwiOiBcIjIwMTctMTEtMTZcIixcbiAgICBcInRyYW5zVGltZVwiOiBcIjE3OjUwOjUwXCIsXG4gICAgXCJ0cmFuc1JlZlwiOiBcIjEwMDk5OTEyMzQ1Njc4OVwiLFxuICAgIFwiY2hhbm5lbFwiOiBcIkNcIixcbiAgICBcInRlcm1UeXBlXCI6IFwiODBcIixcbiAgICBcInRlcm1JZFwiOiBcIjAxMDEyNVwiLFxuICAgIFwiYW1vdW50XCI6IDk5OTk5OTk5OTk5OTk5OS45OSxcbiAgICBcImZyb21CYW5rXCI6IFwiMDAyXCIsXG4gICAgXCJmcm9tQnJhbmNoXCI6IFwiMDE0N1wiLFxuICAgIFwiZnJvbU5hbWVcIjogXCJBQkNEXCIsXG4gICAgXCJiYW5rUmVmXCI6IFwiQkJMXCIsXG4gICAgXCJhcHByb3ZhbENvZGVcIjogXCJFWEFNUExcIixcbiAgICBcInR4blR5cGVcIjogXCJDXCIsXG4gICAgXCJyZXRyeUZsYWdcIjogXCJZXCJcbn0iLCJleHAiOjE2ODU3MDIxMzEsImlhdCI6MTY4NTYxNTczMSwianRpIjoiNTQxMzNkODQtMDYyYi00NTUxLTk3ZTgtMzQ3ZTQ1YzMwOGU3In0.VEWEqYCsp7tetDWu1ZaPVW_13ewIoHJwqX7Q_hJWn_F9pUp-92VNbRnEdsPN0e41auIZJe2oithadqPKZvvZhYPWkjucYWXSyHeE32q-sBMlSo_Uf2sqb_bHFKGpZYKQTGmeaEjNs7aPUjApCm6EYxFVoyEGYOtU4t2l9qjC3eSt-3hYR2_FQJMoxvLUt1Nwu19it_8SES--cQ6PwcvoXWnQbBoE8j5wp5sGZmXP__-oWW7xAn6EqteXU9QvaTkE9Nzu2dJCfmpaLi2fBP82qHt6MqPfWZsZJ1gqw9tP8W7yxXimnRmpItZqB_53CdWmSvVUYpXqsBLGHrsweOMqRD-a03IX8aA1zVuFeQ3QsqtJKkp-pz7a9ZsfGemC2veEwxbLzm1QSe2iD1d4Qbjsan-Hdi78Uf1zhTQW1JOPygZPkNihxZ9TtjQvw9k0w0gHgcdhWSa7NUIbhoKGaGnawtqs9HjYLurJDVDvHF-681TBWVa4ipIrRISkZodCAUVUE8XUNQhxys02ObGpxa4O9Gc8JrCnMcSmCO5L2trmvpUVQkdoPLfbqyMBitHTIzt6oQWbnbE4Xp2pwkl0lmfCWq6OK-iZIoMtuaSpKi8lusYZTxZki2EA6OvUv_ibKbxI39VwEstqwOhA06rL60TEBPIKe_Birs44Iwk3ZQIwjjk",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "2017-03-15T15:23:11.001+07:00",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "d849f8-f6c1-11ec-b939-0242ac120002",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"AppToApp\",\n    \"data\": {\n        \"serviceCode\": \"BBLTEST1\",\n        \"billerId\": \"{{billerId-globalnoti-app}}\",\n        \"reference1\": \"{{reference1-globalnoti-app}}\",\n        \"reference2\": \"20231105109980\",\n        \"totalAmount\": \"1995\",\n        \"currencyCode\": \"THB\",\n        \"paymentStatus\": \"SUCCESS\",\n        \"paymentAccount\": \"xxx-x-x0055-x\",\n        \"paymentDateTime\": \"{{payment-date-time}}\",\n        \"paymentReferenceID\": \"123456\",\n        \"slipImage\": \"iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00341_6 Send Global Notification failed - invalid totalAmount",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.totalAmount\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"AppToApp\",\n    \"data\": {\n        \"serviceCode\": \"BBLTEST1\",\n        \"billerId\": \"{{billerId-globalnoti-app}}\",\n        \"reference1\": \"{{reference1-globalnoti-app}}\",\n        \"reference2\": \"20231105109980\",\n        \"totalAmount\": \"1995\",\n        \"currencyCode\": \"THB\",\n        \"paymentStatus\": \"SUCCESS\",\n        \"paymentAccount\": \"xxx-x-x0055-x\",\n        \"paymentDateTime\": \"{{payment-date-time}}\",\n        \"paymentReferenceID\": \"123456\",\n        \"slipImage\": \"iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJib2R5Ijoie1xuICAgIFwicGF5bWVudFJlcXVlc3RJZFwiOiBcIjIzNEFCQjU4Q0MwMFwiLFxuICAgIFwic2VydmljZUNvZGVcIjogXCJCQkxURVNUXCIsXG4gICAgXCJwcm92aWRlcklkXCI6IFwiQkJMVEVTVFwiLFxuICAgIFwiYmlsbGVySWRcIjogXCIxMjM0NTY3ODkwMTIzNDVcIixcbiAgICBcInJlZmVyZW5jZTFcIjogXCIxMTI0NTc5OTk4IVwiLFxuICAgIFwicmVmZXJlbmNlMlwiOiBcIjIyNTU1MzQ3QUJcIixcbiAgICBcInJlZmVyZW5jZTNcIjogXCIyMDE3MTEwNjE1MTU1MFwiLFxuICAgIFwidG90YWxBbW91bnRcIjogOTk5OTk5OTk5Ljk5LFxuICAgIFwiY3VycmVuY3lDb2RlXCI6IFwiVEhCXCIsXG4gICAgXCJwYXltZW50U3RhdHVzXCI6IFwic3VjY2Vzc1wiLFxuICAgIFwicGF5bWVudEFjY291bnRcIjogXCJ4eHgteC14MDA1NS14XCIsXG4gICAgXCJwYXltZW50RGF0ZVRpbWVcIjogXCIyMDE3LTAyLTE1VDE1OjIzOjExLjAwMSswNzowMFwiLFxuICAgIFwicGF5bWVudFJlZmVyZW5jZUlEXCI6IFwiMTIzNDU2XCIsXG4gICAgXCJzbGlwSW1hZ2VcIjogXCJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQVVBQUFBRkNBWUFBQUNOYnlibEFBQUFIRWxFUVZRSTEyUDRcL1wvOFwvdzM4R0lBWERJQktFMERIeGdsak5CQUFPOVRYTDBZNE9Id0FBQUFCSlJVNUVya0pnZ2c9PVwiLFxuICAgIFwicGF5ZWVJZFwiOiBcIjEyMzQ1Njc4OTAxMjNcIixcbiAgICBcInRyYW5zRGF0ZVwiOiBcIjIwMTctMTEtMTZcIixcbiAgICBcInRyYW5zVGltZVwiOiBcIjE3OjUwOjUwXCIsXG4gICAgXCJ0cmFuc1JlZlwiOiBcIjEwMDk5OTEyMzQ1Njc4OVwiLFxuICAgIFwiY2hhbm5lbFwiOiBcIkNcIixcbiAgICBcInRlcm1UeXBlXCI6IFwiODBcIixcbiAgICBcInRlcm1JZFwiOiBcIjAxMDEyNVwiLFxuICAgIFwiYW1vdW50XCI6IDk5OTk5OTk5OTk5OTk5OS45OSxcbiAgICBcImZyb21CYW5rXCI6IFwiMDAyXCIsXG4gICAgXCJmcm9tQnJhbmNoXCI6IFwiMDE0N1wiLFxuICAgIFwiZnJvbU5hbWVcIjogXCJBQkNEXCIsXG4gICAgXCJiYW5rUmVmXCI6IFwiQkJMXCIsXG4gICAgXCJhcHByb3ZhbENvZGVcIjogXCJFWEFNUExcIixcbiAgICBcInR4blR5cGVcIjogXCJDXCIsXG4gICAgXCJyZXRyeUZsYWdcIjogXCJZXCJcbn0iLCJleHAiOjE2ODU3MDIxMzEsImlhdCI6MTY4NTYxNTczMSwianRpIjoiNTQxMzNkODQtMDYyYi00NTUxLTk3ZTgtMzQ3ZTQ1YzMwOGU3In0.VEWEqYCsp7tetDWu1ZaPVW_13ewIoHJwqX7Q_hJWn_F9pUp-92VNbRnEdsPN0e41auIZJe2oithadqPKZvvZhYPWkjucYWXSyHeE32q-sBMlSo_Uf2sqb_bHFKGpZYKQTGmeaEjNs7aPUjApCm6EYxFVoyEGYOtU4t2l9qjC3eSt-3hYR2_FQJMoxvLUt1Nwu19it_8SES--cQ6PwcvoXWnQbBoE8j5wp5sGZmXP__-oWW7xAn6EqteXU9QvaTkE9Nzu2dJCfmpaLi2fBP82qHt6MqPfWZsZJ1gqw9tP8W7yxXimnRmpItZqB_53CdWmSvVUYpXqsBLGHrsweOMqRD-a03IX8aA1zVuFeQ3QsqtJKkp-pz7a9ZsfGemC2veEwxbLzm1QSe2iD1d4Qbjsan-Hdi78Uf1zhTQW1JOPygZPkNihxZ9TtjQvw9k0w0gHgcdhWSa7NUIbhoKGaGnawtqs9HjYLurJDVDvHF-681TBWVa4ipIrRISkZodCAUVUE8XUNQhxys02ObGpxa4O9Gc8JrCnMcSmCO5L2trmvpUVQkdoPLfbqyMBitHTIzt6oQWbnbE4Xp2pwkl0lmfCWq6OK-iZIoMtuaSpKi8lusYZTxZki2EA6OvUv_ibKbxI39VwEstqwOhA06rL60TEBPIKe_Birs44Iwk3ZQIwjjk",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "2017-03-15T15:23:11.001+07:00",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "d849f8-f6c1-11ec-b939-0242ac120002",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"AppToApp\",\n    \"data\": {\n        \"serviceCode\": \"BBLTEST1\",\n        \"billerId\": \"{{billerId-globalnoti-app}}\",\n        \"reference1\": \"{{reference1-globalnoti-app}}\",\n        \"reference2\": \"20231105109980\",\n        \"totalAmount\": \"1995.15\",\n        \"currencyCode\": \"EU\",\n        \"paymentStatus\": \"SUCCESS\",\n        \"paymentAccount\": \"xxx-x-x0055-x\",\n        \"paymentDateTime\": \"{{payment-date-time}}\",\n        \"paymentReferenceID\": \"123456\",\n        \"slipImage\": \"iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00341_7 Send Global Notification failed - invalid currencyCode",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.currencyCode\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"AppToApp\",\n    \"data\": {\n        \"serviceCode\": \"BBLTEST1\",\n        \"billerId\": \"{{billerId-globalnoti-app}}\",\n        \"reference1\": \"{{reference1-globalnoti-app}}\",\n        \"reference2\": \"20231105109980\",\n        \"totalAmount\": \"1995.15\",\n        \"currencyCode\": \"EU\",\n        \"paymentStatus\": \"SUCCESS\",\n        \"paymentAccount\": \"xxx-x-x0055-x\",\n        \"paymentDateTime\": \"{{payment-date-time}}\",\n        \"paymentReferenceID\": \"123456\",\n        \"slipImage\": \"iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJib2R5Ijoie1xuICAgIFwicGF5bWVudFJlcXVlc3RJZFwiOiBcIjIzNEFCQjU4Q0MwMFwiLFxuICAgIFwic2VydmljZUNvZGVcIjogXCJCQkxURVNUXCIsXG4gICAgXCJwcm92aWRlcklkXCI6IFwiQkJMVEVTVFwiLFxuICAgIFwiYmlsbGVySWRcIjogXCIxMjM0NTY3ODkwMTIzNDVcIixcbiAgICBcInJlZmVyZW5jZTFcIjogXCIxMTI0NTc5OTk4IVwiLFxuICAgIFwicmVmZXJlbmNlMlwiOiBcIjIyNTU1MzQ3QUJcIixcbiAgICBcInJlZmVyZW5jZTNcIjogXCIyMDE3MTEwNjE1MTU1MFwiLFxuICAgIFwidG90YWxBbW91bnRcIjogOTk5OTk5OTk5Ljk5LFxuICAgIFwiY3VycmVuY3lDb2RlXCI6IFwiVEhCXCIsXG4gICAgXCJwYXltZW50U3RhdHVzXCI6IFwic3VjY2Vzc1wiLFxuICAgIFwicGF5bWVudEFjY291bnRcIjogXCJ4eHgteC14MDA1NS14XCIsXG4gICAgXCJwYXltZW50RGF0ZVRpbWVcIjogXCIyMDE3LTAyLTE1VDE1OjIzOjExLjAwMSswNzowMFwiLFxuICAgIFwicGF5bWVudFJlZmVyZW5jZUlEXCI6IFwiMTIzNDU2XCIsXG4gICAgXCJzbGlwSW1hZ2VcIjogXCJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQVVBQUFBRkNBWUFBQUNOYnlibEFBQUFIRWxFUVZRSTEyUDRcL1wvOFwvdzM4R0lBWERJQktFMERIeGdsak5CQUFPOVRYTDBZNE9Id0FBQUFCSlJVNUVya0pnZ2c9PVwiLFxuICAgIFwicGF5ZWVJZFwiOiBcIjEyMzQ1Njc4OTAxMjNcIixcbiAgICBcInRyYW5zRGF0ZVwiOiBcIjIwMTctMTEtMTZcIixcbiAgICBcInRyYW5zVGltZVwiOiBcIjE3OjUwOjUwXCIsXG4gICAgXCJ0cmFuc1JlZlwiOiBcIjEwMDk5OTEyMzQ1Njc4OVwiLFxuICAgIFwiY2hhbm5lbFwiOiBcIkNcIixcbiAgICBcInRlcm1UeXBlXCI6IFwiODBcIixcbiAgICBcInRlcm1JZFwiOiBcIjAxMDEyNVwiLFxuICAgIFwiYW1vdW50XCI6IDk5OTk5OTk5OTk5OTk5OS45OSxcbiAgICBcImZyb21CYW5rXCI6IFwiMDAyXCIsXG4gICAgXCJmcm9tQnJhbmNoXCI6IFwiMDE0N1wiLFxuICAgIFwiZnJvbU5hbWVcIjogXCJBQkNEXCIsXG4gICAgXCJiYW5rUmVmXCI6IFwiQkJMXCIsXG4gICAgXCJhcHByb3ZhbENvZGVcIjogXCJFWEFNUExcIixcbiAgICBcInR4blR5cGVcIjogXCJDXCIsXG4gICAgXCJyZXRyeUZsYWdcIjogXCJZXCJcbn0iLCJleHAiOjE2ODU3MDIxMzEsImlhdCI6MTY4NTYxNTczMSwianRpIjoiNTQxMzNkODQtMDYyYi00NTUxLTk3ZTgtMzQ3ZTQ1YzMwOGU3In0.VEWEqYCsp7tetDWu1ZaPVW_13ewIoHJwqX7Q_hJWn_F9pUp-92VNbRnEdsPN0e41auIZJe2oithadqPKZvvZhYPWkjucYWXSyHeE32q-sBMlSo_Uf2sqb_bHFKGpZYKQTGmeaEjNs7aPUjApCm6EYxFVoyEGYOtU4t2l9qjC3eSt-3hYR2_FQJMoxvLUt1Nwu19it_8SES--cQ6PwcvoXWnQbBoE8j5wp5sGZmXP__-oWW7xAn6EqteXU9QvaTkE9Nzu2dJCfmpaLi2fBP82qHt6MqPfWZsZJ1gqw9tP8W7yxXimnRmpItZqB_53CdWmSvVUYpXqsBLGHrsweOMqRD-a03IX8aA1zVuFeQ3QsqtJKkp-pz7a9ZsfGemC2veEwxbLzm1QSe2iD1d4Qbjsan-Hdi78Uf1zhTQW1JOPygZPkNihxZ9TtjQvw9k0w0gHgcdhWSa7NUIbhoKGaGnawtqs9HjYLurJDVDvHF-681TBWVa4ipIrRISkZodCAUVUE8XUNQhxys02ObGpxa4O9Gc8JrCnMcSmCO5L2trmvpUVQkdoPLfbqyMBitHTIzt6oQWbnbE4Xp2pwkl0lmfCWq6OK-iZIoMtuaSpKi8lusYZTxZki2EA6OvUv_ibKbxI39VwEstqwOhA06rL60TEBPIKe_Birs44Iwk3ZQIwjjk",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "2017-03-15T15:23:11.001+07:00",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "d849f8-f6c1-11ec-b939-0242ac120002",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"AppToApp\",\n    \"data\": {\n        \"serviceCode\": \"BBLTEST1\",\n        \"billerId\": \"{{billerId-globalnoti-app}}\",\n        \"reference1\": \"{{reference1-globalnoti-app}}\",\n        \"reference2\": \"20231105109980\",\n        \"totalAmount\": \"1995.15\",\n        \"currencyCode\": \"\",\n        \"paymentStatus\": \"SUCCESS\",\n        \"paymentAccount\": \"xxx-x-x0055-x\",\n        \"paymentDateTime\": \"{{payment-date-time}}\",\n        \"paymentReferenceID\": \"123456\",\n        \"slipImage\": \"iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00341_7_1 Send Global Notification failed - invalid currencyCode is empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.currencyCode\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"AppToApp\",\n    \"data\": {\n        \"serviceCode\": \"BBLTEST1\",\n        \"billerId\": \"{{billerId-globalnoti-app}}\",\n        \"reference1\": \"{{reference1-globalnoti-app}}\",\n        \"reference2\": \"20231105109980\",\n        \"totalAmount\": \"1995.15\",\n        \"currencyCode\": \"\",\n        \"paymentStatus\": \"SUCCESS\",\n        \"paymentAccount\": \"xxx-x-x0055-x\",\n        \"paymentDateTime\": \"{{payment-date-time}}\",\n        \"paymentReferenceID\": \"123456\",\n        \"slipImage\": \"iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJib2R5Ijoie1xuICAgIFwicGF5bWVudFJlcXVlc3RJZFwiOiBcIjIzNEFCQjU4Q0MwMFwiLFxuICAgIFwic2VydmljZUNvZGVcIjogXCJCQkxURVNUXCIsXG4gICAgXCJwcm92aWRlcklkXCI6IFwiQkJMVEVTVFwiLFxuICAgIFwiYmlsbGVySWRcIjogXCIxMjM0NTY3ODkwMTIzNDVcIixcbiAgICBcInJlZmVyZW5jZTFcIjogXCIxMTI0NTc5OTk4IVwiLFxuICAgIFwicmVmZXJlbmNlMlwiOiBcIjIyNTU1MzQ3QUJcIixcbiAgICBcInJlZmVyZW5jZTNcIjogXCIyMDE3MTEwNjE1MTU1MFwiLFxuICAgIFwidG90YWxBbW91bnRcIjogOTk5OTk5OTk5Ljk5LFxuICAgIFwiY3VycmVuY3lDb2RlXCI6IFwiVEhCXCIsXG4gICAgXCJwYXltZW50U3RhdHVzXCI6IFwic3VjY2Vzc1wiLFxuICAgIFwicGF5bWVudEFjY291bnRcIjogXCJ4eHgteC14MDA1NS14XCIsXG4gICAgXCJwYXltZW50RGF0ZVRpbWVcIjogXCIyMDE3LTAyLTE1VDE1OjIzOjExLjAwMSswNzowMFwiLFxuICAgIFwicGF5bWVudFJlZmVyZW5jZUlEXCI6IFwiMTIzNDU2XCIsXG4gICAgXCJzbGlwSW1hZ2VcIjogXCJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQVVBQUFBRkNBWUFBQUNOYnlibEFBQUFIRWxFUVZRSTEyUDRcL1wvOFwvdzM4R0lBWERJQktFMERIeGdsak5CQUFPOVRYTDBZNE9Id0FBQUFCSlJVNUVya0pnZ2c9PVwiLFxuICAgIFwicGF5ZWVJZFwiOiBcIjEyMzQ1Njc4OTAxMjNcIixcbiAgICBcInRyYW5zRGF0ZVwiOiBcIjIwMTctMTEtMTZcIixcbiAgICBcInRyYW5zVGltZVwiOiBcIjE3OjUwOjUwXCIsXG4gICAgXCJ0cmFuc1JlZlwiOiBcIjEwMDk5OTEyMzQ1Njc4OVwiLFxuICAgIFwiY2hhbm5lbFwiOiBcIkNcIixcbiAgICBcInRlcm1UeXBlXCI6IFwiODBcIixcbiAgICBcInRlcm1JZFwiOiBcIjAxMDEyNVwiLFxuICAgIFwiYW1vdW50XCI6IDk5OTk5OTk5OTk5OTk5OS45OSxcbiAgICBcImZyb21CYW5rXCI6IFwiMDAyXCIsXG4gICAgXCJmcm9tQnJhbmNoXCI6IFwiMDE0N1wiLFxuICAgIFwiZnJvbU5hbWVcIjogXCJBQkNEXCIsXG4gICAgXCJiYW5rUmVmXCI6IFwiQkJMXCIsXG4gICAgXCJhcHByb3ZhbENvZGVcIjogXCJFWEFNUExcIixcbiAgICBcInR4blR5cGVcIjogXCJDXCIsXG4gICAgXCJyZXRyeUZsYWdcIjogXCJZXCJcbn0iLCJleHAiOjE2ODU3MDIxMzEsImlhdCI6MTY4NTYxNTczMSwianRpIjoiNTQxMzNkODQtMDYyYi00NTUxLTk3ZTgtMzQ3ZTQ1YzMwOGU3In0.VEWEqYCsp7tetDWu1ZaPVW_13ewIoHJwqX7Q_hJWn_F9pUp-92VNbRnEdsPN0e41auIZJe2oithadqPKZvvZhYPWkjucYWXSyHeE32q-sBMlSo_Uf2sqb_bHFKGpZYKQTGmeaEjNs7aPUjApCm6EYxFVoyEGYOtU4t2l9qjC3eSt-3hYR2_FQJMoxvLUt1Nwu19it_8SES--cQ6PwcvoXWnQbBoE8j5wp5sGZmXP__-oWW7xAn6EqteXU9QvaTkE9Nzu2dJCfmpaLi2fBP82qHt6MqPfWZsZJ1gqw9tP8W7yxXimnRmpItZqB_53CdWmSvVUYpXqsBLGHrsweOMqRD-a03IX8aA1zVuFeQ3QsqtJKkp-pz7a9ZsfGemC2veEwxbLzm1QSe2iD1d4Qbjsan-Hdi78Uf1zhTQW1JOPygZPkNihxZ9TtjQvw9k0w0gHgcdhWSa7NUIbhoKGaGnawtqs9HjYLurJDVDvHF-681TBWVa4ipIrRISkZodCAUVUE8XUNQhxys02ObGpxa4O9Gc8JrCnMcSmCO5L2trmvpUVQkdoPLfbqyMBitHTIzt6oQWbnbE4Xp2pwkl0lmfCWq6OK-iZIoMtuaSpKi8lusYZTxZki2EA6OvUv_ibKbxI39VwEstqwOhA06rL60TEBPIKe_Birs44Iwk3ZQIwjjk",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "2017-03-15T15:23:11.001+07:00",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "d849f8-f6c1-11ec-b939-0242ac120002",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"AppToApp\",\n    \"data\": {\n        \"serviceCode\": \"BBLTEST1\",\n        \"billerId\": \"{{billerId-globalnoti-app}}\",\n        \"reference1\": \"{{reference1-globalnoti-app}}\",\n        \"reference2\": \"20231105109980\",\n        \"totalAmount\": \"1995.15\",\n        \"currencyCode\": \"THB\",\n        \"paymentStatus\": \"Waiting for approvement\",\n        \"paymentAccount\": \"xxx-x-x0055-x\",\n        \"paymentDateTime\": \"{{payment-date-time}}\",\n        \"paymentReferenceID\": \"123456\",\n        \"slipImage\": \"iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00341_8 Send Global Notification failed - invalid paymentStatus longer than 10",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.paymentStatus\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"AppToApp\",\n    \"data\": {\n        \"serviceCode\": \"BBLTEST1\",\n        \"billerId\": \"{{billerId-globalnoti-app}}\",\n        \"reference1\": \"{{reference1-globalnoti-app}}\",\n        \"reference2\": \"20231105109980\",\n        \"totalAmount\": \"1995.15\",\n        \"currencyCode\": \"THB\",\n        \"paymentStatus\": \"Waiting for approvement\",\n        \"paymentAccount\": \"xxx-x-x0055-x\",\n        \"paymentDateTime\": \"{{payment-date-time}}\",\n        \"paymentReferenceID\": \"123456\",\n        \"slipImage\": \"iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJib2R5Ijoie1xuICAgIFwicGF5bWVudFJlcXVlc3RJZFwiOiBcIjIzNEFCQjU4Q0MwMFwiLFxuICAgIFwic2VydmljZUNvZGVcIjogXCJCQkxURVNUXCIsXG4gICAgXCJwcm92aWRlcklkXCI6IFwiQkJMVEVTVFwiLFxuICAgIFwiYmlsbGVySWRcIjogXCIxMjM0NTY3ODkwMTIzNDVcIixcbiAgICBcInJlZmVyZW5jZTFcIjogXCIxMTI0NTc5OTk4IVwiLFxuICAgIFwicmVmZXJlbmNlMlwiOiBcIjIyNTU1MzQ3QUJcIixcbiAgICBcInJlZmVyZW5jZTNcIjogXCIyMDE3MTEwNjE1MTU1MFwiLFxuICAgIFwidG90YWxBbW91bnRcIjogOTk5OTk5OTk5Ljk5LFxuICAgIFwiY3VycmVuY3lDb2RlXCI6IFwiVEhCXCIsXG4gICAgXCJwYXltZW50U3RhdHVzXCI6IFwic3VjY2Vzc1wiLFxuICAgIFwicGF5bWVudEFjY291bnRcIjogXCJ4eHgteC14MDA1NS14XCIsXG4gICAgXCJwYXltZW50RGF0ZVRpbWVcIjogXCIyMDE3LTAyLTE1VDE1OjIzOjExLjAwMSswNzowMFwiLFxuICAgIFwicGF5bWVudFJlZmVyZW5jZUlEXCI6IFwiMTIzNDU2XCIsXG4gICAgXCJzbGlwSW1hZ2VcIjogXCJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQVVBQUFBRkNBWUFBQUNOYnlibEFBQUFIRWxFUVZRSTEyUDRcL1wvOFwvdzM4R0lBWERJQktFMERIeGdsak5CQUFPOVRYTDBZNE9Id0FBQUFCSlJVNUVya0pnZ2c9PVwiLFxuICAgIFwicGF5ZWVJZFwiOiBcIjEyMzQ1Njc4OTAxMjNcIixcbiAgICBcInRyYW5zRGF0ZVwiOiBcIjIwMTctMTEtMTZcIixcbiAgICBcInRyYW5zVGltZVwiOiBcIjE3OjUwOjUwXCIsXG4gICAgXCJ0cmFuc1JlZlwiOiBcIjEwMDk5OTEyMzQ1Njc4OVwiLFxuICAgIFwiY2hhbm5lbFwiOiBcIkNcIixcbiAgICBcInRlcm1UeXBlXCI6IFwiODBcIixcbiAgICBcInRlcm1JZFwiOiBcIjAxMDEyNVwiLFxuICAgIFwiYW1vdW50XCI6IDk5OTk5OTk5OTk5OTk5OS45OSxcbiAgICBcImZyb21CYW5rXCI6IFwiMDAyXCIsXG4gICAgXCJmcm9tQnJhbmNoXCI6IFwiMDE0N1wiLFxuICAgIFwiZnJvbU5hbWVcIjogXCJBQkNEXCIsXG4gICAgXCJiYW5rUmVmXCI6IFwiQkJMXCIsXG4gICAgXCJhcHByb3ZhbENvZGVcIjogXCJFWEFNUExcIixcbiAgICBcInR4blR5cGVcIjogXCJDXCIsXG4gICAgXCJyZXRyeUZsYWdcIjogXCJZXCJcbn0iLCJleHAiOjE2ODU3MDIxMzEsImlhdCI6MTY4NTYxNTczMSwianRpIjoiNTQxMzNkODQtMDYyYi00NTUxLTk3ZTgtMzQ3ZTQ1YzMwOGU3In0.VEWEqYCsp7tetDWu1ZaPVW_13ewIoHJwqX7Q_hJWn_F9pUp-92VNbRnEdsPN0e41auIZJe2oithadqPKZvvZhYPWkjucYWXSyHeE32q-sBMlSo_Uf2sqb_bHFKGpZYKQTGmeaEjNs7aPUjApCm6EYxFVoyEGYOtU4t2l9qjC3eSt-3hYR2_FQJMoxvLUt1Nwu19it_8SES--cQ6PwcvoXWnQbBoE8j5wp5sGZmXP__-oWW7xAn6EqteXU9QvaTkE9Nzu2dJCfmpaLi2fBP82qHt6MqPfWZsZJ1gqw9tP8W7yxXimnRmpItZqB_53CdWmSvVUYpXqsBLGHrsweOMqRD-a03IX8aA1zVuFeQ3QsqtJKkp-pz7a9ZsfGemC2veEwxbLzm1QSe2iD1d4Qbjsan-Hdi78Uf1zhTQW1JOPygZPkNihxZ9TtjQvw9k0w0gHgcdhWSa7NUIbhoKGaGnawtqs9HjYLurJDVDvHF-681TBWVa4ipIrRISkZodCAUVUE8XUNQhxys02ObGpxa4O9Gc8JrCnMcSmCO5L2trmvpUVQkdoPLfbqyMBitHTIzt6oQWbnbE4Xp2pwkl0lmfCWq6OK-iZIoMtuaSpKi8lusYZTxZki2EA6OvUv_ibKbxI39VwEstqwOhA06rL60TEBPIKe_Birs44Iwk3ZQIwjjk",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "2017-03-15T15:23:11.001+07:00",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "d849f8-f6c1-11ec-b939-0242ac120002",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"AppToApp\",\n    \"data\": {\n        \"serviceCode\": \"BBLTEST1\",\n        \"billerId\": \"{{billerId-globalnoti-app}}\",\n        \"reference1\": \"{{reference1-globalnoti-app}}\",\n        \"reference2\": \"20231105109980\",\n        \"totalAmount\": \"1995.15\",\n        \"currencyCode\": \"THB\",\n        \"paymentStatus\": \"Success\",\n        \"paymentAccount\": \"\",\n        \"paymentDateTime\": \"{{payment-date-time}}\",\n        \"paymentReferenceID\": \"123456\",\n        \"slipImage\": \"iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00341_9 Send Global Notification failed - invalid paymentAccount is empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.paymentAccount\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"AppToApp\",\n    \"data\": {\n        \"serviceCode\": \"BBLTEST1\",\n        \"billerId\": \"{{billerId-globalnoti-app}}\",\n        \"reference1\": \"{{reference1-globalnoti-app}}\",\n        \"reference2\": \"20231105109980\",\n        \"totalAmount\": \"1995.15\",\n        \"currencyCode\": \"THB\",\n        \"paymentStatus\": \"Success\",\n        \"paymentAccount\": \"\",\n        \"paymentDateTime\": \"{{payment-date-time}}\",\n        \"paymentReferenceID\": \"123456\",\n        \"slipImage\": \"iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJib2R5Ijoie1xuICAgIFwicGF5bWVudFJlcXVlc3RJZFwiOiBcIjIzNEFCQjU4Q0MwMFwiLFxuICAgIFwic2VydmljZUNvZGVcIjogXCJCQkxURVNUXCIsXG4gICAgXCJwcm92aWRlcklkXCI6IFwiQkJMVEVTVFwiLFxuICAgIFwiYmlsbGVySWRcIjogXCIxMjM0NTY3ODkwMTIzNDVcIixcbiAgICBcInJlZmVyZW5jZTFcIjogXCIxMTI0NTc5OTk4IVwiLFxuICAgIFwicmVmZXJlbmNlMlwiOiBcIjIyNTU1MzQ3QUJcIixcbiAgICBcInJlZmVyZW5jZTNcIjogXCIyMDE3MTEwNjE1MTU1MFwiLFxuICAgIFwidG90YWxBbW91bnRcIjogOTk5OTk5OTk5Ljk5LFxuICAgIFwiY3VycmVuY3lDb2RlXCI6IFwiVEhCXCIsXG4gICAgXCJwYXltZW50U3RhdHVzXCI6IFwic3VjY2Vzc1wiLFxuICAgIFwicGF5bWVudEFjY291bnRcIjogXCJ4eHgteC14MDA1NS14XCIsXG4gICAgXCJwYXltZW50RGF0ZVRpbWVcIjogXCIyMDE3LTAyLTE1VDE1OjIzOjExLjAwMSswNzowMFwiLFxuICAgIFwicGF5bWVudFJlZmVyZW5jZUlEXCI6IFwiMTIzNDU2XCIsXG4gICAgXCJzbGlwSW1hZ2VcIjogXCJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQVVBQUFBRkNBWUFBQUNOYnlibEFBQUFIRWxFUVZRSTEyUDRcL1wvOFwvdzM4R0lBWERJQktFMERIeGdsak5CQUFPOVRYTDBZNE9Id0FBQUFCSlJVNUVya0pnZ2c9PVwiLFxuICAgIFwicGF5ZWVJZFwiOiBcIjEyMzQ1Njc4OTAxMjNcIixcbiAgICBcInRyYW5zRGF0ZVwiOiBcIjIwMTctMTEtMTZcIixcbiAgICBcInRyYW5zVGltZVwiOiBcIjE3OjUwOjUwXCIsXG4gICAgXCJ0cmFuc1JlZlwiOiBcIjEwMDk5OTEyMzQ1Njc4OVwiLFxuICAgIFwiY2hhbm5lbFwiOiBcIkNcIixcbiAgICBcInRlcm1UeXBlXCI6IFwiODBcIixcbiAgICBcInRlcm1JZFwiOiBcIjAxMDEyNVwiLFxuICAgIFwiYW1vdW50XCI6IDk5OTk5OTk5OTk5OTk5OS45OSxcbiAgICBcImZyb21CYW5rXCI6IFwiMDAyXCIsXG4gICAgXCJmcm9tQnJhbmNoXCI6IFwiMDE0N1wiLFxuICAgIFwiZnJvbU5hbWVcIjogXCJBQkNEXCIsXG4gICAgXCJiYW5rUmVmXCI6IFwiQkJMXCIsXG4gICAgXCJhcHByb3ZhbENvZGVcIjogXCJFWEFNUExcIixcbiAgICBcInR4blR5cGVcIjogXCJDXCIsXG4gICAgXCJyZXRyeUZsYWdcIjogXCJZXCJcbn0iLCJleHAiOjE2ODU3MDIxMzEsImlhdCI6MTY4NTYxNTczMSwianRpIjoiNTQxMzNkODQtMDYyYi00NTUxLTk3ZTgtMzQ3ZTQ1YzMwOGU3In0.VEWEqYCsp7tetDWu1ZaPVW_13ewIoHJwqX7Q_hJWn_F9pUp-92VNbRnEdsPN0e41auIZJe2oithadqPKZvvZhYPWkjucYWXSyHeE32q-sBMlSo_Uf2sqb_bHFKGpZYKQTGmeaEjNs7aPUjApCm6EYxFVoyEGYOtU4t2l9qjC3eSt-3hYR2_FQJMoxvLUt1Nwu19it_8SES--cQ6PwcvoXWnQbBoE8j5wp5sGZmXP__-oWW7xAn6EqteXU9QvaTkE9Nzu2dJCfmpaLi2fBP82qHt6MqPfWZsZJ1gqw9tP8W7yxXimnRmpItZqB_53CdWmSvVUYpXqsBLGHrsweOMqRD-a03IX8aA1zVuFeQ3QsqtJKkp-pz7a9ZsfGemC2veEwxbLzm1QSe2iD1d4Qbjsan-Hdi78Uf1zhTQW1JOPygZPkNihxZ9TtjQvw9k0w0gHgcdhWSa7NUIbhoKGaGnawtqs9HjYLurJDVDvHF-681TBWVa4ipIrRISkZodCAUVUE8XUNQhxys02ObGpxa4O9Gc8JrCnMcSmCO5L2trmvpUVQkdoPLfbqyMBitHTIzt6oQWbnbE4Xp2pwkl0lmfCWq6OK-iZIoMtuaSpKi8lusYZTxZki2EA6OvUv_ibKbxI39VwEstqwOhA06rL60TEBPIKe_Birs44Iwk3ZQIwjjk",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "2017-03-15T15:23:11.001+07:00",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "d849f8-f6c1-11ec-b939-0242ac120002",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"AppToApp\",\n    \"data\": {\n        \"serviceCode\": \"BBLTEST1\",\n        \"billerId\": \"{{billerId-globalnoti-app}}\",\n        \"reference1\": \"{{reference1-globalnoti-app}}\",\n        \"reference2\": \"20231105109980\",\n        \"totalAmount\": \"1995.15\",\n        \"currencyCode\": \"THB\",\n        \"paymentStatus\": \"Success\",\n        \"paymentAccount\": \"xxx-x23-x0011-xx\",\n        \"paymentDateTime\": \"{{payment-date-time}}\",\n        \"paymentReferenceID\": \"123456\",\n        \"slipImage\": \"iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00341_9_1 Send Global Notification failed - invalid paymentAccount longer than 15",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.paymentAccount\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"AppToApp\",\n    \"data\": {\n        \"serviceCode\": \"BBLTEST1\",\n        \"billerId\": \"{{billerId-globalnoti-app}}\",\n        \"reference1\": \"{{reference1-globalnoti-app}}\",\n        \"reference2\": \"20231105109980\",\n        \"totalAmount\": \"1995.15\",\n        \"currencyCode\": \"THB\",\n        \"paymentStatus\": \"Success\",\n        \"paymentAccount\": \"xxx-x23-x0011-xx\",\n        \"paymentDateTime\": \"{{payment-date-time}}\",\n        \"paymentReferenceID\": \"123456\",\n        \"slipImage\": \"iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJib2R5Ijoie1xuICAgIFwicGF5bWVudFJlcXVlc3RJZFwiOiBcIjIzNEFCQjU4Q0MwMFwiLFxuICAgIFwic2VydmljZUNvZGVcIjogXCJCQkxURVNUXCIsXG4gICAgXCJwcm92aWRlcklkXCI6IFwiQkJMVEVTVFwiLFxuICAgIFwiYmlsbGVySWRcIjogXCIxMjM0NTY3ODkwMTIzNDVcIixcbiAgICBcInJlZmVyZW5jZTFcIjogXCIxMTI0NTc5OTk4IVwiLFxuICAgIFwicmVmZXJlbmNlMlwiOiBcIjIyNTU1MzQ3QUJcIixcbiAgICBcInJlZmVyZW5jZTNcIjogXCIyMDE3MTEwNjE1MTU1MFwiLFxuICAgIFwidG90YWxBbW91bnRcIjogOTk5OTk5OTk5Ljk5LFxuICAgIFwiY3VycmVuY3lDb2RlXCI6IFwiVEhCXCIsXG4gICAgXCJwYXltZW50U3RhdHVzXCI6IFwic3VjY2Vzc1wiLFxuICAgIFwicGF5bWVudEFjY291bnRcIjogXCJ4eHgteC14MDA1NS14XCIsXG4gICAgXCJwYXltZW50RGF0ZVRpbWVcIjogXCIyMDE3LTAyLTE1VDE1OjIzOjExLjAwMSswNzowMFwiLFxuICAgIFwicGF5bWVudFJlZmVyZW5jZUlEXCI6IFwiMTIzNDU2XCIsXG4gICAgXCJzbGlwSW1hZ2VcIjogXCJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQVVBQUFBRkNBWUFBQUNOYnlibEFBQUFIRWxFUVZRSTEyUDRcL1wvOFwvdzM4R0lBWERJQktFMERIeGdsak5CQUFPOVRYTDBZNE9Id0FBQUFCSlJVNUVya0pnZ2c9PVwiLFxuICAgIFwicGF5ZWVJZFwiOiBcIjEyMzQ1Njc4OTAxMjNcIixcbiAgICBcInRyYW5zRGF0ZVwiOiBcIjIwMTctMTEtMTZcIixcbiAgICBcInRyYW5zVGltZVwiOiBcIjE3OjUwOjUwXCIsXG4gICAgXCJ0cmFuc1JlZlwiOiBcIjEwMDk5OTEyMzQ1Njc4OVwiLFxuICAgIFwiY2hhbm5lbFwiOiBcIkNcIixcbiAgICBcInRlcm1UeXBlXCI6IFwiODBcIixcbiAgICBcInRlcm1JZFwiOiBcIjAxMDEyNVwiLFxuICAgIFwiYW1vdW50XCI6IDk5OTk5OTk5OTk5OTk5OS45OSxcbiAgICBcImZyb21CYW5rXCI6IFwiMDAyXCIsXG4gICAgXCJmcm9tQnJhbmNoXCI6IFwiMDE0N1wiLFxuICAgIFwiZnJvbU5hbWVcIjogXCJBQkNEXCIsXG4gICAgXCJiYW5rUmVmXCI6IFwiQkJMXCIsXG4gICAgXCJhcHByb3ZhbENvZGVcIjogXCJFWEFNUExcIixcbiAgICBcInR4blR5cGVcIjogXCJDXCIsXG4gICAgXCJyZXRyeUZsYWdcIjogXCJZXCJcbn0iLCJleHAiOjE2ODU3MDIxMzEsImlhdCI6MTY4NTYxNTczMSwianRpIjoiNTQxMzNkODQtMDYyYi00NTUxLTk3ZTgtMzQ3ZTQ1YzMwOGU3In0.VEWEqYCsp7tetDWu1ZaPVW_13ewIoHJwqX7Q_hJWn_F9pUp-92VNbRnEdsPN0e41auIZJe2oithadqPKZvvZhYPWkjucYWXSyHeE32q-sBMlSo_Uf2sqb_bHFKGpZYKQTGmeaEjNs7aPUjApCm6EYxFVoyEGYOtU4t2l9qjC3eSt-3hYR2_FQJMoxvLUt1Nwu19it_8SES--cQ6PwcvoXWnQbBoE8j5wp5sGZmXP__-oWW7xAn6EqteXU9QvaTkE9Nzu2dJCfmpaLi2fBP82qHt6MqPfWZsZJ1gqw9tP8W7yxXimnRmpItZqB_53CdWmSvVUYpXqsBLGHrsweOMqRD-a03IX8aA1zVuFeQ3QsqtJKkp-pz7a9ZsfGemC2veEwxbLzm1QSe2iD1d4Qbjsan-Hdi78Uf1zhTQW1JOPygZPkNihxZ9TtjQvw9k0w0gHgcdhWSa7NUIbhoKGaGnawtqs9HjYLurJDVDvHF-681TBWVa4ipIrRISkZodCAUVUE8XUNQhxys02ObGpxa4O9Gc8JrCnMcSmCO5L2trmvpUVQkdoPLfbqyMBitHTIzt6oQWbnbE4Xp2pwkl0lmfCWq6OK-iZIoMtuaSpKi8lusYZTxZki2EA6OvUv_ibKbxI39VwEstqwOhA06rL60TEBPIKe_Birs44Iwk3ZQIwjjk",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "2017-03-15T15:23:11.001+07:00",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "d849f8-f6c1-11ec-b939-0242ac120002",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"AppToApp\",\n    \"data\": {\n        \"serviceCode\": \"BBLTEST1\",\n        \"billerId\": \"{{billerId-globalnoti-app}}\",\n        \"reference1\": \"{{reference1-globalnoti-app}}\",\n        \"reference2\": \"20231105109980\",\n        \"totalAmount\": \"1995.15\",\n        \"currencyCode\": \"THB\",\n        \"paymentStatus\": \"Success\",\n        \"paymentAccount\": \"xxx-x-x0055-x\",\n        \"paymentDateTime\": \"2023/11/05T12:13:11.001+07:00\",\n        \"paymentReferenceID\": \"123456\",\n        \"slipImage\": \"iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00341_10 Send Global Notification failed - invalid paymentDateTime",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.paymentDateTime\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"AppToApp\",\n    \"data\": {\n        \"serviceCode\": \"BBLTEST1\",\n        \"billerId\": \"{{billerId-globalnoti-app}}\",\n        \"reference1\": \"{{reference1-globalnoti-app}}\",\n        \"reference2\": \"20231105109980\",\n        \"totalAmount\": \"1995.15\",\n        \"currencyCode\": \"THB\",\n        \"paymentStatus\": \"Success\",\n        \"paymentAccount\": \"xxx-x-x0055-x\",\n        \"paymentDateTime\": \"2023/11/05T12:13:11.001+07:00\",\n        \"paymentReferenceID\": \"123456\",\n        \"slipImage\": \"iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJib2R5Ijoie1xuICAgIFwicGF5bWVudFJlcXVlc3RJZFwiOiBcIjIzNEFCQjU4Q0MwMFwiLFxuICAgIFwic2VydmljZUNvZGVcIjogXCJCQkxURVNUXCIsXG4gICAgXCJwcm92aWRlcklkXCI6IFwiQkJMVEVTVFwiLFxuICAgIFwiYmlsbGVySWRcIjogXCIxMjM0NTY3ODkwMTIzNDVcIixcbiAgICBcInJlZmVyZW5jZTFcIjogXCIxMTI0NTc5OTk4IVwiLFxuICAgIFwicmVmZXJlbmNlMlwiOiBcIjIyNTU1MzQ3QUJcIixcbiAgICBcInJlZmVyZW5jZTNcIjogXCIyMDE3MTEwNjE1MTU1MFwiLFxuICAgIFwidG90YWxBbW91bnRcIjogOTk5OTk5OTk5Ljk5LFxuICAgIFwiY3VycmVuY3lDb2RlXCI6IFwiVEhCXCIsXG4gICAgXCJwYXltZW50U3RhdHVzXCI6IFwic3VjY2Vzc1wiLFxuICAgIFwicGF5bWVudEFjY291bnRcIjogXCJ4eHgteC14MDA1NS14XCIsXG4gICAgXCJwYXltZW50RGF0ZVRpbWVcIjogXCIyMDE3LTAyLTE1VDE1OjIzOjExLjAwMSswNzowMFwiLFxuICAgIFwicGF5bWVudFJlZmVyZW5jZUlEXCI6IFwiMTIzNDU2XCIsXG4gICAgXCJzbGlwSW1hZ2VcIjogXCJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQVVBQUFBRkNBWUFBQUNOYnlibEFBQUFIRWxFUVZRSTEyUDRcL1wvOFwvdzM4R0lBWERJQktFMERIeGdsak5CQUFPOVRYTDBZNE9Id0FBQUFCSlJVNUVya0pnZ2c9PVwiLFxuICAgIFwicGF5ZWVJZFwiOiBcIjEyMzQ1Njc4OTAxMjNcIixcbiAgICBcInRyYW5zRGF0ZVwiOiBcIjIwMTctMTEtMTZcIixcbiAgICBcInRyYW5zVGltZVwiOiBcIjE3OjUwOjUwXCIsXG4gICAgXCJ0cmFuc1JlZlwiOiBcIjEwMDk5OTEyMzQ1Njc4OVwiLFxuICAgIFwiY2hhbm5lbFwiOiBcIkNcIixcbiAgICBcInRlcm1UeXBlXCI6IFwiODBcIixcbiAgICBcInRlcm1JZFwiOiBcIjAxMDEyNVwiLFxuICAgIFwiYW1vdW50XCI6IDk5OTk5OTk5OTk5OTk5OS45OSxcbiAgICBcImZyb21CYW5rXCI6IFwiMDAyXCIsXG4gICAgXCJmcm9tQnJhbmNoXCI6IFwiMDE0N1wiLFxuICAgIFwiZnJvbU5hbWVcIjogXCJBQkNEXCIsXG4gICAgXCJiYW5rUmVmXCI6IFwiQkJMXCIsXG4gICAgXCJhcHByb3ZhbENvZGVcIjogXCJFWEFNUExcIixcbiAgICBcInR4blR5cGVcIjogXCJDXCIsXG4gICAgXCJyZXRyeUZsYWdcIjogXCJZXCJcbn0iLCJleHAiOjE2ODU3MDIxMzEsImlhdCI6MTY4NTYxNTczMSwianRpIjoiNTQxMzNkODQtMDYyYi00NTUxLTk3ZTgtMzQ3ZTQ1YzMwOGU3In0.VEWEqYCsp7tetDWu1ZaPVW_13ewIoHJwqX7Q_hJWn_F9pUp-92VNbRnEdsPN0e41auIZJe2oithadqPKZvvZhYPWkjucYWXSyHeE32q-sBMlSo_Uf2sqb_bHFKGpZYKQTGmeaEjNs7aPUjApCm6EYxFVoyEGYOtU4t2l9qjC3eSt-3hYR2_FQJMoxvLUt1Nwu19it_8SES--cQ6PwcvoXWnQbBoE8j5wp5sGZmXP__-oWW7xAn6EqteXU9QvaTkE9Nzu2dJCfmpaLi2fBP82qHt6MqPfWZsZJ1gqw9tP8W7yxXimnRmpItZqB_53CdWmSvVUYpXqsBLGHrsweOMqRD-a03IX8aA1zVuFeQ3QsqtJKkp-pz7a9ZsfGemC2veEwxbLzm1QSe2iD1d4Qbjsan-Hdi78Uf1zhTQW1JOPygZPkNihxZ9TtjQvw9k0w0gHgcdhWSa7NUIbhoKGaGnawtqs9HjYLurJDVDvHF-681TBWVa4ipIrRISkZodCAUVUE8XUNQhxys02ObGpxa4O9Gc8JrCnMcSmCO5L2trmvpUVQkdoPLfbqyMBitHTIzt6oQWbnbE4Xp2pwkl0lmfCWq6OK-iZIoMtuaSpKi8lusYZTxZki2EA6OvUv_ibKbxI39VwEstqwOhA06rL60TEBPIKe_Birs44Iwk3ZQIwjjk",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "2017-03-15T15:23:11.001+07:00",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "d849f8-f6c1-11ec-b939-0242ac120002",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"AppToApp\",\n    \"data\": {\n        \"serviceCode\": \"BBLTEST1\",\n        \"billerId\": \"{{billerId-globalnoti-app}}\",\n        \"reference1\": \"{{reference1-globalnoti-app}}\",\n        \"reference2\": \"20231105109980\",\n        \"totalAmount\": \"1995.15\",\n        \"currencyCode\": \"THB\",\n        \"paymentStatus\": \"Success\",\n        \"paymentAccount\": \"xxx-x-x0055-x\",\n        \"paymentDateTime\": \"{{payment-date-time}}\",\n        \"paymentReferenceID\": \"\",\n        \"slipImage\": \"iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00341_11 Send Global Notification failed - invalid paymentReferenceID is empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.paymentReferenceID\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"AppToApp\",\n    \"data\": {\n        \"serviceCode\": \"BBLTEST1\",\n        \"billerId\": \"{{billerId-globalnoti-app}}\",\n        \"reference1\": \"{{reference1-globalnoti-app}}\",\n        \"reference2\": \"20231105109980\",\n        \"totalAmount\": \"1995.15\",\n        \"currencyCode\": \"THB\",\n        \"paymentStatus\": \"Success\",\n        \"paymentAccount\": \"xxx-x-x0055-x\",\n        \"paymentDateTime\": \"{{payment-date-time}}\",\n        \"paymentReferenceID\": \"\",\n        \"slipImage\": \"iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJib2R5Ijoie1xuICAgIFwicGF5bWVudFJlcXVlc3RJZFwiOiBcIjIzNEFCQjU4Q0MwMFwiLFxuICAgIFwic2VydmljZUNvZGVcIjogXCJCQkxURVNUXCIsXG4gICAgXCJwcm92aWRlcklkXCI6IFwiQkJMVEVTVFwiLFxuICAgIFwiYmlsbGVySWRcIjogXCIxMjM0NTY3ODkwMTIzNDVcIixcbiAgICBcInJlZmVyZW5jZTFcIjogXCIxMTI0NTc5OTk4IVwiLFxuICAgIFwicmVmZXJlbmNlMlwiOiBcIjIyNTU1MzQ3QUJcIixcbiAgICBcInJlZmVyZW5jZTNcIjogXCIyMDE3MTEwNjE1MTU1MFwiLFxuICAgIFwidG90YWxBbW91bnRcIjogOTk5OTk5OTk5Ljk5LFxuICAgIFwiY3VycmVuY3lDb2RlXCI6IFwiVEhCXCIsXG4gICAgXCJwYXltZW50U3RhdHVzXCI6IFwic3VjY2Vzc1wiLFxuICAgIFwicGF5bWVudEFjY291bnRcIjogXCJ4eHgteC14MDA1NS14XCIsXG4gICAgXCJwYXltZW50RGF0ZVRpbWVcIjogXCIyMDE3LTAyLTE1VDE1OjIzOjExLjAwMSswNzowMFwiLFxuICAgIFwicGF5bWVudFJlZmVyZW5jZUlEXCI6IFwiMTIzNDU2XCIsXG4gICAgXCJzbGlwSW1hZ2VcIjogXCJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQVVBQUFBRkNBWUFBQUNOYnlibEFBQUFIRWxFUVZRSTEyUDRcL1wvOFwvdzM4R0lBWERJQktFMERIeGdsak5CQUFPOVRYTDBZNE9Id0FBQUFCSlJVNUVya0pnZ2c9PVwiLFxuICAgIFwicGF5ZWVJZFwiOiBcIjEyMzQ1Njc4OTAxMjNcIixcbiAgICBcInRyYW5zRGF0ZVwiOiBcIjIwMTctMTEtMTZcIixcbiAgICBcInRyYW5zVGltZVwiOiBcIjE3OjUwOjUwXCIsXG4gICAgXCJ0cmFuc1JlZlwiOiBcIjEwMDk5OTEyMzQ1Njc4OVwiLFxuICAgIFwiY2hhbm5lbFwiOiBcIkNcIixcbiAgICBcInRlcm1UeXBlXCI6IFwiODBcIixcbiAgICBcInRlcm1JZFwiOiBcIjAxMDEyNVwiLFxuICAgIFwiYW1vdW50XCI6IDk5OTk5OTk5OTk5OTk5OS45OSxcbiAgICBcImZyb21CYW5rXCI6IFwiMDAyXCIsXG4gICAgXCJmcm9tQnJhbmNoXCI6IFwiMDE0N1wiLFxuICAgIFwiZnJvbU5hbWVcIjogXCJBQkNEXCIsXG4gICAgXCJiYW5rUmVmXCI6IFwiQkJMXCIsXG4gICAgXCJhcHByb3ZhbENvZGVcIjogXCJFWEFNUExcIixcbiAgICBcInR4blR5cGVcIjogXCJDXCIsXG4gICAgXCJyZXRyeUZsYWdcIjogXCJZXCJcbn0iLCJleHAiOjE2ODU3MDIxMzEsImlhdCI6MTY4NTYxNTczMSwianRpIjoiNTQxMzNkODQtMDYyYi00NTUxLTk3ZTgtMzQ3ZTQ1YzMwOGU3In0.VEWEqYCsp7tetDWu1ZaPVW_13ewIoHJwqX7Q_hJWn_F9pUp-92VNbRnEdsPN0e41auIZJe2oithadqPKZvvZhYPWkjucYWXSyHeE32q-sBMlSo_Uf2sqb_bHFKGpZYKQTGmeaEjNs7aPUjApCm6EYxFVoyEGYOtU4t2l9qjC3eSt-3hYR2_FQJMoxvLUt1Nwu19it_8SES--cQ6PwcvoXWnQbBoE8j5wp5sGZmXP__-oWW7xAn6EqteXU9QvaTkE9Nzu2dJCfmpaLi2fBP82qHt6MqPfWZsZJ1gqw9tP8W7yxXimnRmpItZqB_53CdWmSvVUYpXqsBLGHrsweOMqRD-a03IX8aA1zVuFeQ3QsqtJKkp-pz7a9ZsfGemC2veEwxbLzm1QSe2iD1d4Qbjsan-Hdi78Uf1zhTQW1JOPygZPkNihxZ9TtjQvw9k0w0gHgcdhWSa7NUIbhoKGaGnawtqs9HjYLurJDVDvHF-681TBWVa4ipIrRISkZodCAUVUE8XUNQhxys02ObGpxa4O9Gc8JrCnMcSmCO5L2trmvpUVQkdoPLfbqyMBitHTIzt6oQWbnbE4Xp2pwkl0lmfCWq6OK-iZIoMtuaSpKi8lusYZTxZki2EA6OvUv_ibKbxI39VwEstqwOhA06rL60TEBPIKe_Birs44Iwk3ZQIwjjk",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "2017-03-15T15:23:11.001+07:00",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "d849f8-f6c1-11ec-b939-0242ac120002",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"AppToApp\",\n    \"data\": {\n        \"serviceCode\": \"BBLTEST1\",\n        \"billerId\": \"{{billerId-globalnoti-app}}\",\n        \"reference1\": \"{{reference1-globalnoti-app}}\",\n        \"reference2\": \"20231105109980\",\n        \"totalAmount\": \"1995.15\",\n        \"currencyCode\": \"THB\",\n        \"paymentStatus\": \"Success\",\n        \"paymentAccount\": \"xxx-x-x0055-x\",\n        \"paymentDateTime\": \"{{payment-date-time}}\",\n        \"paymentReferenceID\": \"12345ABC\",\n        \"slipImage\": \"iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00341_11_1 Send Global Notification failed - invalid paymentReferenceID longer than 6",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.paymentReferenceID\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"AppToApp\",\n    \"data\": {\n        \"serviceCode\": \"BBLTEST1\",\n        \"billerId\": \"{{billerId-globalnoti-app}}\",\n        \"reference1\": \"{{reference1-globalnoti-app}}\",\n        \"reference2\": \"20231105109980\",\n        \"totalAmount\": \"1995.15\",\n        \"currencyCode\": \"THB\",\n        \"paymentStatus\": \"Success\",\n        \"paymentAccount\": \"xxx-x-x0055-x\",\n        \"paymentDateTime\": \"{{payment-date-time}}\",\n        \"paymentReferenceID\": \"12345ABC\",\n        \"slipImage\": \"iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJib2R5Ijoie1xuICAgIFwicGF5bWVudFJlcXVlc3RJZFwiOiBcIjIzNEFCQjU4Q0MwMFwiLFxuICAgIFwic2VydmljZUNvZGVcIjogXCJCQkxURVNUXCIsXG4gICAgXCJwcm92aWRlcklkXCI6IFwiQkJMVEVTVFwiLFxuICAgIFwiYmlsbGVySWRcIjogXCIxMjM0NTY3ODkwMTIzNDVcIixcbiAgICBcInJlZmVyZW5jZTFcIjogXCIxMTI0NTc5OTk4IVwiLFxuICAgIFwicmVmZXJlbmNlMlwiOiBcIjIyNTU1MzQ3QUJcIixcbiAgICBcInJlZmVyZW5jZTNcIjogXCIyMDE3MTEwNjE1MTU1MFwiLFxuICAgIFwidG90YWxBbW91bnRcIjogOTk5OTk5OTk5Ljk5LFxuICAgIFwiY3VycmVuY3lDb2RlXCI6IFwiVEhCXCIsXG4gICAgXCJwYXltZW50U3RhdHVzXCI6IFwic3VjY2Vzc1wiLFxuICAgIFwicGF5bWVudEFjY291bnRcIjogXCJ4eHgteC14MDA1NS14XCIsXG4gICAgXCJwYXltZW50RGF0ZVRpbWVcIjogXCIyMDE3LTAyLTE1VDE1OjIzOjExLjAwMSswNzowMFwiLFxuICAgIFwicGF5bWVudFJlZmVyZW5jZUlEXCI6IFwiMTIzNDU2XCIsXG4gICAgXCJzbGlwSW1hZ2VcIjogXCJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQVVBQUFBRkNBWUFBQUNOYnlibEFBQUFIRWxFUVZRSTEyUDRcL1wvOFwvdzM4R0lBWERJQktFMERIeGdsak5CQUFPOVRYTDBZNE9Id0FBQUFCSlJVNUVya0pnZ2c9PVwiLFxuICAgIFwicGF5ZWVJZFwiOiBcIjEyMzQ1Njc4OTAxMjNcIixcbiAgICBcInRyYW5zRGF0ZVwiOiBcIjIwMTctMTEtMTZcIixcbiAgICBcInRyYW5zVGltZVwiOiBcIjE3OjUwOjUwXCIsXG4gICAgXCJ0cmFuc1JlZlwiOiBcIjEwMDk5OTEyMzQ1Njc4OVwiLFxuICAgIFwiY2hhbm5lbFwiOiBcIkNcIixcbiAgICBcInRlcm1UeXBlXCI6IFwiODBcIixcbiAgICBcInRlcm1JZFwiOiBcIjAxMDEyNVwiLFxuICAgIFwiYW1vdW50XCI6IDk5OTk5OTk5OTk5OTk5OS45OSxcbiAgICBcImZyb21CYW5rXCI6IFwiMDAyXCIsXG4gICAgXCJmcm9tQnJhbmNoXCI6IFwiMDE0N1wiLFxuICAgIFwiZnJvbU5hbWVcIjogXCJBQkNEXCIsXG4gICAgXCJiYW5rUmVmXCI6IFwiQkJMXCIsXG4gICAgXCJhcHByb3ZhbENvZGVcIjogXCJFWEFNUExcIixcbiAgICBcInR4blR5cGVcIjogXCJDXCIsXG4gICAgXCJyZXRyeUZsYWdcIjogXCJZXCJcbn0iLCJleHAiOjE2ODU3MDIxMzEsImlhdCI6MTY4NTYxNTczMSwianRpIjoiNTQxMzNkODQtMDYyYi00NTUxLTk3ZTgtMzQ3ZTQ1YzMwOGU3In0.VEWEqYCsp7tetDWu1ZaPVW_13ewIoHJwqX7Q_hJWn_F9pUp-92VNbRnEdsPN0e41auIZJe2oithadqPKZvvZhYPWkjucYWXSyHeE32q-sBMlSo_Uf2sqb_bHFKGpZYKQTGmeaEjNs7aPUjApCm6EYxFVoyEGYOtU4t2l9qjC3eSt-3hYR2_FQJMoxvLUt1Nwu19it_8SES--cQ6PwcvoXWnQbBoE8j5wp5sGZmXP__-oWW7xAn6EqteXU9QvaTkE9Nzu2dJCfmpaLi2fBP82qHt6MqPfWZsZJ1gqw9tP8W7yxXimnRmpItZqB_53CdWmSvVUYpXqsBLGHrsweOMqRD-a03IX8aA1zVuFeQ3QsqtJKkp-pz7a9ZsfGemC2veEwxbLzm1QSe2iD1d4Qbjsan-Hdi78Uf1zhTQW1JOPygZPkNihxZ9TtjQvw9k0w0gHgcdhWSa7NUIbhoKGaGnawtqs9HjYLurJDVDvHF-681TBWVa4ipIrRISkZodCAUVUE8XUNQhxys02ObGpxa4O9Gc8JrCnMcSmCO5L2trmvpUVQkdoPLfbqyMBitHTIzt6oQWbnbE4Xp2pwkl0lmfCWq6OK-iZIoMtuaSpKi8lusYZTxZki2EA6OvUv_ibKbxI39VwEstqwOhA06rL60TEBPIKe_Birs44Iwk3ZQIwjjk",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "2017-03-15T15:23:11.001+07:00",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "d849f8-f6c1-11ec-b939-0242ac120002",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"AppToApp\",\n    \"data\": {\n        \"serviceCode\": \"BBLTEST1\",\n        \"billerId\": \"{{billerId-globalnoti-app}}\",\n        \"reference1\": \"{{reference1-globalnoti-app}}\",\n        \"reference2\": \"20231105109980\",\n        \"totalAmount\": \"1995.15\",\n        \"currencyCode\": \"THB\",\n        \"paymentStatus\": \"Success\",\n        \"paymentAccount\": \"xxx-x-x0055-x\",\n        \"paymentDateTime\": \"{{payment-date-time}}\",\n        \"paymentReferenceID\": \"12345A\",\n        \"slipImage\": \"\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00341_12 Send Global Notification failed - invalid slipImage is empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.slipImage\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"AppToApp\",\n    \"data\": {\n        \"serviceCode\": \"BBLTEST1\",\n        \"billerId\": \"{{billerId-globalnoti-app}}\",\n        \"reference1\": \"{{reference1-globalnoti-app}}\",\n        \"reference2\": \"20231105109980\",\n        \"totalAmount\": \"1995.15\",\n        \"currencyCode\": \"THB\",\n        \"paymentStatus\": \"Success\",\n        \"paymentAccount\": \"xxx-x-x0055-x\",\n        \"paymentDateTime\": \"{{payment-date-time}}\",\n        \"paymentReferenceID\": \"12345A\",\n        \"slipImage\": \"\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "type ThaiQR",
					"item": [
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.unset(\"request-ref-globalnoti-thaiqr\");",
											"pm.collectionVariables.unset(\"billerId-globalnoti-thaiqr\");",
											"pm.collectionVariables.unset(\"reference1-globalnoti-thaiqr\");",
											"",
											"const moment = require('moment');",
											"",
											"pm.collectionVariables.set(\"request-ref-globalnoti-thaiqr\", moment().format(\"DDMMyyyyHHmmss\"));",
											"pm.collectionVariables.set(\"billerId-globalnoti-thaiqr\", moment().format(\"DDMMyyyyHHmmss0\"));",
											"pm.collectionVariables.set(\"reference1-globalnoti-thaiqr\", moment().format(\"DDMMyyyyHHmmss01\"));",
											"pm.collectionVariables.set(\"transDate-globalnoti-thaiqr\", moment().format(\"yyyy-MM-DD\"));",
											"pm.collectionVariables.set(\"transTime-globalnoti-thaiqr\", moment().format(\"HH:mm:ss\"));",
											"pm.collectionVariables.set(\"transmit-date-time-globalnoti\", moment().format(\"yyyy-MM-DDTHH:mm:ss.855+07:00\"));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"BBLTEST2\",\n        \"billerId\": \"{{billerId-globalnoti-thaiqr}}\",\n        \"reference1\": \"{{reference1-globalnoti-thaiqr}}\",\n        \"reference2\": \"22555347AB\",\n        \"reference3\": \"20171106151550\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"80\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00344 Send Global Notification - type ThaiQR success",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"000\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Success\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"BBLTEST2\",\n        \"billerId\": \"{{billerId-globalnoti-thaiqr}}\",\n        \"reference1\": \"{{reference1-globalnoti-thaiqr}}\",\n        \"reference2\": \"22555347AB\",\n        \"reference3\": \"20171106151550\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"80\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"\",\n    \"data\": {\n        \"providerId\": \"BBLTEST2\",\n        \"billerId\": \"{{billerId-globalnoti-thaiqr}}\",\n        \"reference1\": \"{{reference1-globalnoti-thaiqr}}\",\n        \"reference2\": \"22555347AB\",\n        \"reference3\": \"20171106151550\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"80\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00344_1 Send Global Notification - type ThaiQR failed - empty type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: type\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"\",\n    \"data\": {\n        \"providerId\": \"BBLTEST2\",\n        \"billerId\": \"{{billerId-globalnoti-thaiqr}}\",\n        \"reference1\": \"{{reference1-globalnoti-thaiqr}}\",\n        \"reference2\": \"22555347AB\",\n        \"reference3\": \"20171106151550\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"80\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"\",\n        \"billerId\": \"{{billerId-globalnoti-thaiqr}}\",\n        \"reference1\": \"{{reference1-globalnoti-thaiqr}}\",\n        \"reference2\": \"22555347AB\",\n        \"reference3\": \"20171106151550\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"80\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00344_2 Send Global Notification - type ThaiQR failed - providerId is empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.providerId\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"\",\n        \"billerId\": \"{{billerId-globalnoti-thaiqr}}\",\n        \"reference1\": \"{{reference1-globalnoti-thaiqr}}\",\n        \"reference2\": \"22555347AB\",\n        \"reference3\": \"20171106151550\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"80\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"1qa2wsaasw3ed4rf5tghy678889900\",\n        \"billerId\": \"{{billerId-globalnoti-thaiqr}}\",\n        \"reference1\": \"{{reference1-globalnoti-thaiqr}}\",\n        \"reference2\": \"22555347AB\",\n        \"reference3\": \"20171106151550\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"80\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00344_2_1 Send Global Notification - type ThaiQR failed - providerId longer than 20",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.providerId\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"1qa2wsaasw3ed4rf5tghy678889900\",\n        \"billerId\": \"{{billerId-globalnoti-thaiqr}}\",\n        \"reference1\": \"{{reference1-globalnoti-thaiqr}}\",\n        \"reference2\": \"22555347AB\",\n        \"reference3\": \"20171106151550\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"80\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"BBLTEST2\",\n        \"billerId\": \"\",\n        \"reference1\": \"{{reference1-globalnoti-thaiqr}}\",\n        \"reference2\": \"22555347AB\",\n        \"reference3\": \"20171106151550\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"80\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00344_3 Send Global Notification - type ThaiQR failed - billerId is empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"BBLTEST2\",\n        \"billerId\": \"\",\n        \"reference1\": \"{{reference1-globalnoti-thaiqr}}\",\n        \"reference2\": \"22555347AB\",\n        \"reference3\": \"20171106151550\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"80\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"BBLTEST2\",\n        \"billerId\": \"BBL1001002003004\",\n        \"reference1\": \"{{reference1-globalnoti-thaiqr}}\",\n        \"reference2\": \"22555347AB\",\n        \"reference3\": \"20171106151550\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"80\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00344_3_1 Send Global Notification - type ThaiQR failed - billerId longer than 15",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"BBLTEST2\",\n        \"billerId\": \"BBL1001002003004\",\n        \"reference1\": \"{{reference1-globalnoti-thaiqr}}\",\n        \"reference2\": \"22555347AB\",\n        \"reference3\": \"20171106151550\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"80\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"BBLTEST2\",\n        \"billerId\": \"{{billerId-globalnoti-thaiqr}}\",\n        \"reference1\": \"\",\n        \"reference2\": \"22555347AB\",\n        \"reference3\": \"20171106151550\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"80\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00344_4 Send Global Notification - type ThaiQR failed - reference1 is empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.reference1\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"BBLTEST2\",\n        \"billerId\": \"{{billerId-globalnoti-thaiqr}}\",\n        \"reference1\": \"\",\n        \"reference2\": \"22555347AB\",\n        \"reference3\": \"20171106151550\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"80\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"BBLTEST2\",\n        \"billerId\": \"{{billerId-globalnoti-thaiqr}}\",\n        \"reference1\": \"202311050010020030123400500102345\",\n        \"reference2\": \"22555347AB\",\n        \"reference3\": \"20171106151550\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"80\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00344_4_1 Send Global Notification - type ThaiQR failed - reference1 longer than 30",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.reference1\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"BBLTEST2\",\n        \"billerId\": \"{{billerId-globalnoti-thaiqr}}\",\n        \"reference1\": \"202311050010020030123400500102345\",\n        \"reference2\": \"22555347AB\",\n        \"reference3\": \"20171106151550\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"80\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"BBLTEST2\",\n        \"billerId\": \"{{billerId-globalnoti-thaiqr}}\",\n        \"reference1\": \"2023Ref-110500100200301\",\n        \"reference2\": \"22555347AB\",\n        \"reference3\": \"20171106151550\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"80\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00344_4_2 Send Global Notification - type ThaiQR failed - reference1 small letters and number",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.reference1\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"BBLTEST2\",\n        \"billerId\": \"{{billerId-globalnoti-thaiqr}}\",\n        \"reference1\": \"2023Ref-110500100200301\",\n        \"reference2\": \"22555347AB\",\n        \"reference3\": \"20171106151550\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"80\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"BBLTEST2\",\n        \"billerId\": \"{{billerId-globalnoti-thaiqr}}\",\n        \"reference1\": \"{{reference1-globalnoti-thaiqr}}\",\n        \"reference2\": \"\",\n        \"reference3\": \"20171106151550\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"80\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00344_5 Send Global Notification - type ThaiQR failed - reference2 is empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.reference2\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"BBLTEST2\",\n        \"billerId\": \"{{billerId-globalnoti-thaiqr}}\",\n        \"reference1\": \"{{reference1-globalnoti-thaiqr}}\",\n        \"reference2\": \"\",\n        \"reference3\": \"20171106151550\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"80\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"BBLTEST2\",\n        \"billerId\": \"{{billerId-globalnoti-thaiqr}}\",\n        \"reference1\": \"{{reference1-globalnoti-thaiqr}}\",\n        \"reference2\": \"2023110512340001000200030004REF2\",\n        \"reference3\": \"20171106151550\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"80\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00344_5_1 Send Global Notification - type ThaiQR failed - reference2 longer than 30",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.reference2\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"BBLTEST2\",\n        \"billerId\": \"{{billerId-globalnoti-thaiqr}}\",\n        \"reference1\": \"{{reference1-globalnoti-thaiqr}}\",\n        \"reference2\": \"2023110512340001000200030004REF2\",\n        \"reference3\": \"20171106151550\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"80\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"BBLTEST2\",\n        \"billerId\": \"{{billerId-globalnoti-thaiqr}}\",\n        \"reference1\": \"{{reference1-globalnoti-thaiqr}}\",\n        \"reference2\": \"2023110512340001Ref\",\n        \"reference3\": \"20171106151550\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"80\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00344_5_2 Send Global Notification - type ThaiQR success - reference2 small letters and number",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.reference2\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"BBLTEST2\",\n        \"billerId\": \"{{billerId-globalnoti-thaiqr}}\",\n        \"reference1\": \"{{reference1-globalnoti-thaiqr}}\",\n        \"reference2\": \"2023110512340001Ref\",\n        \"reference3\": \"20171106151550\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"80\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"BBLTEST2\",\n        \"billerId\": \"{{billerId-globalnoti-thaiqr}}\",\n        \"reference1\": \"{{reference1-globalnoti-thaiqr}}\",\n        \"reference2\": \"20231105REF2\",\n        \"reference3\": \"2017110615155020231105001002003\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"80\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00344_6 Send Global Notification - type ThaiQR failed - reference3 longer than 30",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.reference3\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"BBLTEST2\",\n        \"billerId\": \"{{billerId-globalnoti-thaiqr}}\",\n        \"reference1\": \"{{reference1-globalnoti-thaiqr}}\",\n        \"reference2\": \"20231105REF2\",\n        \"reference3\": \"2017110615155020231105001002003\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"80\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"BBLTEST2\",\n        \"billerId\": \"{{billerId-globalnoti-thaiqr}}\",\n        \"reference1\": \"{{reference1-globalnoti-thaiqr}}\",\n        \"reference2\": \"20231105REF2\",\n        \"reference3\": \"\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"80\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00344_6_1 Send Global Notification - type ThaiQR failed - reference3 is empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.reference3\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"BBLTEST2\",\n        \"billerId\": \"{{billerId-globalnoti-thaiqr}}\",\n        \"reference1\": \"{{reference1-globalnoti-thaiqr}}\",\n        \"reference2\": \"20231105REF2\",\n        \"reference3\": \"\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"80\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"BBLTEST2\",\n        \"billerId\": \"{{billerId-globalnoti-thaiqr}}\",\n        \"reference1\": \"{{reference1-globalnoti-thaiqr}}\",\n        \"reference2\": \"20231105REF2\",\n        \"reference3\": \"20231105REF3\",\n        \"transDate\": \"2023/11/05\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"80\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00344_7 Send Global Notification - type ThaiQR failed - invalid transDate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.transDate\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"BBLTEST2\",\n        \"billerId\": \"{{billerId-globalnoti-thaiqr}}\",\n        \"reference1\": \"{{reference1-globalnoti-thaiqr}}\",\n        \"reference2\": \"20231105REF2\",\n        \"reference3\": \"20231105REF3\",\n        \"transDate\": \"2023/11/05\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"80\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"BBLTEST2\",\n        \"billerId\": \"{{billerId-globalnoti-thaiqr}}\",\n        \"reference1\": \"{{reference1-globalnoti-thaiqr}}\",\n        \"reference2\": \"20231105REF2\",\n        \"reference3\": \"20231105REF3\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"15:21:50T7:00.000\",\n        \"termType\": \"80\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00344_8 Send Global Notification - type ThaiQR failed - invalid transTime",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.transTime\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"BBLTEST2\",\n        \"billerId\": \"{{billerId-globalnoti-thaiqr}}\",\n        \"reference1\": \"{{reference1-globalnoti-thaiqr}}\",\n        \"reference2\": \"20231105REF2\",\n        \"reference3\": \"20231105REF3\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"15:21:50T7:00.000\",\n        \"termType\": \"80\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"BBLTEST2\",\n        \"billerId\": \"{{billerId-globalnoti-thaiqr}}\",\n        \"reference1\": \"{{reference1-globalnoti-thaiqr}}\",\n        \"reference2\": \"20231105REF2\",\n        \"reference3\": \"20231105REF3\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"90\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00344_9 Send Global Notification - type ThaiQR failed - invalid termType not in the list",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.termType\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"BBLTEST2\",\n        \"billerId\": \"{{billerId-globalnoti-thaiqr}}\",\n        \"reference1\": \"{{reference1-globalnoti-thaiqr}}\",\n        \"reference2\": \"20231105REF2\",\n        \"reference3\": \"20231105REF3\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"90\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"BBLTEST2\",\n        \"billerId\": \"{{billerId-globalnoti-thaiqr}}\",\n        \"reference1\": \"{{reference1-globalnoti-thaiqr}}\",\n        \"reference2\": \"20231105REF2\",\n        \"reference3\": \"20231105REF3\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"50\",\n        \"amount\": \"1999\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00344_10 Send Global Notification - type ThaiQR failed - invalid amount",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.amount\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"BBLTEST2\",\n        \"billerId\": \"{{billerId-globalnoti-thaiqr}}\",\n        \"reference1\": \"{{reference1-globalnoti-thaiqr}}\",\n        \"reference2\": \"20231105REF2\",\n        \"reference3\": \"20231105REF3\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"50\",\n        \"amount\": \"1999\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"BBLTEST2\",\n        \"billerId\": \"{{billerId-globalnoti-thaiqr}}\",\n        \"reference1\": \"{{reference1-globalnoti-thaiqr}}\",\n        \"reference2\": \"20231105REF2\",\n        \"reference3\": \"20231105REF3\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"50\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"0019\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00344_11 Send Global Notification - type ThaiQR failed - invalid fromBank longer than 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.fromBank\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"BBLTEST2\",\n        \"billerId\": \"{{billerId-globalnoti-thaiqr}}\",\n        \"reference1\": \"{{reference1-globalnoti-thaiqr}}\",\n        \"reference2\": \"20231105REF2\",\n        \"reference3\": \"20231105REF3\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"50\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"0019\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"BBLTEST2\",\n        \"billerId\": \"{{billerId-globalnoti-thaiqr}}\",\n        \"reference1\": \"{{reference1-globalnoti-thaiqr}}\",\n        \"reference2\": \"20231105REF2\",\n        \"reference3\": \"20231105REF3\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"50\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00344_11 _1 Send Global Notification - type ThaiQR failed - invalid fromBank is empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.fromBank\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"BBLTEST2\",\n        \"billerId\": \"{{billerId-globalnoti-thaiqr}}\",\n        \"reference1\": \"{{reference1-globalnoti-thaiqr}}\",\n        \"reference2\": \"20231105REF2\",\n        \"reference3\": \"20231105REF3\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"50\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"BBLTEST2\",\n        \"billerId\": \"{{billerId-globalnoti-thaiqr}}\",\n        \"reference1\": \"{{reference1-globalnoti-thaiqr}}\",\n        \"reference2\": \"20231105REF2\",\n        \"reference3\": \"20231105REF3\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"50\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"042\",\n        \"fromBranch\": \"0147-0098\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00344_12 Send Global Notification - type ThaiQR failed - invalid fromBranch longer than 6",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.fromBranch\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"BBLTEST2\",\n        \"billerId\": \"{{billerId-globalnoti-thaiqr}}\",\n        \"reference1\": \"{{reference1-globalnoti-thaiqr}}\",\n        \"reference2\": \"20231105REF2\",\n        \"reference3\": \"20231105REF3\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"50\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"042\",\n        \"fromBranch\": \"0147-0098\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"BBLTEST2\",\n        \"billerId\": \"{{billerId-globalnoti-thaiqr}}\",\n        \"reference1\": \"{{reference1-globalnoti-thaiqr}}\",\n        \"reference2\": \"20231105REF2\",\n        \"reference3\": \"20231105REF3\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"50\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"042\",\n        \"fromBranch\": \"\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00344_12_1 Send Global Notification - type ThaiQR failed - invalid fromBranch is empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.fromBranch\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"BBLTEST2\",\n        \"billerId\": \"{{billerId-globalnoti-thaiqr}}\",\n        \"reference1\": \"{{reference1-globalnoti-thaiqr}}\",\n        \"reference2\": \"20231105REF2\",\n        \"reference3\": \"20231105REF3\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"50\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"042\",\n        \"fromBranch\": \"\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"BBLTEST2\",\n        \"billerId\": \"{{billerId-globalnoti-thaiqr}}\",\n        \"reference1\": \"{{reference1-globalnoti-thaiqr}}\",\n        \"reference2\": \"20231105REF2\",\n        \"reference3\": \"20231105REF3\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"50\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"042\",\n        \"fromBranch\": \"01417\",\n        \"fromName\": \"\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00344_13 Send Global Notification - type ThaiQR failed - invalid fromName is empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.fromName\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"BBLTEST2\",\n        \"billerId\": \"{{billerId-globalnoti-thaiqr}}\",\n        \"reference1\": \"{{reference1-globalnoti-thaiqr}}\",\n        \"reference2\": \"20231105REF2\",\n        \"reference3\": \"20231105REF3\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"50\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"042\",\n        \"fromBranch\": \"01417\",\n        \"fromName\": \"\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"BBLTEST2\",\n        \"billerId\": \"{{billerId-globalnoti-thaiqr}}\",\n        \"reference1\": \"{{reference1-globalnoti-thaiqr}}\",\n        \"reference2\": \"20231105REF2\",\n        \"reference3\": \"20231105REF3\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"50\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"042\",\n        \"fromBranch\": \"01417\",\n        \"fromName\": \"QA TEST\",\n        \"bankRef\": \"BBL-TESTthiuujjjnkjei4567899998\",\n        \"approvalCode\": \"EXAMPL\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00344_14 Send Global Notification - type ThaiQR failed - invalid bankRef longer than 25",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.bankRef\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"BBLTEST2\",\n        \"billerId\": \"{{billerId-globalnoti-thaiqr}}\",\n        \"reference1\": \"{{reference1-globalnoti-thaiqr}}\",\n        \"reference2\": \"20231105REF2\",\n        \"reference3\": \"20231105REF3\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"50\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"042\",\n        \"fromBranch\": \"01417\",\n        \"fromName\": \"QA TEST\",\n        \"bankRef\": \"BBL-TESTthiuujjjnkjei4567899998\",\n        \"approvalCode\": \"EXAMPL\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"BBLTEST2\",\n        \"billerId\": \"{{billerId-globalnoti-thaiqr}}\",\n        \"reference1\": \"{{reference1-globalnoti-thaiqr}}\",\n        \"reference2\": \"20231105REF2\",\n        \"reference3\": \"20231105REF3\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"50\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"042\",\n        \"fromBranch\": \"01417\",\n        \"fromName\": \"QA TEST\",\n        \"bankRef\": \"\",\n        \"approvalCode\": \"EXAMPL\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00344_14_1 Send Global Notification - type ThaiQR failed - invalid bankRef is empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.bankRef\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"BBLTEST2\",\n        \"billerId\": \"{{billerId-globalnoti-thaiqr}}\",\n        \"reference1\": \"{{reference1-globalnoti-thaiqr}}\",\n        \"reference2\": \"20231105REF2\",\n        \"reference3\": \"20231105REF3\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"50\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"042\",\n        \"fromBranch\": \"01417\",\n        \"fromName\": \"QA TEST\",\n        \"bankRef\": \"\",\n        \"approvalCode\": \"EXAMPL\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"BBLTEST2\",\n        \"billerId\": \"{{billerId-globalnoti-thaiqr}}\",\n        \"reference1\": \"{{reference1-globalnoti-thaiqr}}\",\n        \"reference2\": \"20231105REF2\",\n        \"reference3\": \"20231105REF3\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"50\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"042\",\n        \"fromBranch\": \"01417\",\n        \"fromName\": \"QA TEST\",\n        \"bankRef\": \"BBL-unit-test\",\n        \"approvalCode\": \"EXAMPLBBL\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00344_15 Send Global Notification - type ThaiQR failed - invalid approvalCode longer than 6",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.approvalCode\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"BBLTEST2\",\n        \"billerId\": \"{{billerId-globalnoti-thaiqr}}\",\n        \"reference1\": \"{{reference1-globalnoti-thaiqr}}\",\n        \"reference2\": \"20231105REF2\",\n        \"reference3\": \"20231105REF3\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"50\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"042\",\n        \"fromBranch\": \"01417\",\n        \"fromName\": \"QA TEST\",\n        \"bankRef\": \"BBL-unit-test\",\n        \"approvalCode\": \"EXAMPLBBL\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"BBLTEST2\",\n        \"billerId\": \"{{billerId-globalnoti-thaiqr}}\",\n        \"reference1\": \"{{reference1-globalnoti-thaiqr}}\",\n        \"reference2\": \"20231105REF2\",\n        \"reference3\": \"20231105REF3\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"50\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"042\",\n        \"fromBranch\": \"01417\",\n        \"fromName\": \"QA TEST\",\n        \"bankRef\": \"BBL-unit-test\",\n        \"approvalCode\": \"\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00344_15_1 Send Global Notification - type ThaiQR failed - invalid approvalCode is empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.approvalCode\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"BBLTEST2\",\n        \"billerId\": \"{{billerId-globalnoti-thaiqr}}\",\n        \"reference1\": \"{{reference1-globalnoti-thaiqr}}\",\n        \"reference2\": \"20231105REF2\",\n        \"reference3\": \"20231105REF3\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"50\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"042\",\n        \"fromBranch\": \"01417\",\n        \"fromName\": \"QA TEST\",\n        \"bankRef\": \"BBL-unit-test\",\n        \"approvalCode\": \"\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"BBLTEST2\",\n        \"billerId\": \"{{billerId-globalnoti-thaiqr}}\",\n        \"reference1\": \"{{reference1-globalnoti-thaiqr}}\",\n        \"reference2\": \"20231105REF2\",\n        \"reference3\": \"20231105REF3\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"50\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"042\",\n        \"fromBranch\": \"01417\",\n        \"fromName\": \"QA TEST\",\n        \"bankRef\": \"BBL-unit-test\",\n        \"approvalCode\": \"EXAMPL\",\n        \"retryFlag\": \"false\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00344_16 Send Global Notification - type ThaiQR failed - invalid retryFlag other than Y or N",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.retryFlag\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"ThaiQR\",\n    \"data\": {\n        \"providerId\": \"BBLTEST2\",\n        \"billerId\": \"{{billerId-globalnoti-thaiqr}}\",\n        \"reference1\": \"{{reference1-globalnoti-thaiqr}}\",\n        \"reference2\": \"20231105REF2\",\n        \"reference3\": \"20231105REF3\",\n        \"transDate\": \"{{transDate-globalnoti-thaiqr}}\",\n        \"transTime\": \"{{transTime-globalnoti-thaiqr}}\",\n        \"termType\": \"50\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"042\",\n        \"fromBranch\": \"01417\",\n        \"fromName\": \"QA TEST\",\n        \"bankRef\": \"BBL-unit-test\",\n        \"approvalCode\": \"EXAMPL\",\n        \"retryFlag\": \"false\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "type SmartBill",
					"item": [
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.unset(\"payeeId-globalnoti-smartbill\");",
											"pm.collectionVariables.unset(\"billerId-globalnoti-smartbill\");",
											"pm.collectionVariables.unset(\"reference1-globalnoti-smartbill\");",
											"",
											"const moment = require('moment');",
											"",
											"pm.collectionVariables.set(\"payeeId-globalnoti-smartbill\", moment().format(\"DDMMyyyyHHmmss\"));",
											"pm.collectionVariables.set(\"billerId-globalnoti-smartbill\", moment().format(\"DDMMyyyyHHmmss0\"));",
											"pm.collectionVariables.set(\"reference1-globalnoti-smartbill\", moment().format(\"DDMMyyyyHHmmss01\"));",
											"pm.collectionVariables.set(\"transDate-globalnoti-smartbill\", moment().format(\"yyyy-MM-DD\"));",
											"pm.collectionVariables.set(\"transTime-globalnoti-smartbill\", moment().format(\"HH:mm:ss\"));",
											"pm.collectionVariables.set(\"transmit-date-time-globalnoti\", moment().format(\"yyyy-MM-DDTHH:mm:ss.855+07:00\"));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"22555347SB\",\n        \"reference3\": \"20231106151550\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref2023110501\",\n        \"channel\": \"AA\",\n        \"termId\": \"010125\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00345 Send Global Notification - type SmartBill success",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"000\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Success\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"22555347SB\",\n        \"reference3\": \"20231106151550\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref2023110501\",\n        \"channel\": \"AA\",\n        \"termId\": \"010125\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"20231105000100231\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"22555347SB\",\n        \"reference3\": \"20231106151550\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref2023110501\",\n        \"channel\": \"AA\",\n        \"termId\": \"010125\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00345_1 Send Global Notification - type SmartBill failed - billerId longer than 15",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\")",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"20231105000100231\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"22555347SB\",\n        \"reference3\": \"20231106151550\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref2023110501\",\n        \"channel\": \"AA\",\n        \"termId\": \"010125\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"22555347SB\",\n        \"reference3\": \"20231106151550\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref2023110501\",\n        \"channel\": \"AA\",\n        \"termId\": \"010125\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00345_1_1 Send Global Notification - type SmartBill failed - billerId is empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\")",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"22555347SB\",\n        \"reference3\": \"20231106151550\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref2023110501\",\n        \"channel\": \"AA\",\n        \"termId\": \"010125\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"\",\n        \"reference2\": \"22555347SB\",\n        \"reference3\": \"20231106151550\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref2023110501\",\n        \"channel\": \"AA\",\n        \"termId\": \"010125\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00345_2 Send Global Notification - type SmartBill failed - reference1 is empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.reference1\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"\",\n        \"reference2\": \"22555347SB\",\n        \"reference3\": \"20231106151550\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref2023110501\",\n        \"channel\": \"AA\",\n        \"termId\": \"010125\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"20231105100100200300400500612345\",\n        \"reference2\": \"22555347SB\",\n        \"reference3\": \"20231106151550\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref2023110501\",\n        \"channel\": \"AA\",\n        \"termId\": \"010125\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00345_2_1 Send Global Notification - type SmartBill failed - reference1 longer than 30",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.reference1\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"20231105100100200300400500612345\",\n        \"reference2\": \"22555347SB\",\n        \"reference3\": \"20231106151550\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref2023110501\",\n        \"channel\": \"AA\",\n        \"termId\": \"010125\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"\",\n        \"reference3\": \"20231106151550\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref2023110501\",\n        \"channel\": \"AA\",\n        \"termId\": \"010125\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00345_3 Send Global Notification - type SmartBill failed - reference2 is empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.reference2\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"\",\n        \"reference3\": \"20231106151550\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref2023110501\",\n        \"channel\": \"AA\",\n        \"termId\": \"010125\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"20231105001002000300040005000123\",\n        \"reference3\": \"20231106151550\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref2023110501\",\n        \"channel\": \"AA\",\n        \"termId\": \"010125\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00345_3_1 Send Global Notification - type SmartBill failed - reference2 longer than 30",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.reference2\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"20231105001002000300040005000123\",\n        \"reference3\": \"20231106151550\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref2023110501\",\n        \"channel\": \"AA\",\n        \"termId\": \"010125\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref2023110501\",\n        \"channel\": \"AA\",\n        \"termId\": \"010125\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00345_4 Send Global Notification - type SmartBill failed - reference3 is empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.reference3\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref2023110501\",\n        \"channel\": \"AA\",\n        \"termId\": \"010125\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"REF20231050010010020030004506789\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref2023110501\",\n        \"channel\": \"AA\",\n        \"termId\": \"010125\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00345_4_1 Send Global Notification - type SmartBill success - reference3 longer than 30",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.reference3\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"REF20231050010010020030004506789\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref2023110501\",\n        \"channel\": \"AA\",\n        \"termId\": \"010125\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"202311050010R3\",\n        \"payeeId\": \"\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref2023110501\",\n        \"channel\": \"AA\",\n        \"termId\": \"010125\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00345_5 Send Global Notification - type SmartBill failed - payeeId is empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.payeeId\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"202311050010R3\",\n        \"payeeId\": \"\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref2023110501\",\n        \"channel\": \"AA\",\n        \"termId\": \"010125\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"202311050010R3\",\n        \"payeeId\": \"2023110600010023\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref2023110501\",\n        \"channel\": \"AA\",\n        \"termId\": \"010125\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00345_5_1 Send Global Notification - type SmartBill failed - payeeId longer than 15",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.payeeId\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"202311050010R3\",\n        \"payeeId\": \"2023110600010023\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref2023110501\",\n        \"channel\": \"AA\",\n        \"termId\": \"010125\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"202311050010R3\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"2023/11/06\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref2023110501\",\n        \"channel\": \"AA\",\n        \"termId\": \"010125\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00345_6 Send Global Notification - type SmartBill failed - invalid transDate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.transDate\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"202311050010R3\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"2023/11/06\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref2023110501\",\n        \"channel\": \"AA\",\n        \"termId\": \"010125\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"202311050010R3\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"08.35.07\",\n        \"transRef\": \"Ref2023110501\",\n        \"channel\": \"AA\",\n        \"termId\": \"010125\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00345_7 Send Global Notification - type SmartBill failed - invalid transTime",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.transTime\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"202311050010R3\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"08.35.07\",\n        \"transRef\": \"Ref2023110501\",\n        \"channel\": \"AA\",\n        \"termId\": \"010125\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"202311050010R3\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"\",\n        \"channel\": \"AA\",\n        \"termId\": \"010125\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00345_8 Send Global Notification - type SmartBill failed - transRef is empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.transRef\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"202311050010R3\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"\",\n        \"channel\": \"AA\",\n        \"termId\": \"010125\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"202311050010R3\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref129001923889100911\",\n        \"channel\": \"AA\",\n        \"termId\": \"010125\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00345_8_1 Send Global Notification - type SmartBill failed - transRef longer than 20",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.transRef\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"202311050010R3\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref129001923889100911\",\n        \"channel\": \"AA\",\n        \"termId\": \"010125\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"202311050010R3\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref1290019238891001\",\n        \"channel\": \"\",\n        \"termId\": \"010125\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00345_9 Send Global Notification - type SmartBill failed - channel is empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.channel\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"202311050010R3\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref1290019238891001\",\n        \"channel\": \"\",\n        \"termId\": \"010125\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"202311050010R3\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref1290019238891001\",\n        \"channel\": \"BBL\",\n        \"termId\": \"010125\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00345_9_1 Send Global Notification - type SmartBill failed - channel longer than 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.channel\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"202311050010R3\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref1290019238891001\",\n        \"channel\": \"BBL\",\n        \"termId\": \"010125\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"202311050010R3\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref1290019238891001\",\n        \"channel\": \"AA\",\n        \"termId\": \"\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00345_10 Send Global Notification - type SmartBill failed - termId is empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.termId\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"202311050010R3\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref1290019238891001\",\n        \"channel\": \"AA\",\n        \"termId\": \"\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"202311050010R3\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref1290019238891001\",\n        \"channel\": \"AA\",\n        \"termId\": \"2023110600100ref23456712\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00345_10_1 Send Global Notification - type SmartBill failed - termId longer than 20",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.termId\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"202311050010R3\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref1290019238891001\",\n        \"channel\": \"AA\",\n        \"termId\": \"2023110600100ref23456712\",\n        \"amount\": \"1999.00\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"202311050010R3\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref1290019238891001\",\n        \"channel\": \"AA\",\n        \"termId\": \"20231106001001\",\n        \"amount\": \"1149\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00345_11 Send Global Notification - type SmartBill failed - invalid amount not decimal",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.amount\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"202311050010R3\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref1290019238891001\",\n        \"channel\": \"AA\",\n        \"termId\": \"20231106001001\",\n        \"amount\": \"1149\",\n        \"fromBank\": \"002\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"202311050010R3\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref1290019238891001\",\n        \"channel\": \"AA\",\n        \"termId\": \"20231106001001\",\n        \"amount\": \"1149.25\",\n        \"fromBank\": \"\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00345_12 Send Global Notification - type SmartBill failed - fromBank is empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.fromBank\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"202311050010R3\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref1290019238891001\",\n        \"channel\": \"AA\",\n        \"termId\": \"20231106001001\",\n        \"amount\": \"1149.25\",\n        \"fromBank\": \"\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"202311050010R3\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref1290019238891001\",\n        \"channel\": \"AA\",\n        \"termId\": \"20231106001001\",\n        \"amount\": \"1149.25\",\n        \"fromBank\": \"SCBX\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00345_12_1 Send Global Notification - type SmartBill failed - fromBank longer than 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.fromBank\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"202311050010R3\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref1290019238891001\",\n        \"channel\": \"AA\",\n        \"termId\": \"20231106001001\",\n        \"amount\": \"1149.25\",\n        \"fromBank\": \"SCBX\",\n        \"fromBranch\": \"0147\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"202311050010R3\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref1290019238891001\",\n        \"channel\": \"AA\",\n        \"termId\": \"20231106001001\",\n        \"amount\": \"1149.25\",\n        \"fromBank\": \"SCB\",\n        \"fromBranch\": \"\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00345_13 Send Global Notification - type SmartBill failed - fromBranch is empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.fromBranch\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"202311050010R3\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref1290019238891001\",\n        \"channel\": \"AA\",\n        \"termId\": \"20231106001001\",\n        \"amount\": \"1149.25\",\n        \"fromBank\": \"SCB\",\n        \"fromBranch\": \"\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"202311050010R3\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref1290019238891001\",\n        \"channel\": \"AA\",\n        \"termId\": \"20231106001001\",\n        \"amount\": \"1149.25\",\n        \"fromBank\": \"SCB\",\n        \"fromBranch\": \"BBL-01234\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00345_13_1 Send Global Notification - type SmartBill failed - fromBranch longer than 6",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.fromBranch\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"202311050010R3\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref1290019238891001\",\n        \"channel\": \"AA\",\n        \"termId\": \"20231106001001\",\n        \"amount\": \"1149.25\",\n        \"fromBank\": \"SCB\",\n        \"fromBranch\": \"BBL-01234\",\n        \"fromName\": \"ABCD\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"202311050010R3\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref1290019238891001\",\n        \"channel\": \"AA\",\n        \"termId\": \"20231106001001\",\n        \"amount\": \"1149.25\",\n        \"fromBank\": \"SCB\",\n        \"fromBranch\": \"0417\",\n        \"fromName\": \"\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00345_14 Send Global Notification - type SmartBill failed - fromName is empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.fromName\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"202311050010R3\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref1290019238891001\",\n        \"channel\": \"AA\",\n        \"termId\": \"20231106001001\",\n        \"amount\": \"1149.25\",\n        \"fromBank\": \"SCB\",\n        \"fromBranch\": \"0417\",\n        \"fromName\": \"\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"202311050010R3\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref1290019238891001\",\n        \"channel\": \"AA\",\n        \"termId\": \"20231106001001\",\n        \"amount\": \"1149.25\",\n        \"fromBank\": \"SCB\",\n        \"fromBranch\": \"0417\",\n        \"fromName\": \"20231106001002003004005006123 Test-45678900200400500600600010030004404444\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00345_14 _1 Send Global Notification - type SmartBill failed - fromName longer than 50",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.fromName\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"202311050010R3\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref1290019238891001\",\n        \"channel\": \"AA\",\n        \"termId\": \"20231106001001\",\n        \"amount\": \"1149.25\",\n        \"fromBank\": \"SCB\",\n        \"fromBranch\": \"0417\",\n        \"fromName\": \"20231106001002003004005006123 Test-45678900200400500600600010030004404444\",\n        \"bankRef\": \"BBL\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"202311050010R3\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref1290019238891001\",\n        \"channel\": \"AA\",\n        \"termId\": \"20231106001001\",\n        \"amount\": \"1149.25\",\n        \"fromBank\": \"SCB\",\n        \"fromBranch\": \"0417\",\n        \"fromName\": \"Test-45678900200400500600600010030004404444\",\n        \"bankRef\": \"\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00345_15 Send Global Notification - type SmartBill failed - bankRef is empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.bankRef\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"202311050010R3\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref1290019238891001\",\n        \"channel\": \"AA\",\n        \"termId\": \"20231106001001\",\n        \"amount\": \"1149.25\",\n        \"fromBank\": \"SCB\",\n        \"fromBranch\": \"0417\",\n        \"fromName\": \"Test-45678900200400500600600010030004404444\",\n        \"bankRef\": \"\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"202311050010R3\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref1290019238891001\",\n        \"channel\": \"AA\",\n        \"termId\": \"20231106001001\",\n        \"amount\": \"1149.25\",\n        \"fromBank\": \"SCB\",\n        \"fromBranch\": \"0417\",\n        \"fromName\": \"Test-45678900200400500600600010030004404444\",\n        \"bankRef\": \"Ref00112345678900010023456\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00345_15_1 Send Global Notification - type SmartBill failed - bankRef longer than 25",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.bankRef\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"202311050010R3\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref1290019238891001\",\n        \"channel\": \"AA\",\n        \"termId\": \"20231106001001\",\n        \"amount\": \"1149.25\",\n        \"fromBank\": \"SCB\",\n        \"fromBranch\": \"0417\",\n        \"fromName\": \"Test-45678900200400500600600010030004404444\",\n        \"bankRef\": \"Ref00112345678900010023456\",\n        \"approvalCode\": \"EXAMPL\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"202311050010R3\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref1290019238891001\",\n        \"channel\": \"AA\",\n        \"termId\": \"20231106001001\",\n        \"amount\": \"1149.25\",\n        \"fromBank\": \"SCB\",\n        \"fromBranch\": \"0417\",\n        \"fromName\": \"Test-45678900200400500600600010030004404444\",\n        \"bankRef\": \"Ref001123456789000100234\",\n        \"approvalCode\": \"\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00345_16 Send Global Notification - type SmartBill failed - approvalCode is empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.approvalCode\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"202311050010R3\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref1290019238891001\",\n        \"channel\": \"AA\",\n        \"termId\": \"20231106001001\",\n        \"amount\": \"1149.25\",\n        \"fromBank\": \"SCB\",\n        \"fromBranch\": \"0417\",\n        \"fromName\": \"Test-45678900200400500600600010030004404444\",\n        \"bankRef\": \"Ref001123456789000100234\",\n        \"approvalCode\": \"\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"202311050010R3\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref1290019238891001\",\n        \"channel\": \"AA\",\n        \"termId\": \"20231106001001\",\n        \"amount\": \"1149.25\",\n        \"fromBank\": \"SCB\",\n        \"fromBranch\": \"0417\",\n        \"fromName\": \"Test-45678900200400500600600010030004404444\",\n        \"bankRef\": \"Ref001123456789000100234\",\n        \"approvalCode\": \"APPBBLKT\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00345_16_1 Send Global Notification - type SmartBill failed - approvalCode longer than 6",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.approvalCode\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"202311050010R3\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref1290019238891001\",\n        \"channel\": \"AA\",\n        \"termId\": \"20231106001001\",\n        \"amount\": \"1149.25\",\n        \"fromBank\": \"SCB\",\n        \"fromBranch\": \"0417\",\n        \"fromName\": \"Test-45678900200400500600600010030004404444\",\n        \"bankRef\": \"Ref001123456789000100234\",\n        \"approvalCode\": \"APPBBLKT\",\n        \"txnType\": \"C\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"202311050010R3\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref1290019238891001\",\n        \"channel\": \"AA\",\n        \"termId\": \"20231106001001\",\n        \"amount\": \"1149.25\",\n        \"fromBank\": \"SCB\",\n        \"fromBranch\": \"0417\",\n        \"fromName\": \"Test-45678900200400500600600010030004404444\",\n        \"bankRef\": \"Ref001123456789000100234\",\n        \"approvalCode\": \"BBLT01\",\n        \"txnType\": \"A\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00345_17 Send Global Notification - type SmartBill failed - txnType other than C and D",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.txnType\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"202311050010R3\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref1290019238891001\",\n        \"channel\": \"AA\",\n        \"termId\": \"20231106001001\",\n        \"amount\": \"1149.25\",\n        \"fromBank\": \"SCB\",\n        \"fromBranch\": \"0417\",\n        \"fromName\": \"Test-45678900200400500600600010030004404444\",\n        \"bankRef\": \"Ref001123456789000100234\",\n        \"approvalCode\": \"BBLT01\",\n        \"txnType\": \"A\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"202311050010R3\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref1290019238891001\",\n        \"channel\": \"AA\",\n        \"termId\": \"20231106001001\",\n        \"amount\": \"1149.25\",\n        \"fromBank\": \"SCB\",\n        \"fromBranch\": \"0417\",\n        \"fromName\": \"Test-45678900200400500600600010030004404444\",\n        \"bankRef\": \"Ref001123456789000100234\",\n        \"approvalCode\": \"BBLT01\",\n        \"txnType\": \"\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00345_17_1 Send Global Notification - type SmartBill failed - txnType is empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.txnType\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"202311050010R3\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref1290019238891001\",\n        \"channel\": \"AA\",\n        \"termId\": \"20231106001001\",\n        \"amount\": \"1149.25\",\n        \"fromBank\": \"SCB\",\n        \"fromBranch\": \"0417\",\n        \"fromName\": \"Test-45678900200400500600600010030004404444\",\n        \"bankRef\": \"Ref001123456789000100234\",\n        \"approvalCode\": \"BBLT01\",\n        \"txnType\": \"\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"202311050010R3\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref1290019238891001\",\n        \"channel\": \"AA\",\n        \"termId\": \"20231106001001\",\n        \"amount\": \"1149.25\",\n        \"fromBank\": \"SCB\",\n        \"fromBranch\": \"0417\",\n        \"fromName\": \"Test-45678900200400500600600010030004404444\",\n        \"bankRef\": \"Ref001123456789000100234\",\n        \"approvalCode\": \"BBLT01\",\n        \"txnType\": \"CD\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00345_17_2 Send Global Notification - type SmartBill failed - txnType longer than 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.txnType\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"202311050010R3\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref1290019238891001\",\n        \"channel\": \"AA\",\n        \"termId\": \"20231106001001\",\n        \"amount\": \"1149.25\",\n        \"fromBank\": \"SCB\",\n        \"fromBranch\": \"0417\",\n        \"fromName\": \"Test-45678900200400500600600010030004404444\",\n        \"bankRef\": \"Ref001123456789000100234\",\n        \"approvalCode\": \"BBLT01\",\n        \"txnType\": \"CD\",\n        \"retryFlag\": \"Y\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"202311050010R3\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref1290019238891001\",\n        \"channel\": \"AA\",\n        \"termId\": \"20231106001001\",\n        \"amount\": \"1149.25\",\n        \"fromBank\": \"SCB\",\n        \"fromBranch\": \"0417\",\n        \"fromName\": \"Test-45678900200400500600600010030004404444\",\n        \"bankRef\": \"Ref001123456789000100234\",\n        \"approvalCode\": \"BBLT01\",\n        \"txnType\": \"D\",\n        \"retryFlag\": \"true\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00345_18 Send Global Notification - type SmartBill failed - retryFlag other than Y or N",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.retryFlag\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"202311050010R3\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref1290019238891001\",\n        \"channel\": \"AA\",\n        \"termId\": \"20231106001001\",\n        \"amount\": \"1149.25\",\n        \"fromBank\": \"SCB\",\n        \"fromBranch\": \"0417\",\n        \"fromName\": \"Test-45678900200400500600600010030004404444\",\n        \"bankRef\": \"Ref001123456789000100234\",\n        \"approvalCode\": \"BBLT01\",\n        \"txnType\": \"D\",\n        \"retryFlag\": \"true\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[JWTGen] BBL signature",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.collectionVariables.set(\"bbl_signature\", response.signature);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Transmit-Date-Time",
										"value": "{{transmit-date-time-globalnoti}}",
										"type": "text"
									},
									{
										"key": "Request-Ref",
										"value": "{{request-ref-globalnoti-thaiqr}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"202311050010R3\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref1290019238891001\",\n        \"channel\": \"AA\",\n        \"termId\": \"20231106001001\",\n        \"amount\": \"1149.25\",\n        \"fromBank\": \"SCB\",\n        \"fromBranch\": \"0417\",\n        \"fromName\": \"Test-45678900200400500600600010030004404444\",\n        \"bankRef\": \"Ref001123456789000100234\",\n        \"approvalCode\": \"BBLT01\",\n        \"txnType\": \"D\",\n        \"retryFlag\": \"\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/jwt/bbl",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"jwt",
										"bbl"
									]
								}
							},
							"response": []
						},
						{
							"name": "TC_00345_18_1 Send Global Notification - type SmartBill failed - retryFlag is empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response body is JSON\", function () {",
											"    pm.response.to.be.json;",
											"",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"    pm.test(\"Body contains string\",() => {",
											"        let jsonData = pm.response.json()",
											"        pm.expect(jsonData.responseCode).to.include(\"211\");",
											"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
											"        pm.expect(jsonData.remark).to.include(\"Field: data.retryFlag\");",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{partner-server-basic-password}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{partner-server-basic-username}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Signature",
										"value": "{{bbl_signature}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic dGhpc2lzdXNlcm5hbWU6dGhpc2lzcGFzc3dvcmQ=",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"SmartBill\",\n    \"data\": {\n        \"billerId\": \"{{billerId-globalnoti-smartbill}}\",\n        \"reference1\": \"{{reference1-globalnoti-smartbill}}\",\n        \"reference2\": \"202311050010R\",\n        \"reference3\": \"202311050010R3\",\n        \"payeeId\": \"{{payeeId-globalnoti-smartbill}}\",\n        \"transDate\": \"{{transDate-globalnoti-smartbill}}\",\n        \"transTime\": \"{{transTime-globalnoti-smartbill}}\",\n        \"transRef\": \"Ref1290019238891001\",\n        \"channel\": \"AA\",\n        \"termId\": \"20231106001001\",\n        \"amount\": \"1149.25\",\n        \"fromBank\": \"SCB\",\n        \"fromBranch\": \"0417\",\n        \"fromName\": \"Test-45678900200400500600600010030004404444\",\n        \"bankRef\": \"Ref001123456789000100234\",\n        \"approvalCode\": \"BBLT01\",\n        \"txnType\": \"D\",\n        \"retryFlag\": \"\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api-host}}/notification/v1",
									"host": [
										"{{api-host}}"
									],
									"path": [
										"notification",
										"v1"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "7.QR Inquiry (wave 1.0)",
			"item": [
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.unset(\"request-ref\");",
									"//pm.collectionVariables.unset(\"reference1\");",
									"//pm.collectionVariables.unset(\"billerId\");",
									"",
									"const moment = require('moment');",
									"",
									"pm.collectionVariables.set(\"request-ref\", moment().format(\"yyyyMMDDHHmmss\"));",
									"//pm.collectionVariables.set(\"reference1\", moment().format(\"yyyyMMDDHHmmss01\"));",
									"//pm.collectionVariables.set(\"billerId\", \"010552702294601\");",
									"pm.collectionVariables.set(\"requestDate\", moment().format(\"yyyy-MM-DD\"));",
									"pm.collectionVariables.set(\"requestTime\", moment().format(\"HH:mm:ss\"));",
									"pm.collectionVariables.set(\"transmit-date-time\", moment().format(\"yyyy-MM-DDTHH:mm:ss.855+07:00\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"    let response = pm.response.json();",
									"    pm.collectionVariables.set(\"partner_signature\", response.signature);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"123456789012301\",\n    \"transDate\": \"2024-02-22\",\n    \"transTime\": \"15:23:11\",\n    \"amount\": \"500.00\",\n    \"reference1\": \"002123456789002\",\n    \"reference2\": \"123456\",\n    \"reference3\": \"123456\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "[ThaiQR] qr-inquiry success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"000\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"success\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"123456789012301\",\n    \"transDate\": \"2024-02-22\",\n    \"transTime\": \"15:23:11\",\n    \"amount\": \"500.00\",\n    \"reference1\": \"002123456789002\",\n    \"reference2\": \"123456\",\n    \"reference3\": \"123456\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/qr-inquiry",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"qr-inquiry"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.unset(\"request-ref\");",
									"//pm.collectionVariables.unset(\"reference1\");",
									"//pm.collectionVariables.unset(\"billerId\");",
									"",
									"const moment = require('moment');",
									"",
									"pm.collectionVariables.set(\"request-ref\", moment().format(\"yyyyMMDDHHmmss\"));",
									"//pm.collectionVariables.set(\"reference1\", moment().format(\"yyyyMMDDHHmmss01\"));",
									"//pm.collectionVariables.set(\"billerId\", \"010552702294601\");",
									"pm.collectionVariables.set(\"requestDate\", moment().format(\"yyyy-MM-DD\"));",
									"pm.collectionVariables.set(\"requestTime\", moment().format(\"HH:mm:ss\"));",
									"pm.collectionVariables.set(\"transmit-date-time\", moment().format(\"yyyy-MM-DDTHH:mm:ss.855+07:00\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"    let response = pm.response.json();",
									"    pm.collectionVariables.set(\"partner_signature\", response.signature);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"amount\": \"09.01\",\n    \"reference1\": \"PARTNERREF123\",\n    \"reference2\":\"PARTNERREF2\",\n    \"reference3\":\"PARTNERREF3\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "[ThaiQR] qr-inquiry failed missing billerId attribute",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 403\", function () {",
									"        pm.response.to.have.status(403);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"052\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Unknown Biller ID\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transDate\": \"{{requestDate}}\",\n    \"amount\": \"09.01\",\n    \"reference1\": \"PARTNERREF123\",\n    \"reference2\":\"PARTNERREF2\",\n    \"reference3\":\"PARTNERREF3\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/qr-inquiry",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"qr-inquiry"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.unset(\"request-ref\");",
									"//pm.collectionVariables.unset(\"reference1\");",
									"//pm.collectionVariables.unset(\"billerId\");",
									"",
									"const moment = require('moment');",
									"",
									"pm.collectionVariables.set(\"request-ref\", moment().format(\"yyyyMMDDHHmmss\"));",
									"//pm.collectionVariables.set(\"reference1\", moment().format(\"yyyyMMDDHHmmss01\"));",
									"//pm.collectionVariables.set(\"billerId\", \"010552702294601\");",
									"pm.collectionVariables.set(\"requestDate\", moment().format(\"yyyy-MM-DD\"));",
									"pm.collectionVariables.set(\"requestTime\", moment().format(\"HH:mm:ss\"));",
									"pm.collectionVariables.set(\"transmit-date-time\", moment().format(\"yyyy-MM-DDTHH:mm:ss.855+07:00\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"    let response = pm.response.json();",
									"    pm.collectionVariables.set(\"partner_signature\", response.signature);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"\",\n    \"transDate\": \"{{requestDate}}\",\n    \"amount\": \"09.01\",\n    \"reference1\": \"PARTNERREF123\",\n    \"reference2\":\"PARTNERREF2\",\n    \"reference3\":\"PARTNERREF3\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "[ThaiQR] qr-inquiry failed empty billerId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 403\", function () {",
									"        pm.response.to.have.status(403);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"052\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Unknown Biller ID\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"\",\n    \"transDate\": \"{{requestDate}}\",\n    \"amount\": \"09.01\",\n    \"reference1\": \"PARTNERREF123\",\n    \"reference2\":\"PARTNERREF2\",\n    \"reference3\":\"PARTNERREF3\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/qr-inquiry",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"qr-inquiry"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.unset(\"request-ref\");",
									"//pm.collectionVariables.unset(\"reference1\");",
									"//pm.collectionVariables.unset(\"billerId\");",
									"",
									"const moment = require('moment');",
									"",
									"pm.collectionVariables.set(\"request-ref\", moment().format(\"yyyyMMDDHHmmss\"));",
									"//pm.collectionVariables.set(\"reference1\", moment().format(\"yyyyMMDDHHmmss01\"));",
									"//pm.collectionVariables.set(\"billerId\", \"010552702294601\");",
									"pm.collectionVariables.set(\"requestDate\", moment().format(\"yyyy-MM-DD\"));",
									"pm.collectionVariables.set(\"requestTime\", moment().format(\"HH:mm:ss\"));",
									"pm.collectionVariables.set(\"transmit-date-time\", moment().format(\"yyyy-MM-DDTHH:mm:ss.855+07:00\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"    let response = pm.response.json();",
									"    pm.collectionVariables.set(\"partner_signature\", response.signature);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"1000202401189012\",\n    \"transDate\": \"{{requestDate}}\",\n    \"amount\": \"09.01\",\n    \"reference1\": \"PARTNERREF123\",\n    \"reference2\":\"PARTNERREF2\",\n    \"reference3\":\"PARTNERREF3\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "[ThaiQR] qr-inquiry failed billerId > 15",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 403\", function () {",
									"        pm.response.to.have.status(403);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"052\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Unknown Biller ID\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"1000202401189012\",\n    \"transDate\": \"{{requestDate}}\",\n    \"amount\": \"09.01\",\n    \"reference1\": \"PARTNERREF123\",\n    \"reference2\":\"PARTNERREF2\",\n    \"reference3\":\"PARTNERREF3\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/qr-inquiry",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"qr-inquiry"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.unset(\"request-ref\");",
									"//pm.collectionVariables.unset(\"reference1\");",
									"//pm.collectionVariables.unset(\"billerId\");",
									"",
									"const moment = require('moment');",
									"",
									"pm.collectionVariables.set(\"request-ref\", moment().format(\"yyyyMMDDHHmmss\"));",
									"//pm.collectionVariables.set(\"reference1\", moment().format(\"yyyyMMDDHHmmss01\"));",
									"//pm.collectionVariables.set(\"billerId\", \"010552702294601\");",
									"pm.collectionVariables.set(\"requestDate\", moment().format(\"yyyy-MM-DD\"));",
									"pm.collectionVariables.set(\"requestTime\", moment().format(\"HH:mm:ss\"));",
									"pm.collectionVariables.set(\"transmit-date-time\", moment().format(\"yyyy-MM-DDTHH:mm:ss.855+07:00\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"    let response = pm.response.json();",
									"    pm.collectionVariables.set(\"partner_signature\", response.signature);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"010753600037453\",\n    \"transDate\": \"{{requestDate}}\",\n    \"amount\": \"09.01\",\n    \"reference1\": \"PARTNERREF123\",\n    \"reference2\":\"PARTNERREF2\",\n    \"reference3\":\"PARTNERREF3\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "[ThaiQR] qr-inquiry failed invalid billerId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 403\", function () {",
									"        pm.response.to.have.status(403);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"052\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Unknown Biller ID\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"010753600037453\",\n    \"transDate\": \"{{requestDate}}\",\n    \"amount\": \"09.01\",\n    \"reference1\": \"PARTNERREF123\",\n    \"reference2\":\"PARTNERREF2\",\n    \"reference3\":\"PARTNERREF3\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/qr-inquiry",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"qr-inquiry"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.unset(\"request-ref\");",
									"//pm.collectionVariables.unset(\"reference1\");",
									"//pm.collectionVariables.unset(\"billerId\");",
									"",
									"const moment = require('moment');",
									"",
									"pm.collectionVariables.set(\"request-ref\", moment().format(\"yyyyMMDDHHmmss\"));",
									"//pm.collectionVariables.set(\"reference1\", moment().format(\"yyyyMMDDHHmmss01\"));",
									"//pm.collectionVariables.set(\"billerId\", \"010552702294601\");",
									"pm.collectionVariables.set(\"requestDate\", moment().format(\"yyyy-MM-DD\"));",
									"pm.collectionVariables.set(\"requestTime\", moment().format(\"HH:mm:ss\"));",
									"pm.collectionVariables.set(\"transmit-date-time\", moment().format(\"yyyy-MM-DDTHH:mm:ss.855+07:00\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"    let response = pm.response.json();",
									"    pm.collectionVariables.set(\"partner_signature\", response.signature);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"123456789012301\",\n    \"transDate\": \"{{requestDate}}\",\n    \"amount\": \"09.01\",\n    \"reference1\": \"100020240124PARTNERREF123100-111\",\n    \"reference2\":\"PARTNERREF2\",\n    \"reference3\":\"PARTNERREF3\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "[ThaiQR] qr-inquiry success invalid reference1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"123456789012301\",\n    \"transDate\": \"{{requestDate}}\",\n    \"amount\": \"09.01\",\n    \"reference1\": \"100020240124PARTNERREF123100-111\",\n    \"reference2\":\"PARTNERREF2\",\n    \"reference3\":\"PARTNERREF3\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/qr-inquiry",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"qr-inquiry"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.unset(\"request-ref\");",
									"//pm.collectionVariables.unset(\"reference1\");",
									"//pm.collectionVariables.unset(\"billerId\");",
									"",
									"const moment = require('moment');",
									"",
									"pm.collectionVariables.set(\"request-ref\", moment().format(\"yyyyMMDDHHmmss\"));",
									"//pm.collectionVariables.set(\"reference1\", moment().format(\"yyyyMMDDHHmmss01\"));",
									"//pm.collectionVariables.set(\"billerId\", \"010552702294601\");",
									"pm.collectionVariables.set(\"requestDate\", moment().format(\"yyyy-MM-DD\"));",
									"pm.collectionVariables.set(\"requestTime\", moment().format(\"HH:mm:ss\"));",
									"pm.collectionVariables.set(\"transmit-date-time\", moment().format(\"yyyy-MM-DDTHH:mm:ss.855+07:00\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"    let response = pm.response.json();",
									"    pm.collectionVariables.set(\"partner_signature\", response.signature);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"{{billerId-other}}\",\n    \"transDate\": \"{{requestDate}}\",\n    \"amount\": \"09.01\",\n    \"reference1\": \"PARTNERREF123\",\n    \"reference2\":\"PARTNERREF2\",\n    \"reference3\":\"PARTNERREF3\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "[ThaiQR] qr-inquiry success invalid format signature",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"    "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}-123Ueqa230",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"{{billerId-other}}\",\n    \"transDate\": \"{{requestDate}}\",\n    \"amount\": \"09.01\",\n    \"reference1\": \"PARTNERREF123\",\n    \"reference2\":\"PARTNERREF2\",\n    \"reference3\":\"PARTNERREF3\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/qr-inquiry",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"qr-inquiry"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.unset(\"request-ref\");",
									"//pm.collectionVariables.unset(\"reference1\");",
									"//pm.collectionVariables.unset(\"billerId\");",
									"",
									"const moment = require('moment');",
									"",
									"pm.collectionVariables.set(\"request-ref\", moment().format(\"yyyyMMDDHHmmss\"));",
									"//pm.collectionVariables.set(\"reference1\", moment().format(\"yyyyMMDDHHmmss01\"));",
									"//pm.collectionVariables.set(\"billerId\", \"010552702294601\");",
									"pm.collectionVariables.set(\"requestDate\", moment().format(\"yyyy-MM-DD\"));",
									"pm.collectionVariables.set(\"requestTime\", moment().format(\"HH:mm:ss\"));",
									"pm.collectionVariables.set(\"transmit-date-time\", moment().format(\"yyyy-MM-DDTHH:mm:ss.855+07:00\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"    let response = pm.response.json();",
									"    pm.collectionVariables.set(\"partner_signature\", response.signature);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"123456789012301\",\n    \"transDate\": \"{{requestDate}}\",\n    \"amount\": \"09.01\",\n    \"reference1\": \"PARTNERREF123\",\n    \"reference2\":\"PARTNERREF2\",\n    \"reference3\":\"PARTNERREF3\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "[ThaiQR] qr-inquiry success empty signature",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid format Signature\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"123456789012301\",\n    \"transDate\": \"{{requestDate}}\",\n    \"amount\": \"09.01\",\n    \"reference1\": \"PARTNERREF123\",\n    \"reference2\":\"PARTNERREF2\",\n    \"reference3\":\"PARTNERREF3\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/qr-inquiry",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"qr-inquiry"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "7.Pull Payment",
			"item": [
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.unset(\"request-ref\");",
									"pm.collectionVariables.unset(\"reference1\");",
									"",
									"const moment = require('moment');",
									"",
									"pm.collectionVariables.set(\"request-ref\", moment().format(\"yyyyMMDDHHmmss\"));",
									"pm.collectionVariables.set(\"reference1\", moment().format(\"yyyyMMDDHHmmss01\"));",
									"pm.collectionVariables.set(\"requestDate\", moment().format(\"yyyy-MM-DD\"));",
									"pm.collectionVariables.set(\"requestTime\", moment().format(\"HH:mm:ss\"));",
									"pm.collectionVariables.set(\"transmit-date-time\", moment().format(\"yyyy-MM-DDTHH:mm:ss.855+07:00\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"123456789012301\",\n    \"destBank\": \"098\",\n    \"transRef\": \"325012011110IMF2063A57AB\",\n    \"reference1\": \"1112221112\",\n    \"reference2\": \"0011\",\n    \"reference3\": \"0012\",\n    \"amount\": \"1.60\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200601 pull-payment successfully",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"Schema is valid\",() => {",
									"        const schema = {",
									"            type: 'object',",
									"            properties: {",
									"                status: {",
									"                    code: {",
									"                        type: 'string'",
									"                    },",
									"                    message: {",
									"                    type: 'string'",
									"                    }",
									"                },",
									"                data: {",
									"                        transRef: {",
									"                            type: 'string'",
									"                        },",
									"                        sendingBank: {",
									"                            type: 'string'",
									"                        },",
									"                        receivingBank: {",
									"                            type: 'string'",
									"                        },",
									"                        transDate: {",
									"                            type: 'string'",
									"                        },",
									"                        transTime: {",
									"                            type: 'string'",
									"                        },",
									"                        amount: {",
									"                            type: 'string'",
									"                        },",
									"                        countryCode: {",
									"                            type: 'string'",
									"                        },",
									"                        ref1: {",
									"                            type: 'string'",
									"                        },",
									"                        ref2: {",
									"                            type: 'string'",
									"                        },",
									"                        ref3: {",
									"                            type: 'string'",
									"                        },",
									"                        sender: {",
									"                            displayName: {",
									"                                type: 'string'",
									"                            },",
									"                            name: {",
									"                                type: 'string' ",
									"                            }",
									"                        },",
									"                        proxy: {",
									"                            type: {",
									"                                type: 'string'",
									"                            },",
									"                            value: {",
									"                                type: 'string' ",
									"                            }",
									"                        },",
									"                        account: {",
									"                            type: {",
									"                                type: 'string'",
									"                            },",
									"                            value: {",
									"                                type: 'string' ",
									"                            }",
									"                        }",
									"                },",
									"                receiver: {",
									"                        displayName: {",
									"                            type: 'string'",
									"                        },",
									"                        proxy: {",
									"                            type: {",
									"                                type: 'string'",
									"                            },",
									"                            value: {",
									"                                type: 'string' ",
									"                            }",
									"                        },",
									"                        additionalProperties: false",
									"                },",
									"                additionalProperties: false",
									"            }",
									"        };",
									"        pm.response.to.have.jsonSchema(schema);",
									"    });",
									"    let response = pm.response.json();",
									"    pm.collectionVariables.set(\"qrCodeId\", response.data.qrCodeId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							},
							{
								"key": "delay",
								"value": "200",
								"type": "text",
								"disabled": true
							},
							{
								"key": "mockup",
								"value": "true",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billerId\": \"123456789012301\",\n    \"destBank\": \"098\",\n    \"transRef\": \"325012011110IMF2063A57AB\",\n    \"reference1\": \"1112221112\",\n    \"reference2\": \"0011\",\n    \"reference3\": \"0012\",\n    \"amount\": \"1.60\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/pull-payment",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"pull-payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.unset(\"request-ref\");",
									"pm.collectionVariables.unset(\"reference1\");",
									"const moment = require('moment');",
									"",
									"pm.collectionVariables.set(\"request-ref\", moment().format(\"yyyyMMDDHHmmss\"));",
									"pm.collectionVariables.set(\"reference1\", moment().format(\"yyyyMMDDHHmmss01\"));",
									"pm.collectionVariables.set(\"requestDate\", moment().format(\"yyyy-MM-DD\"));",
									"pm.collectionVariables.set(\"requestTime\", moment().format(\"HH:mm:ss\"));",
									"pm.collectionVariables.set(\"transmit-date-time\", moment().format(\"yyyy-MM-DDTHH:mm:ss.855+07:00\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"{{billerId}}\",\n\t\"destBank\": \"098\",\n\t\"transRef\": \"325012011110IMF2063A57AB\",\n\t\"reference1\": \"{{reference1}}\",\n\t\"reference2\": \"\",\n\t\"reference3\": \"\",\n\t\"amount\": \"150.00\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200602 pull-payment failed - invalid partner signature",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"   "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}We1234_qqwr",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"{{billerId}}\",\n\t\"destBank\": \"098\",\n\t\"transRef\": \"325012011110IMF2063A57AB\",\n\t\"reference1\": \"{{reference1}}\",\n\t\"reference2\": \"\",\n\t\"reference3\": \"\",\n\t\"amount\": \"150.00\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/pull-payment",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"pull-payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200602_1 pull-payment failed - empty partner signature",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid format Signature\");",
									"    });",
									"         ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"{{billerId}}\",\n\t\"destBank\": \"014\",\n\t\"transRef\": \"20231109003001\",\n\t\"reference1\": \"{{reference1}}\",\n\t\"reference2\": \"\",\n\t\"reference3\": \"\",\n\t\"amount\": \"150.00\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/pull-payment",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"pull-payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.unset(\"request-ref\");",
									"pm.collectionVariables.unset(\"reference1\");",
									"",
									"const moment = require('moment');",
									"",
									"pm.collectionVariables.set(\"request-ref\", moment().format(\"yyyyMMDDHHmmss\"));",
									"pm.collectionVariables.set(\"reference1\", moment().format(\"yyyyMMDDHHmmss01\"));",
									"pm.collectionVariables.set(\"requestDate\", moment().format(\"yyyy-MM-DD\"));",
									"pm.collectionVariables.set(\"requestTime\", moment().format(\"HH:mm:ss\"));",
									"pm.collectionVariables.set(\"transmit-date-time\", moment().format(\"yyyy-MM-DDTHH:mm:ss.855+07:00\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"{{billerId}}\",\n\t\"destBank\": \"014\",\n\t\"transRef\": \"20231109003001\",\n\t\"reference1\": \"{{reference1}}\",\n\t\"reference2\": \"\",\n\t\"reference3\": \"\",\n\t\"amount\": \"150.00\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200603 pull-payment failed - data is different from generating partner token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									" pm.test(\"Status code is 401\", function () {",
									"        pm.response.to.have.status(401);",
									"});",
									"",
									"   "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"{{billerId}}\",\n\t\"destBank\": \"014\",\n\t\"transRef\": \"20221109003001\",\n\t\"reference1\": \"{{reference1}}\",\n\t\"reference2\": \"\",\n\t\"reference3\": \"\",\n\t\"amount\": \"850.00\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/pull-payment",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"pull-payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"{{billerId}}\",\n\t\"destBank\": \"014\",\n\t\"transRef\": \"20231109003001\",\n\t\"reference1\": \"{{reference1}}\",\n\t\"reference2\": \"\",\n\t\"reference3\": \"\",\n\t\"amount\": \"150.00\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200604 pull-payment failed - Request-Ref longer than 50",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "ref70d849f8-f6c1-11ec-b939-0242ac1200020100190891234 ",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"{{billerId}}\",\n\t\"destBank\": \"014\",\n\t\"transRef\": \"20231109003001\",\n\t\"reference1\": \"{{reference1}}\",\n\t\"reference2\": \"\",\n\t\"reference3\": \"\",\n\t\"amount\": \"150.00\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/pull-payment",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"pull-payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"{{billerId}}\",\n\t\"destBank\": \"014\",\n\t\"transRef\": \"20231109003001\",\n\t\"reference1\": \"{{reference1}}\",\n\t\"reference2\": \"\",\n\t\"reference3\": \"\",\n\t\"amount\": \"150.00\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200605 pull-payment failed - invalid Transmit-Date-Time",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "2023-11-10T10:04:11.855",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"{{billerId}}\",\n\t\"destBank\": \"014\",\n\t\"transRef\": \"20231109003001\",\n\t\"reference1\": \"{{reference1}}\",\n\t\"reference2\": \"\",\n\t\"reference3\": \"\",\n\t\"amount\": \"150.00\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/pull-payment",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"pull-payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"\",\n\t\"destBank\": \"014\",\n\t\"transRef\": \"20231109003001\",\n\t\"reference1\": \"{{reference1}}\",\n\t\"reference2\": \"\",\n\t\"reference3\": \"\",\n\t\"amount\": \"150.00\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200606 pull-payment failed - invalid billerId is empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 403\", function () {",
									"        pm.response.to.have.status(403);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"052\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Unknown Biller ID\");",
									"    });",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"\",\n\t\"destBank\": \"014\",\n\t\"transRef\": \"20231109003001\",\n\t\"reference1\": \"{{reference1}}\",\n\t\"reference2\": \"\",\n\t\"reference3\": \"\",\n\t\"amount\": \"150.00\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/pull-payment",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"pull-payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"202311100018\",\n\t\"destBank\": \"014\",\n\t\"transRef\": \"20231109003001\",\n\t\"reference1\": \"{{reference1}}\",\n\t\"reference2\": \"\",\n\t\"reference3\": \"\",\n\t\"amount\": \"150.00\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200606_1 pull-payment failed - invalid billerId is less than 13",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 403\", function () {",
									"        pm.response.to.have.status(403);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"052\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Unknown Biller ID\");",
									"    });",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"202311100018\",\n\t\"destBank\": \"014\",\n\t\"transRef\": \"20231109003001\",\n\t\"reference1\": \"{{reference1}}\",\n\t\"reference2\": \"\",\n\t\"reference3\": \"\",\n\t\"amount\": \"150.00\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/pull-payment",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"pull-payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"2023111000189891\",\n\t\"destBank\": \"014\",\n\t\"transRef\": \"20231109003001\",\n\t\"reference1\": \"{{reference1}}\",\n\t\"reference2\": \"\",\n\t\"reference3\": \"\",\n\t\"amount\": \"150.00\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200606_2 pull-payment failed - invalid billerId is longer than 15",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 403\", function () {",
									"        pm.response.to.have.status(403);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"052\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Unknown Biller ID\");",
									"    });",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"2023111000189891\",\n\t\"destBank\": \"014\",\n\t\"transRef\": \"20231109003001\",\n\t\"reference1\": \"{{reference1}}\",\n\t\"reference2\": \"\",\n\t\"reference3\": \"\",\n\t\"amount\": \"150.00\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/pull-payment",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"pull-payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"2023111000u4r01\",\n\t\"destBank\": \"014\",\n\t\"transRef\": \"20231109003001\",\n\t\"reference1\": \"{{reference1}}\",\n\t\"reference2\": \"\",\n\t\"reference3\": \"\",\n\t\"amount\": \"150.00\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200606_3 pull-payment failed - invalid billerId numbers and characters",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 403\", function () {",
									"        pm.response.to.have.status(403);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"052\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Unknown Biller ID\");",
									"    });",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"2023111000u4r01\",\n\t\"destBank\": \"014\",\n\t\"transRef\": \"20231109003001\",\n\t\"reference1\": \"{{reference1}}\",\n\t\"reference2\": \"\",\n\t\"reference3\": \"\",\n\t\"amount\": \"150.00\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/pull-payment",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"pull-payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"{{billerId}}\",\n\t\"destBank\": \"014\",\n\t\"transRef\": \"\",\n\t\"reference1\": \"{{reference1}}\",\n\t\"reference2\": \"\",\n\t\"reference3\": \"\",\n\t\"amount\": \"150.00\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200607 pull-payment failed - invalid transRef is empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Body contains string\",() => {",
									"    let jsonData = pm.response.json()",
									"    pm.expect(jsonData.responseCode).to.include(\"211\");",
									"    pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"{{billerId}}\",\n\t\"destBank\": \"014\",\n\t\"transRef\": \"\",\n\t\"reference1\": \"{{reference1}}\",\n\t\"reference2\": \"\",\n\t\"reference3\": \"\",\n\t\"amount\": \"150.00\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/pull-payment",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"pull-payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"{{billerId}}\",\n\t\"destBank\": \"014\",\n\t\"transRef\": \"ref2023111001\",\n\t\"reference1\": \"{{reference1}}\",\n\t\"reference2\": \"\",\n\t\"reference3\": \"\",\n\t\"amount\": \"150.00\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200607_1 pull-payment failed - invalid transRef is small letters and numbers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Body contains string\",() => {",
									"    let jsonData = pm.response.json()",
									"    pm.expect(jsonData.responseCode).to.include(\"211\");",
									"    pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"{{billerId}}\",\n\t\"destBank\": \"014\",\n\t\"transRef\": \"ref2023111001\",\n\t\"reference1\": \"{{reference1}}\",\n\t\"reference2\": \"\",\n\t\"reference3\": \"\",\n\t\"amount\": \"150.00\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/pull-payment",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"pull-payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"{{billerId}}\",\n\t\"destBank\": \"014\",\n\t\"transRef\": \"REF202311100119890910010201\",\n\t\"reference1\": \"{{reference1}}\",\n\t\"reference2\": \"\",\n\t\"reference3\": \"\",\n\t\"amount\": \"150.00\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200607_2 pull-payment failed - invalid transRef is longer than 25",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Body contains string\",() => {",
									"    let jsonData = pm.response.json()",
									"    pm.expect(jsonData.responseCode).to.include(\"211\");",
									"    pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"{{billerId}}\",\n\t\"destBank\": \"014\",\n\t\"transRef\": \"REF202311100119890910010201\",\n\t\"reference1\": \"{{reference1}}\",\n\t\"reference2\": \"\",\n\t\"reference3\": \"\",\n\t\"amount\": \"150.00\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/pull-payment",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"pull-payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"{{billerId}}\",\n\t\"destBank\": \"\",\n\t\"transRef\": \"REF20231110011989091\",\n\t\"reference1\": \"{{reference1}}\",\n\t\"reference2\": \"\",\n\t\"reference3\": \"\",\n\t\"amount\": \"150.00\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200608 pull-payment failed - invalid deskBank is empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Body contains string\",() => {",
									"    let jsonData = pm.response.json()",
									"    pm.expect(jsonData.responseCode).to.include(\"211\");",
									"    pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"{{billerId}}\",\n\t\"destBank\": \"\",\n\t\"transRef\": \"REF20231110011989091\",\n\t\"reference1\": \"{{reference1}}\",\n\t\"reference2\": \"\",\n\t\"reference3\": \"\",\n\t\"amount\": \"150.00\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/pull-payment",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"pull-payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"{{billerId}}\",\n\t\"destBank\": \"0117\",\n\t\"transRef\": \"REF20231110011989091\",\n\t\"reference1\": \"{{reference1}}\",\n\t\"reference2\": \"\",\n\t\"reference3\": \"\",\n\t\"amount\": \"150.00\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200608_1 pull-payment failed - invalid deskBank is longer than 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Body contains string\",() => {",
									"    let jsonData = pm.response.json()",
									"    pm.expect(jsonData.responseCode).to.include(\"211\");",
									"    pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"{{billerId}}\",\n\t\"destBank\": \"0117\",\n\t\"transRef\": \"REF20231110011989091\",\n\t\"reference1\": \"{{reference1}}\",\n\t\"reference2\": \"\",\n\t\"reference3\": \"\",\n\t\"amount\": \"150.00\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/pull-payment",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"pull-payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"{{billerId}}\",\n\t\"destBank\": \"001\",\n\t\"transRef\": \"REF20231110011989091\",\n\t\"reference1\": \"\",\n\t\"reference2\": \"\",\n\t\"reference3\": \"\",\n\t\"amount\": \"150.00\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200609 pull-payment failed - invalid reference1 is empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Body contains string\",() => {",
									"    let jsonData = pm.response.json()",
									"    pm.expect(jsonData.responseCode).to.include(\"211\");",
									"    pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"{{billerId}}\",\n\t\"destBank\": \"001\",\n\t\"transRef\": \"REF20231110011989091\",\n\t\"reference1\": \"\",\n\t\"reference2\": \"\",\n\t\"reference3\": \"\",\n\t\"amount\": \"150.00\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/pull-payment",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"pull-payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"{{billerId}}\",\n\t\"destBank\": \"001\",\n\t\"transRef\": \"REF20231110011989091\",\n\t\"reference1\": \"ref0010011\",\n\t\"reference2\": \"\",\n\t\"reference3\": \"\",\n\t\"amount\": \"150.00\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200609_1 pull-payment failed - invalid reference1 small letters and numbers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Body contains string\",() => {",
									"    let jsonData = pm.response.json()",
									"    pm.expect(jsonData.responseCode).to.include(\"211\");",
									"    pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"{{billerId}}\",\n\t\"destBank\": \"001\",\n\t\"transRef\": \"REF20231110011989091\",\n\t\"reference1\": \"ref0010011\",\n\t\"reference2\": \"\",\n\t\"reference3\": \"\",\n\t\"amount\": \"150.00\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/pull-payment",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"pull-payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"{{billerId}}\",\n\t\"destBank\": \"001\",\n\t\"transRef\": \"REF20231110011989091\",\n\t\"reference1\": \"REF2023001001119890123456789181\",\n\t\"reference2\": \"\",\n\t\"reference3\": \"\",\n\t\"amount\": \"150.00\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200609_2 pull-payment failed - invalid reference1 is longer than 30",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Body contains string\",() => {",
									"    let jsonData = pm.response.json()",
									"    pm.expect(jsonData.responseCode).to.include(\"211\");",
									"    pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"{{billerId}}\",\n\t\"destBank\": \"001\",\n\t\"transRef\": \"REF20231110011989091\",\n\t\"reference1\": \"REF2023001001119890123456789181\",\n\t\"reference2\": \"\",\n\t\"reference3\": \"\",\n\t\"amount\": \"150.00\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/pull-payment",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"pull-payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"{{billerId}}\",\n\t\"destBank\": \"001\",\n\t\"transRef\": \"REF20231110011989091\",\n\t\"reference1\": \"REF12023111301\",\n\t\"reference2\": \"ref22023111302\",\n\t\"reference3\": \"\",\n\t\"amount\": \"150.00\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200610 pull-payment failed - invalid reference2 small letters and numbers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Body contains string\",() => {",
									"    let jsonData = pm.response.json()",
									"    pm.expect(jsonData.responseCode).to.include(\"211\");",
									"    pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"{{billerId}}\",\n\t\"destBank\": \"001\",\n\t\"transRef\": \"REF20231110011989091\",\n\t\"reference1\": \"REF12023111301\",\n\t\"reference2\": \"ref22023111302\",\n\t\"reference3\": \"\",\n\t\"amount\": \"150.00\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/pull-payment",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"pull-payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"{{billerId}}\",\n\t\"destBank\": \"001\",\n\t\"transRef\": \"REF20231110011989091\",\n\t\"reference1\": \"REF12023100101\",\n\t\"reference2\": \"REF2023001001119890123456789181\",\n\t\"reference3\": \"\",\n\t\"amount\": \"150.00\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200610_1 pull-payment failed - invalid reference2 is longer than 30",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Body contains string\",() => {",
									"    let jsonData = pm.response.json()",
									"    pm.expect(jsonData.responseCode).to.include(\"211\");",
									"    pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"{{billerId}}\",\n\t\"destBank\": \"001\",\n\t\"transRef\": \"REF20231110011989091\",\n\t\"reference1\": \"REF12023100101\",\n\t\"reference2\": \"REF2023001001119890123456789181\",\n\t\"reference3\": \"\",\n\t\"amount\": \"150.00\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/pull-payment",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"pull-payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"{{billerId}}\",\n\t\"destBank\": \"001\",\n\t\"transRef\": \"REF20231110011989091\",\n\t\"reference1\": \"REF12023111301\",\n\t\"reference2\": \"REF22023111302\",\n\t\"reference3\": \"ref32023111302\",\n\t\"amount\": \"150.00\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200611 pull-payment failed - invalid reference3 small letters and numbers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Body contains string\",() => {",
									"    let jsonData = pm.response.json()",
									"    pm.expect(jsonData.responseCode).to.include(\"211\");",
									"    pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"{{billerId}}\",\n\t\"destBank\": \"001\",\n\t\"transRef\": \"REF20231110011989091\",\n\t\"reference1\": \"REF12023111301\",\n\t\"reference2\": \"REF22023111302\",\n\t\"reference3\": \"ref32023111302\",\n\t\"amount\": \"150.00\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/pull-payment",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"pull-payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"{{billerId}}\",\n\t\"destBank\": \"001\",\n\t\"transRef\": \"REF20231110011989091\",\n\t\"reference1\": \"REF12023100101\",\n\t\"reference2\": \"REF22023100101\",\n\t\"reference3\": \"REF32023001001119890123456789181\",\n\t\"amount\": \"150.00\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200611_1 pull-payment failed - invalid reference3 is longer than 30 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Body contains string\",() => {",
									"    let jsonData = pm.response.json()",
									"    pm.expect(jsonData.responseCode).to.include(\"211\");",
									"    pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"{{billerId}}\",\n\t\"destBank\": \"001\",\n\t\"transRef\": \"REF20231110011989091\",\n\t\"reference1\": \"REF12023100101\",\n\t\"reference2\": \"REF22023100101\",\n\t\"reference3\": \"REF32023001001119890123456789181\",\n\t\"amount\": \"150.00\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/pull-payment",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"pull-payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"{{billerId}}\",\n\t\"destBank\": \"001\",\n\t\"transRef\": \"REF20231110011989091\",\n\t\"reference1\": \"REF12023100101\",\n\t\"reference2\": \"REF22023100101\",\n\t\"reference3\": \"REF320230010011\",\n\t\"amount\": \"\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200612 pull-payment failed - invalid amount is empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Body contains string\",() => {",
									"    let jsonData = pm.response.json()",
									"    pm.expect(jsonData.responseCode).to.include(\"211\");",
									"    pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"{{billerId}}\",\n\t\"destBank\": \"001\",\n\t\"transRef\": \"REF20231110011989091\",\n\t\"reference1\": \"REF12023100101\",\n\t\"reference2\": \"REF22023100101\",\n\t\"reference3\": \"REF320230010011\",\n\t\"amount\": \"\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/pull-payment",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"pull-payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"{{billerId}}\",\n\t\"destBank\": \"001\",\n\t\"transRef\": \"REF20231110011989091\",\n\t\"reference1\": \"REF12023100101\",\n\t\"reference2\": \"REF22023100101\",\n\t\"reference3\": \"REF320230010011\",\n\t\"amount\": \"0\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200612_1 pull-payment failed - invalid amount is 0",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Body contains string\",() => {",
									"    let jsonData = pm.response.json()",
									"    pm.expect(jsonData.responseCode).to.include(\"211\");",
									"    pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"{{billerId}}\",\n\t\"destBank\": \"001\",\n\t\"transRef\": \"REF20231110011989091\",\n\t\"reference1\": \"REF12023100101\",\n\t\"reference2\": \"REF22023100101\",\n\t\"reference3\": \"REF320230010011\",\n\t\"amount\": \"0\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/pull-payment",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"pull-payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"{{billerId}}\",\n\t\"destBank\": \"001\",\n\t\"transRef\": \"REF20231110011989091\",\n\t\"reference1\": \"REF12023100101\",\n\t\"reference2\": \"REF22023100101\",\n\t\"reference3\": \"REF320230010011\",\n\t\"amount\": \"999\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200612_2 pull-payment failed - invalid amount is not decimal",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Body contains string\",() => {",
									"    let jsonData = pm.response.json()",
									"    pm.expect(jsonData.responseCode).to.include(\"211\");",
									"    pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"{{billerId}}\",\n\t\"destBank\": \"001\",\n\t\"transRef\": \"REF20231110011989091\",\n\t\"reference1\": \"REF12023100101\",\n\t\"reference2\": \"REF22023100101\",\n\t\"reference3\": \"REF320230010011\",\n\t\"amount\": \"999\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/pull-payment",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"pull-payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"{{billerId}}\",\n\t\"destBank\": \"001\",\n\t\"transRef\": \"REF20231110011989091\",\n\t\"reference1\": \"REF12023100101\",\n\t\"reference2\": \"REF22023100101\",\n\t\"reference3\": \"REF320230010011\",\n\t\"amount\": \"10000000000016.16\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200612_3 pull-payment failed - invalid amount is longer than 16",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is JSON\", function () {",
									"    pm.response.to.be.json;",
									"",
									"    pm.test(\"Status code is 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    pm.test(\"Body contains string\",() => {",
									"        let jsonData = pm.response.json()",
									"        pm.expect(jsonData.responseCode).to.include(\"211\");",
									"        pm.expect(jsonData.responseMesg).to.include(\"Invalid data\");",
									"    });",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"{{billerId}}\",\n\t\"destBank\": \"001\",\n\t\"transRef\": \"REF20231110011989091\",\n\t\"reference1\": \"REF12023100101\",\n\t\"reference2\": \"REF22023100101\",\n\t\"reference3\": \"REF320230010011\",\n\t\"amount\": \"10000000000016.16\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/pull-payment",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"pull-payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "[JWTGen] partner signature",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.collectionVariables.set(\"partner_signature\", response.signature);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"{{billerId}}\",\n\t\"destBank\": \"001\",\n\t\"transRef\": \"REF20231110011989091\",\n\t\"reference1\": \"REF12023100101\",\n\t\"reference2\": \"REF22023100101\",\n\t\"reference3\": \"REF320230010011\",\n\t\"amount\": \"500\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/jwt/partner",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"jwt",
								"partner"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200612_4 BAPI-430 pull-payment failed - method OPTION",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 405\", function () {",
									"    pm.response.to.have.status(405);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "OPTIONS",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"{{billerId}}\",\n\t\"destBank\": \"001\",\n\t\"transRef\": \"REF20231110011989091\",\n\t\"reference1\": \"REF12023100101\",\n\t\"reference2\": \"REF22023100101\",\n\t\"reference3\": \"REF320230010011\",\n\t\"amount\": \"500\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/pull-payment",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"pull-payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200612_5 BAPI-430 pull-payment failed - method PUT",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 405\", function () {",
									"    pm.response.to.have.status(405);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"{{billerId}}\",\n\t\"destBank\": \"001\",\n\t\"transRef\": \"REF20231110011989091\",\n\t\"reference1\": \"REF12023100101\",\n\t\"reference2\": \"REF22023100101\",\n\t\"reference3\": \"REF320230010011\",\n\t\"amount\": \"500\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/pull-payment",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"pull-payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200612_5 BAPI-430 pull-payment failed - method PATCH",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 405\", function () {",
									"    pm.response.to.have.status(405);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"{{billerId}}\",\n\t\"destBank\": \"001\",\n\t\"transRef\": \"REF20231110011989091\",\n\t\"reference1\": \"REF12023100101\",\n\t\"reference2\": \"REF22023100101\",\n\t\"reference3\": \"REF320230010011\",\n\t\"amount\": \"500\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/pull-payment",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"pull-payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200612_5 BAPI-430 pull-payment failed - method DELETE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 405\", function () {",
									"    pm.response.to.have.status(405);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"{{billerId}}\",\n\t\"destBank\": \"001\",\n\t\"transRef\": \"REF20231110011989091\",\n\t\"reference1\": \"REF12023100101\",\n\t\"reference2\": \"REF22023100101\",\n\t\"reference3\": \"REF320230010011\",\n\t\"amount\": \"500\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/pull-payment",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"pull-payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200612_8 BAPI-430 pull-payment failed - method COPY",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 405\", function () {",
									"    pm.response.to.have.status(405);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "COPY",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"{{billerId-pullpayment}}\",\n\t\"destBank\": \"001\",\n\t\"transRef\": \"REF20231110011989091\",\n\t\"reference1\": \"REF12023100101\",\n\t\"reference2\": \"REF22023100101\",\n\t\"reference3\": \"REF320230010011\",\n\t\"amount\": \"500\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/pull-payment",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"pull-payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200612_9 BAPI-430 pull-payment failed - method TRACE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 405\", function () {",
									"    pm.response.to.have.status(405);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "TRACE",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"{{billerId-pullpayment}}\",\n\t\"destBank\": \"001\",\n\t\"transRef\": \"REF20231110011989091\",\n\t\"reference1\": \"REF12023100101\",\n\t\"reference2\": \"REF22023100101\",\n\t\"reference3\": \"REF320230010011\",\n\t\"amount\": \"500\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/pull-payment",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"pull-payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_V200612_10 BAPI-430 pull-payment failed - method SEARCH",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 405\", function () {",
									"    pm.response.to.have.status(405);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "SEARCH",
						"header": [
							{
								"key": "Signature",
								"value": "{{partner_signature}}",
								"type": "text"
							},
							{
								"key": "Transmit-Date-Time",
								"value": "{{transmit-date-time}}",
								"type": "text"
							},
							{
								"key": "Request-Ref",
								"value": "{{request-ref}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://something.com",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"billerId\": \"{{billerId-pullpayment}}\",\n\t\"destBank\": \"001\",\n\t\"transRef\": \"REF20231110011989091\",\n\t\"reference1\": \"REF12023100101\",\n\t\"reference2\": \"REF22023100101\",\n\t\"reference3\": \"REF320230010011\",\n\t\"amount\": \"500\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-host}}/biller/v1/pull-payment",
							"host": [
								"{{api-host}}"
							],
							"path": [
								"biller",
								"v1",
								"pull-payment"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "accessToken",
			"value": "910uJlJ01GGUOGovXkgA4NWojG3A"
		},
		{
			"key": "request-ref",
			"value": "20231204180249"
		},
		{
			"key": "reference1",
			"value": "2023120418024901"
		},
		{
			"key": "billerId",
			"value": "123456789012301"
		},
		{
			"key": "requestDate",
			"value": "2023-12-06"
		},
		{
			"key": "requestTime",
			"value": "13:03:27"
		},
		{
			"key": "transmit-date-time",
			"value": "2023-12-06T13:03:27.855+07:00"
		},
		{
			"key": "partner_signature",
			"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJib2R5Ijoie1xuICAgIFwiYmlsbGVySWRcIjogXCIyMDIzMTIwNjEzMDMyNzBcIixcbiAgICBcInJlZmVyZW5jZTFcIjogXCIyMDIzMTIwNjEzMDMyNzAxXCIsXG4gICAgXCJyZWZlcmVuY2UyXCI6XCJSRUYxMTAwMDNcIixcbiAgICBcInJlZmVyZW5jZTNcIjpcIlwiLFxuICAgIFwidHJhbnNEYXRlXCI6IFwiMjAyMy0xMi0wNlwiLFxuICAgIFwidHJhbnNUaW1lXCI6IFwiMTM6MDM6MjdcIixcbiAgICBcImFtb3VudFwiOiBcIjE4OTAuMDBcIixcbiAgICBcImFwcHJvdmFsQ29kZVwiOiBcIjA3YzdiMVwiXG59IiwiZXhwIjoxNzAxOTI5MDI2LCJpYXQiOjE3MDE4NDI2MjYsImp0aSI6IjE0NDg1MzNlLTkwZjUtNDlkYy05Yzk2LThmNGVhMTk2ZWRiZSJ9.FpFHlYggCZ1xxzxawoz5E8PZzWehfYU4SbwpdXop1P3J3pDCkfU1WIWLdKjIOfHZ2ldQDIrF6ylRUEd4dDjQkrWT3Nuk_83esIxADmEHxaxqG5Kyl2bAtRmD9XPrImhVR29H3VBbXYpq9JxczqXl8-NXgJpARVr4u_KrVK_vV0Ko50Oa0h3twitAiC-bi07541t-f__TTUbE46hcVZeyRC7lfJBIuilbzk4403Jw5C3tYZ2NYiJ67H1h9y6rY7H6oR53n2YLAIWiCP0anNsNX_psxadg5J6JbEVheQxkxuMrrj9xL3dmUrxi_myYcfJNbOo9MIMucF89teQUCtaqb8r-vUr2nDt_b5XkUzpclwpq51y5v7j-_2bKHwg_CYWSdownJqGDffQwX8QWzxU-Emo5erqVo6KpF0fVzvFzQRBXIEZlFGrpSZiSkuiyTsFwpatI4sWjBLFeonFAa-ONiKYMXJUKb_VL42dffFf0ltid5nuCio3RjVDX9z1673_ldDTRj4yu6ef7duJWy1P8CTHea-RTiY2RkRhORI9eqeRoqVG64qSPOeIYFY2Z94zAyIjaT37mJkv5HY4L3WXi7FrJVSkN7rxaOT9rkciEcgNJgU7IHFXAnKe1UtYo9zggJ6K9IRdg-zwtb3ni2OCzVjM6TQMShLS2CIvlP6Q3yYo"
		},
		{
			"key": "qrCodeId",
			"value": "9bdc49c8822245ec9"
		},
		{
			"key": "paymentRequestId",
			"value": "bf143610b0d7407fa"
		},
		{
			"key": "approvalCode",
			"value": "28a2a4"
		},
		{
			"key": "request-ref-verifyrefund",
			"value": "04122023174604"
		},
		{
			"key": "reference1-verifyrefund",
			"value": "0412202317460401"
		},
		{
			"key": "approvalCode-verifyrefund",
			"value": "ce39a9"
		},
		{
			"key": "request-ref-reversal",
			"value": "12062023125555"
		},
		{
			"key": "reference1-reversal",
			"value": "1206202312555501"
		},
		{
			"key": "approvalCode-reversal",
			"value": "ce39a9"
		},
		{
			"key": "request-ref-advice",
			"value": "20231206130327"
		},
		{
			"key": "reference1-advice",
			"value": "2023120613032701"
		},
		{
			"key": "approvalCode-advice",
			"value": "ce39a9"
		},
		{
			"key": "billerId-globalnoti-app",
			"value": "20231204174513"
		},
		{
			"key": "reference1-globalnoti-app",
			"value": "2023120417451301"
		},
		{
			"key": "payment-date-time",
			"value": "2023-12-04T17:45:13.855+07:00"
		},
		{
			"key": "bbl_signature",
			"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJib2R5Ijoie1xuICAgIFwidHlwZVwiOiBcIkFwcFRvQXBwXCIsXG4gICAgXCJkYXRhXCI6IHtcbiAgICAgICAgXCJzZXJ2aWNlQ29kZVwiOiBcIkJCTFRFU1QxXCIsXG4gICAgICAgIFwiYmlsbGVySWRcIjogXCIyMDIzMTIwNDE3NDUxM1wiLFxuICAgICAgICBcInJlZmVyZW5jZTFcIjogXCIyMDIzMTIwNDE3NDUxMzAxXCIsXG4gICAgICAgIFwicmVmZXJlbmNlMlwiOiBcIkFQUDEwMDFcIixcbiAgICAgICAgXCJ0b3RhbEFtb3VudFwiOiBcIjE5OTkuODBcIixcbiAgICAgICAgXCJjdXJyZW5jeUNvZGVcIjogXCJUSEJcIixcbiAgICAgICAgXCJwYXltZW50U3RhdHVzXCI6IFwiU1VDQ0VTU1wiLFxuICAgICAgICBcInBheW1lbnRBY2NvdW50XCI6IFwieHh4LXgteDAwNTUteFwiLFxuICAgICAgICBcInBheW1lbnREYXRlVGltZVwiOiBcIjIwMjMtMTItMDRUMTc6NDU6MTMuODU1KzA3OjAwXCIsXG4gICAgICAgIFwicGF5bWVudFJlZmVyZW5jZUlEXCI6IFwiMTIzNDU2XCIsXG4gICAgICAgIFwic2xpcEltYWdlXCI6IFwiaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUFVQUFBQUZDQVlBQUFDTmJ5YmxBQUFBSEVsRVFWUUkxMlA0Ly84L3czOEdJQVhESUJLRTBESHhnbGpOQkFBTzlUWEwwWTRPSHdBQUFBQkpSVTVFcmtKZ2dnPT1cIlxuICAgIH1cbn0iLCJleHAiOjE3MDE3NzMxMTMsImlhdCI6MTcwMTY4NjcxMywianRpIjoiMGM3ODY2ZTAtMGE3NC00MGJkLWI4MDItMTY4NGQ1MjBkMTJjIn0.rAvVTFz0f3QjIX_AYPeXRM4f8_G5qDTy60RvtImAb0-GSm-Lf8Ebais2_q_UpFYt6rPzm3IXfwve25J24R2jbxRCqi3F8VU1s4-vvmlvQHHxJbjDlQp5CWnQ_-tDF32M17gp2Nw0YVkJ29s6gE66A6k71nWEFHnYwpob6o5bwt2dPHT04o7XWn0mNoV3R-kmDmJh-rfxZgaawZFAWsezdrHXP1gwsbzshl67NL-6hF4XURlnXoqesHOVcdhfVvkDyrdR4X73S74eXuTOqATtIgd9OdzebvWT4G71zgz-G7Qnaq98B5PXYfBs8YJ9RBs9OQmA7hUQPeQ_DPkDmBwVb7C4ZW_cs-NSv6-N2oPtULWkbKKMYmV8UAFBNQ5k3zH5J6_5dw2ioEBVEq_rytz5UZmzXaq8YxrlodhGfLDawXz5tGldYvFkLshDtMJz4YI4SK4VeZSZWEANXnN2IZ_LFgXo5cnhQmn_g1a6W_Ic2ZE5uk2aD7Bz88ktPItj7gZB2EtVtcbjPfZrP2wRNEGbFyowF-1wSusCGm__ZWTSDFcQUMKwdMc4UKVlyaUwqKWPX6sV7m86eGU5CeJJc0iktJGh0mYh-2M2MStZFq3gzdUkXpS-cDz8INoAj1idQ2vJtrPytfoM4kfCHqgBADTmZC8VCexXamGf7aoXd3EJXsA"
		},
		{
			"key": "request-ref-globalnoti-thaiqr",
			"value": "07112023124145"
		},
		{
			"key": "billerId-globalnoti-thaiqr",
			"value": "071120231241450"
		},
		{
			"key": "reference1-globalnoti-thaiqr",
			"value": "0711202312414501"
		},
		{
			"key": "requestDate-globalnoti-thaiqr",
			"value": "2023-11-05"
		},
		{
			"key": "requestTime-globalnoti-thaiqr",
			"value": "19:19:01"
		},
		{
			"key": "transmit-date-time-globalnoti",
			"value": "2023-11-07T12:41:49.855+07:00"
		},
		{
			"key": "transDate-globalnoti-thaiqr",
			"value": "2023-11-07"
		},
		{
			"key": "transTime-globalnoti-thaiqr",
			"value": "12:41:45"
		},
		{
			"key": "payeeId-globalnoti-smartbill",
			"value": "07112023124149"
		},
		{
			"key": "billerId-globalnoti-smartbill",
			"value": "071120231241490"
		},
		{
			"key": "reference1-globalnoti-smartbill",
			"value": "0711202312414901"
		},
		{
			"key": "transDate-globalnoti-smartbill",
			"value": "2023-11-07"
		},
		{
			"key": "transTime-globalnoti-smartbill",
			"value": "12:41:49"
		},
		{
			"key": "api-host",
			"value": "http://api-sandboxdev.test.bbl:5999",
			"type": "string"
		},
		{
			"key": "app-key",
			"value": "O0hAk5T26zRMoDcAHhcahoxnTPogys4H",
			"type": "string"
		},
		{
			"key": "app-secret",
			"value": "C9WYXKEmqjT8RcWT",
			"type": "string"
		},
		{
			"key": "partner-server-basic-username",
			"value": "thisisusername",
			"type": "string"
		},
		{
			"key": "partner-server-basic-password",
			"value": "thisispassword",
			"type": "string"
		},
		{
			"key": "mock-host",
			"value": "https://mockapi.techlabth.com",
			"type": "string"
		},
		{
			"key": "basicAuthDevPortalUser",
			"value": "dev_portal",
			"type": "string"
		},
		{
			"key": "basicAuthDevPortalPassword",
			"value": "dev_portal",
			"type": "string"
		},
		{
			"key": "billerId-reversal",
			"value": ""
		},
		{
			"key": "billerId-pwc",
			"value": "",
			"type": "string"
		}
	]
}